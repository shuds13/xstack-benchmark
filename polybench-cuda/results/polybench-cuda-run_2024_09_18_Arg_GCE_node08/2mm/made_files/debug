CBackend: iterating function 1759: llvm.dbg.declare
CBackend: iterating function 1759: llvm.nvvm.read.ptx.sreg.ntid.x
CBackend: iterating function 1759: llvm.nvvm.read.ptx.sreg.ctaid.x
CBackend: iterating function 1759: llvm.nvvm.read.ptx.sreg.tid.x
CBackend: iterating function 1759: llvm.nvvm.read.ptx.sreg.ntid.y
CBackend: iterating function 1759: llvm.nvvm.read.ptx.sreg.ctaid.y
CBackend: iterating function 1759: llvm.nvvm.read.ptx.sreg.tid.y
CBackend: iterating function 1759: cudaSetupArgument
CBackend: iterating function 1759: cudaLaunch
CBackend: iterating function 1759: _Z10num_blocksss
CBackend: printing function 1770_Z10num_blocksss
=========LOOP PROFILES=========
SUSAN: BB:
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762

SUSAN: entry block is a linear region! entry
global: @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
type: [8 x i8]
global: @.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
type: [2 x i8]
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
========== IV MAP==========
currInst :  %conv = sext i16 %num to i32, !dbg !755
currInst :  %add = add nsw i32 %conv, %conv1, !dbg !757
currInst :  %sub = sub nsw i32 %add, 1, !dbg !758
currInst :  %div = sdiv i32 %sub, %conv2, !dbg !760
currInst :  %conv3 = trunc i32 %div to i16, !dbg !761
currInst :  ret i16 %conv3, !dbg !762
currInst :  %conv1 = sext i16 %factor to i32, !dbg !756
currInst :  %add = add nsw i32 %conv, %conv1, !dbg !757
currInst :  %sub = sub nsw i32 %add, 1, !dbg !758
currInst :  %div = sdiv i32 %sub, %conv2, !dbg !760
currInst :  %conv3 = trunc i32 %div to i16, !dbg !761
currInst :  ret i16 %conv3, !dbg !762
currInst :  %add = add nsw i32 %conv, %conv1, !dbg !757
currInst :  %sub = sub nsw i32 %add, 1, !dbg !758
currInst :  %div = sdiv i32 %sub, %conv2, !dbg !760
SUSAN: add () to inst:   %add = add nsw i32 %conv, %conv1, !dbg !757
currInst :  %sub = sub nsw i32 %add, 1, !dbg !758
currInst :  %div = sdiv i32 %sub, %conv2, !dbg !760
SUSAN: add () to inst:   %sub = sub nsw i32 %add, 1, !dbg !758
currInst :  %conv2 = sext i16 %factor to i32, !dbg !759
currInst :  %div = sdiv i32 %sub, %conv2, !dbg !760
currInst :  %conv3 = trunc i32 %div to i16, !dbg !761
currInst :  ret i16 %conv3, !dbg !762
currInst :  %div = sdiv i32 %sub, %conv2, !dbg !760
currInst :  %conv3 = trunc i32 %div to i16, !dbg !761
currInst :  ret i16 %conv3, !dbg !762
currInst :  %conv3 = trunc i32 %div to i16, !dbg !761
currInst :  ret i16 %conv3, !dbg !762
SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

SUSAN: found argument 6346: i16 %num
CBackend: varname: num
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
SUSAN: found argument 6346: i16 %factor
CBackend: varname: factor
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
=========================SUSAN: IR NAMING BEFORE=====================
i16 %num -> num
i16 %factor -> factor
SUSAN: inst:  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
SUSAN: inst:  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
SUSAN: inst:  %conv = sext i16 %num to i32, !dbg !755
SUSAN: inst:  %conv1 = sext i16 %factor to i32, !dbg !756
SUSAN: inst:  %add = add nsw i32 %conv, %conv1, !dbg !757
SUSAN: inst:  %sub = sub nsw i32 %add, 1, !dbg !758
SUSAN: inst:  %conv2 = sext i16 %factor to i32, !dbg !759
SUSAN: inst:  %div = sdiv i32 %sub, %conv2, !dbg !760
SUSAN: inst:  %conv3 = trunc i32 %div to i16, !dbg !761
SUSAN: inst:  ret i16 %conv3, !dbg !762
=========================SUSAN: IR NAMING=====================
i16 %num -> num
i16 %factor -> factor
SUSAN: getting value name for: i16 %num
inst from IRNaming: i16 %num
original name : num
returning name: num
SUSAN: getting value name for: i16 %factor
inst from IRNaming: i16 %factor
original name : factor
returning name: factor
SUSAN: am I here 6807??
Linear Region with entry block: entry
SUSAN: printing bb:entry
CBEBackend: printing bb 7082 entry
CBackend: writeOperand 3595:   %conv3 = trunc i32 %div to i16, !dbg !761
SUSAN: visiting cast:   %conv3 = trunc i32 %div to i16, !dbg !761
CBackend: writeOperand 3595:   %div = sdiv i32 %sub, %conv2, !dbg !760
CBackend: writeOperand 3595:   %sub = sub nsw i32 %add, 1, !dbg !758
CBackend: writeOperand 3595:   %add = add nsw i32 %conv, %conv1, !dbg !757
CBackend: writeOperand 3595:   %conv = sext i16 %num to i32, !dbg !755
SUSAN: visiting cast:   %conv = sext i16 %num to i32, !dbg !755
CBackend: writeOperand 3595: i16 %num
SUSAN: getting value name for: i16 %num
inst from IRNaming: i16 %num
original name : num
returning name: num
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv1 = sext i16 %factor to i32, !dbg !756
SUSAN: visiting cast:   %conv1 = sext i16 %factor to i32, !dbg !756
CBackend: writeOperand 3595: i16 %factor
SUSAN: getting value name for: i16 %factor
inst from IRNaming: i16 %factor
original name : factor
returning name: factor
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv2 = sext i16 %factor to i32, !dbg !759
SUSAN: visiting cast:   %conv2 = sext i16 %factor to i32, !dbg !759
CBackend: writeOperand 3595: i16 %factor
SUSAN: getting value name for: i16 %factor
inst from IRNaming: i16 %factor
original name : factor
returning name: factor
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: iterating function 1759: main
CBackend: printing function 1770main
=========LOOP PROFILES=========
SUSAN: opnd0  %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: opnd1i32 1
SUSAN: BB:
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !751, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i8** %argv, metadata !753, metadata !DIExpression()), !dbg !752
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !754
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !754
  %call = call i32 @atoi(i8* %0) #10, !dbg !755
  call void @llvm.dbg.value(metadata i32 %call, metadata !756, metadata !DIExpression()), !dbg !752
  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !757
  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !757
  %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
  %conv = sext i32 %call2 to i64, !dbg !758
  call void @llvm.dbg.value(metadata i64 %conv, metadata !759, metadata !DIExpression()), !dbg !752
  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !760
  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !760
  %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
  %conv5 = sext i32 %call4 to i64, !dbg !761
  call void @llvm.dbg.value(metadata i64 %conv5, metadata !762, metadata !DIExpression()), !dbg !752
  %arrayidx6 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !763
  %3 = load i8*, i8** %arrayidx6, align 8, !dbg !763
  %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
  %conv8 = sext i32 %call7 to i64, !dbg !764
  call void @llvm.dbg.value(metadata i64 %conv8, metadata !765, metadata !DIExpression()), !dbg !752
  %arrayidx9 = getelementptr inbounds i8*, i8** %argv, i64 5, !dbg !766
  %4 = load i8*, i8** %arrayidx9, align 8, !dbg !766
  %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
  %conv11 = sext i32 %call10 to i64, !dbg !767
  call void @llvm.dbg.value(metadata i64 %conv11, metadata !768, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !769, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !770, metadata !DIExpression()), !dbg !752
  %mul = mul nsw i64 %conv, %conv8, !dbg !771
  %mul12 = mul i64 %mul, 8, !dbg !772, !tulip.target.datasize !773
  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
  %5 = bitcast i8* %call13 to double*, !dbg !776
  call void @llvm.dbg.value(metadata double* %5, metadata !777, metadata !DIExpression()), !dbg !752
  %mul14 = mul nsw i64 %conv8, %conv5, !dbg !778
  %mul15 = mul i64 %mul14, 8, !dbg !779, !tulip.target.datasize !780
  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
  %6 = bitcast i8* %call16 to double*, !dbg !783
  call void @llvm.dbg.value(metadata double* %6, metadata !784, metadata !DIExpression()), !dbg !752
  %mul17 = mul nsw i64 %conv11, %conv5, !dbg !785
  %mul18 = mul i64 %mul17, 8, !dbg !786, !tulip.target.datasize !787
  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
  %7 = bitcast i8* %call19 to double*, !dbg !790
  call void @llvm.dbg.value(metadata double* %7, metadata !791, metadata !DIExpression()), !dbg !752
  %mul20 = mul nsw i64 %conv, %conv11, !dbg !792
  %mul21 = mul i64 %mul20, 8, !dbg !793, !tulip.target.datasize !794
  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
  %8 = bitcast i8* %call22 to double*, !dbg !799
  call void @llvm.dbg.value(metadata double* %8, metadata !800, metadata !DIExpression()), !dbg !752
  %mul23 = mul nsw i64 %conv, %conv5, !dbg !801
  %mul24 = mul i64 %mul23, 8, !dbg !802, !tulip.target.datasize !803
  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
  %9 = bitcast i8* %call25 to double*, !dbg !806
  call void @llvm.dbg.value(metadata double* %9, metadata !807, metadata !DIExpression()), !dbg !752
  %conv26 = trunc i64 %conv to i32, !dbg !808
  %conv27 = trunc i64 %conv5 to i32, !dbg !809
  %conv28 = trunc i64 %conv8 to i32, !dbg !810
  %conv29 = trunc i64 %conv11 to i32, !dbg !811
  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
  %10 = bitcast double* %5 to i8*, !dbg !813
  %11 = bitcast double* %5 to i8*, !dbg !814
  %mul45 = mul nsw i64 %conv, %conv8, !dbg !815
  %mul46 = mul i64 %mul45, 8, !dbg !816
  %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
  %conv60 = trunc i64 %conv to i32, !dbg !819
  %conv61 = trunc i64 %conv5 to i32, !dbg !820
  %conv62 = trunc i64 %conv8 to i32, !dbg !821
  %conv63 = trunc i64 %conv11 to i32, !dbg !822
  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !823
  %12 = bitcast double* %8 to i8*, !dbg !824
  %13 = bitcast double* %8 to i8*, !dbg !825
  %mul64 = mul nsw i64 %conv, %conv11, !dbg !826
  %mul65 = mul i64 %mul64, 8, !dbg !827
  %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
  %cmp = icmp eq i32 %call, 1, !dbg !829
  br i1 %cmp, label %if.then, label %if.end, !dbg !831

SUSAN: BB:
if.then:                                          ; preds = %entry
  %conv74 = trunc i64 %conv to i32, !dbg !832
  %conv75 = trunc i64 %conv8 to i32, !dbg !833
  call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !834
  br label %if.end, !dbg !834

SUSAN: BB:
if.end:                                           ; preds = %if.then, %entry
  %14 = bitcast double* %9 to i8*, !dbg !835
  call void @free(i8* %14) #11, !dbg !836
  %15 = bitcast double* %5 to i8*, !dbg !837
  call void @free(i8* %15) #11, !dbg !838
  %16 = bitcast double* %6 to i8*, !dbg !839
  call void @free(i8* %16) #11, !dbg !840
  %17 = bitcast double* %7 to i8*, !dbg !841
  call void @free(i8* %17) #11, !dbg !842
  %18 = bitcast double* %8 to i8*, !dbg !843
  call void @free(i8* %18) #11, !dbg !844
  ret i32 0, !dbg !845

SUSAN: entry block is an if-else region! entry
creating if-else region for entryBB: entry
1
1
SUSAN: marking both branches
SUSAN: entry block is a linear region! if.then
CBERegion: including if.then in a linear region
CBERegion: nextBB 
if.then:                                          ; preds = %entry
  %conv74 = trunc i64 %conv to i32, !dbg !832
  %conv75 = trunc i64 %conv8 to i32, !dbg !833
  call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !834
  br label %if.end, !dbg !834

SUSAN: currbb 562: if.end
CBERegion: nextEntryBB 121: if.end
=================SUSAN: END OF marking region : entry==================
SUSAN: nextRegionEntryBB if.end
SUSAN: entry block is a linear region! if.end
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %argc, metadata !766, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i8** %argv, metadata !768, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %call, metadata !771, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %conv, metadata !774, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %conv5, metadata !777, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %conv8, metadata !780, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %conv11, metadata !783, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !784, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !785, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: found malloc 1403:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %5, metadata !792, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: found malloc 1403:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %6, metadata !799, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: found malloc 1403:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %7, metadata !806, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: found malloc 1403:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %8, metadata !815, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: found malloc 1403:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %9, metadata !822, metadata !DIExpression()), !dbg !767
SUSAN: CI at 1400:   call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
SUSAN: CI at 1400:   %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
SUSAN: CI at 1400:   call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !823
SUSAN: CI at 1400:   %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
SUSAN: CI at 1400:   call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !834
SUSAN: CI at 1400:   call void @free(i8* %14) #11, !dbg !836
SUSAN: CI at 1400:   call void @free(i8* %15) #11, !dbg !838
SUSAN: CI at 1400:   call void @free(i8* %16) #11, !dbg !840
SUSAN: CI at 1400:   call void @free(i8* %17) #11, !dbg !842
SUSAN: CI at 1400:   call void @free(i8* %18) #11, !dbg !844
========== IV MAP==========
currInst :  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !754
currInst :  %0 = load i8*, i8** %arrayidx, align 8, !dbg !754
currInst :  %call = call i32 @atoi(i8* %0) #10, !dbg !755
currInst :  %0 = load i8*, i8** %arrayidx, align 8, !dbg !754
currInst :  %call = call i32 @atoi(i8* %0) #10, !dbg !755
currInst :  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !757
currInst :  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !757
currInst :  %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
currInst :  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !757
currInst :  %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
currInst :  %conv = sext i32 %call2 to i64, !dbg !758
currInst :  %mul = mul nsw i64 %conv, %conv8, !dbg !771
currInst :  %mul20 = mul nsw i64 %conv, %conv11, !dbg !792
currInst :  %mul23 = mul nsw i64 %conv, %conv5, !dbg !801
currInst :  %conv26 = trunc i64 %conv to i32, !dbg !808
currInst :  %mul45 = mul nsw i64 %conv, %conv8, !dbg !815
currInst :  %conv60 = trunc i64 %conv to i32, !dbg !819
currInst :  %mul64 = mul nsw i64 %conv, %conv11, !dbg !826
currInst :  %conv74 = trunc i64 %conv to i32, !dbg !832
currInst :  %mul12 = mul i64 %mul, 8, !dbg !772, !tulip.target.datasize !773
currInst :  %mul21 = mul i64 %mul20, 8, !dbg !793, !tulip.target.datasize !794
currInst :  %mul24 = mul i64 %mul23, 8, !dbg !802, !tulip.target.datasize !803
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !760
currInst :  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !760
currInst :  %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
currInst :  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !760
currInst :  %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
currInst :  %conv5 = sext i32 %call4 to i64, !dbg !761
currInst :  %mul14 = mul nsw i64 %conv8, %conv5, !dbg !778
currInst :  %mul17 = mul nsw i64 %conv11, %conv5, !dbg !785
currInst :  %mul23 = mul nsw i64 %conv, %conv5, !dbg !801
currInst :  %conv27 = trunc i64 %conv5 to i32, !dbg !809
currInst :  %conv61 = trunc i64 %conv5 to i32, !dbg !820
currInst :  %mul15 = mul i64 %mul14, 8, !dbg !779, !tulip.target.datasize !780
currInst :  %mul18 = mul i64 %mul17, 8, !dbg !786, !tulip.target.datasize !787
currInst :  %mul24 = mul i64 %mul23, 8, !dbg !802, !tulip.target.datasize !803
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %arrayidx6 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !763
currInst :  %3 = load i8*, i8** %arrayidx6, align 8, !dbg !763
currInst :  %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
currInst :  %3 = load i8*, i8** %arrayidx6, align 8, !dbg !763
currInst :  %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
currInst :  %conv8 = sext i32 %call7 to i64, !dbg !764
currInst :  %mul = mul nsw i64 %conv, %conv8, !dbg !771
currInst :  %mul14 = mul nsw i64 %conv8, %conv5, !dbg !778
currInst :  %conv28 = trunc i64 %conv8 to i32, !dbg !810
currInst :  %mul45 = mul nsw i64 %conv, %conv8, !dbg !815
currInst :  %conv62 = trunc i64 %conv8 to i32, !dbg !821
currInst :  %conv75 = trunc i64 %conv8 to i32, !dbg !833
currInst :  %mul12 = mul i64 %mul, 8, !dbg !772, !tulip.target.datasize !773
currInst :  %mul15 = mul i64 %mul14, 8, !dbg !779, !tulip.target.datasize !780
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %arrayidx9 = getelementptr inbounds i8*, i8** %argv, i64 5, !dbg !766
currInst :  %4 = load i8*, i8** %arrayidx9, align 8, !dbg !766
currInst :  %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
currInst :  %4 = load i8*, i8** %arrayidx9, align 8, !dbg !766
currInst :  %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
currInst :  %conv11 = sext i32 %call10 to i64, !dbg !767
currInst :  %mul17 = mul nsw i64 %conv11, %conv5, !dbg !785
currInst :  %mul20 = mul nsw i64 %conv, %conv11, !dbg !792
currInst :  %conv29 = trunc i64 %conv11 to i32, !dbg !811
currInst :  %conv63 = trunc i64 %conv11 to i32, !dbg !822
currInst :  %mul64 = mul nsw i64 %conv, %conv11, !dbg !826
currInst :  %mul18 = mul i64 %mul17, 8, !dbg !786, !tulip.target.datasize !787
currInst :  %mul21 = mul i64 %mul20, 8, !dbg !793, !tulip.target.datasize !794
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %mul = mul nsw i64 %conv, %conv8, !dbg !771
currInst :  %mul12 = mul i64 %mul, 8, !dbg !772, !tulip.target.datasize !773
currInst :  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
currInst :  %mul12 = mul i64 %mul, 8, !dbg !772, !tulip.target.datasize !773
currInst :  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
currInst :  %5 = bitcast i8* %call13 to double*, !dbg !776
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %mul14 = mul nsw i64 %conv8, %conv5, !dbg !778
currInst :  %mul15 = mul i64 %mul14, 8, !dbg !779, !tulip.target.datasize !780
currInst :  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
currInst :  %mul15 = mul i64 %mul14, 8, !dbg !779, !tulip.target.datasize !780
currInst :  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
currInst :  %6 = bitcast i8* %call16 to double*, !dbg !783
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %mul17 = mul nsw i64 %conv11, %conv5, !dbg !785
currInst :  %mul18 = mul i64 %mul17, 8, !dbg !786, !tulip.target.datasize !787
currInst :  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
currInst :  %mul18 = mul i64 %mul17, 8, !dbg !786, !tulip.target.datasize !787
currInst :  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
currInst :  %7 = bitcast i8* %call19 to double*, !dbg !790
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %mul20 = mul nsw i64 %conv, %conv11, !dbg !792
currInst :  %mul21 = mul i64 %mul20, 8, !dbg !793, !tulip.target.datasize !794
currInst :  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
currInst :  %mul21 = mul i64 %mul20, 8, !dbg !793, !tulip.target.datasize !794
currInst :  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
currInst :  %8 = bitcast i8* %call22 to double*, !dbg !799
currInst :  %13 = bitcast double* %8 to i8*, !dbg !825
currInst :  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !823
currInst :  %mul23 = mul nsw i64 %conv, %conv5, !dbg !801
currInst :  %mul24 = mul i64 %mul23, 8, !dbg !802, !tulip.target.datasize !803
currInst :  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
currInst :  %mul24 = mul i64 %mul23, 8, !dbg !802, !tulip.target.datasize !803
currInst :  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
currInst :  %9 = bitcast i8* %call25 to double*, !dbg !806
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %conv26 = trunc i64 %conv to i32, !dbg !808
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %conv27 = trunc i64 %conv5 to i32, !dbg !809
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %conv28 = trunc i64 %conv8 to i32, !dbg !810
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %conv29 = trunc i64 %conv11 to i32, !dbg !811
currInst :  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
currInst :  %10 = bitcast double* %5 to i8*, !dbg !813
currInst :  %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
currInst :  %11 = bitcast double* %5 to i8*, !dbg !814
currInst :  %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
currInst :  %mul45 = mul nsw i64 %conv, %conv8, !dbg !815
currInst :  %mul46 = mul i64 %mul45, 8, !dbg !816
currInst :  %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
currInst :  %mul46 = mul i64 %mul45, 8, !dbg !816
currInst :  %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
currInst :  %conv60 = trunc i64 %conv to i32, !dbg !819
currInst :  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !823
currInst :  %conv61 = trunc i64 %conv5 to i32, !dbg !820
currInst :  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !823
currInst :  %conv62 = trunc i64 %conv8 to i32, !dbg !821
currInst :  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !823
currInst :  %conv63 = trunc i64 %conv11 to i32, !dbg !822
currInst :  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !823
currInst :  %12 = bitcast double* %8 to i8*, !dbg !824
currInst :  %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
currInst :  %13 = bitcast double* %8 to i8*, !dbg !825
currInst :  %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
currInst :  %mul64 = mul nsw i64 %conv, %conv11, !dbg !826
currInst :  %mul65 = mul i64 %mul64, 8, !dbg !827
currInst :  %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
currInst :  %mul65 = mul i64 %mul64, 8, !dbg !827
currInst :  %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
currInst :  %cmp = icmp eq i32 %call, 1, !dbg !829
currInst :  br i1 %cmp, label %if.then, label %if.end, !dbg !831
currInst :  %conv74 = trunc i64 %conv to i32, !dbg !832
currInst :  call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !834
currInst :  %conv75 = trunc i64 %conv8 to i32, !dbg !833
currInst :  call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !834
currInst :  %14 = bitcast double* %9 to i8*, !dbg !835
currInst :  call void @free(i8* %14) #11, !dbg !836
currInst :  %15 = bitcast double* %5 to i8*, !dbg !837
currInst :  call void @free(i8* %15) #11, !dbg !838
currInst :  %16 = bitcast double* %6 to i8*, !dbg !839
currInst :  call void @free(i8* %16) #11, !dbg !840
currInst :  %17 = bitcast double* %7 to i8*, !dbg !841
currInst :  call void @free(i8* %17) #11, !dbg !842
currInst :  %18 = bitcast double* %8 to i8*, !dbg !843
currInst :  call void @free(i8* %18) #11, !dbg !844
SUSAN: found double mallocs! 
malloc:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
castInst:   %5 = bitcast i8* %call13 to double*, !dbg !776
SUSAN: found double mallocs! 
malloc:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
castInst:   %6 = bitcast i8* %call16 to double*, !dbg !783
SUSAN: found double mallocs! 
malloc:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
castInst:   %7 = bitcast i8* %call19 to double*, !dbg !790
SUSAN: found double mallocs! 
malloc:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
castInst:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: found double mallocs! 
malloc:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
castInst:   %9 = bitcast i8* %call25 to double*, !dbg !806
SUSAN: getting value name for: 
; Function Attrs: noinline norecurse uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #3 !dbg !763 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !766, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i8** %argv, metadata !768, metadata !DIExpression()), !dbg !767
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !769
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !769
  %call = call i32 @atoi(i8* %0) #10, !dbg !770
  call void @llvm.dbg.value(metadata i32 %call, metadata !771, metadata !DIExpression()), !dbg !767
  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !772
  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !772
  %call2 = call i32 @atoi(i8* %1) #10, !dbg !773
  %conv = sext i32 %call2 to i64, !dbg !773
  call void @llvm.dbg.value(metadata i64 %conv, metadata !774, metadata !DIExpression()), !dbg !767
  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !775
  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !775
  %call4 = call i32 @atoi(i8* %2) #10, !dbg !776
  %conv5 = sext i32 %call4 to i64, !dbg !776
  call void @llvm.dbg.value(metadata i64 %conv5, metadata !777, metadata !DIExpression()), !dbg !767
  %arrayidx6 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !778
  %3 = load i8*, i8** %arrayidx6, align 8, !dbg !778
  %call7 = call i32 @atoi(i8* %3) #10, !dbg !779
  %conv8 = sext i32 %call7 to i64, !dbg !779
  call void @llvm.dbg.value(metadata i64 %conv8, metadata !780, metadata !DIExpression()), !dbg !767
  %arrayidx9 = getelementptr inbounds i8*, i8** %argv, i64 5, !dbg !781
  %4 = load i8*, i8** %arrayidx9, align 8, !dbg !781
  %call10 = call i32 @atoi(i8* %4) #10, !dbg !782
  %conv11 = sext i32 %call10 to i64, !dbg !782
  call void @llvm.dbg.value(metadata i64 %conv11, metadata !783, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !784, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !785, metadata !DIExpression()), !dbg !767
  %mul = mul nsw i64 %conv, %conv8, !dbg !786
  %mul12 = mul i64 %mul, 8, !dbg !787, !tulip.target.datasize !788
  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !789, !tulip.target.mapdata.to !790
  %5 = bitcast i8* %call13 to double*, !dbg !791
  call void @llvm.dbg.value(metadata double* %5, metadata !792, metadata !DIExpression()), !dbg !767
  %mul14 = mul nsw i64 %conv8, %conv5, !dbg !793
  %mul15 = mul i64 %mul14, 8, !dbg !794, !tulip.target.datasize !795
  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !796, !tulip.target.mapdata.to !797
  %6 = bitcast i8* %call16 to double*, !dbg !798
  call void @llvm.dbg.value(metadata double* %6, metadata !799, metadata !DIExpression()), !dbg !767
  %mul17 = mul nsw i64 %conv11, %conv5, !dbg !800
  %mul18 = mul i64 %mul17, 8, !dbg !801, !tulip.target.datasize !802
  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !803, !tulip.target.mapdata.to !804
  %7 = bitcast i8* %call19 to double*, !dbg !805
  call void @llvm.dbg.value(metadata double* %7, metadata !806, metadata !DIExpression()), !dbg !767
  %mul20 = mul nsw i64 %conv, %conv11, !dbg !807
  %mul21 = mul i64 %mul20, 8, !dbg !808, !tulip.target.datasize !809
  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !810, !tulip.target.mapdata.to !811, !tulip.target.mapdata.from !813
  %8 = bitcast i8* %call22 to double*, !dbg !814
  call void @llvm.dbg.value(metadata double* %8, metadata !815, metadata !DIExpression()), !dbg !767
  %mul23 = mul nsw i64 %conv, %conv5, !dbg !816
  %mul24 = mul i64 %mul23, 8, !dbg !817, !tulip.target.datasize !818
  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !819, !tulip.target.mapdata.to !820
  %9 = bitcast i8* %call25 to double*, !dbg !821
  call void @llvm.dbg.value(metadata double* %9, metadata !822, metadata !DIExpression()), !dbg !767
  %conv26 = trunc i64 %conv to i32, !dbg !823
  %conv27 = trunc i64 %conv5 to i32, !dbg !824
  %conv28 = trunc i64 %conv8 to i32, !dbg !825
  %conv29 = trunc i64 %conv11 to i32, !dbg !826
  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !827
  %10 = bitcast double* %5 to i8*, !dbg !828
  %11 = bitcast double* %5 to i8*, !dbg !829
  %mul45 = mul nsw i64 %conv, %conv8, !dbg !830
  %mul46 = mul i64 %mul45, 8, !dbg !831
  %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !832, !tulip.target.start.of.map !833
  %conv60 = trunc i64 %conv to i32, !dbg !834
  %conv61 = trunc i64 %conv5 to i32, !dbg !835
  %conv62 = trunc i64 %conv8 to i32, !dbg !836
  %conv63 = trunc i64 %conv11 to i32, !dbg !837
  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !838
  %12 = bitcast double* %8 to i8*, !dbg !839
  %13 = bitcast double* %8 to i8*, !dbg !840
  %mul64 = mul nsw i64 %conv, %conv11, !dbg !841
  %mul65 = mul i64 %mul64, 8, !dbg !842
  %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !843, !tulip.target.end.of.map !833
  %cmp = icmp eq i32 %call, 1, !dbg !844
  br i1 %cmp, label %if.then, label %if.end, !dbg !846

if.then:                                          ; preds = %entry
  %conv74 = trunc i64 %conv to i32, !dbg !847
  %conv75 = trunc i64 %conv8 to i32, !dbg !848
  call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !849
  br label %if.end, !dbg !849

if.end:                                           ; preds = %if.then, %entry
  %14 = bitcast double* %9 to i8*, !dbg !850
  call void @free(i8* %14) #11, !dbg !851
  %15 = bitcast double* %5 to i8*, !dbg !852
  call void @free(i8* %15) #11, !dbg !853
  %16 = bitcast double* %6 to i8*, !dbg !854
  call void @free(i8* %16) #11, !dbg !855
  %17 = bitcast double* %7 to i8*, !dbg !856
  call void @free(i8* %17) #11, !dbg !857
  %18 = bitcast double* %8 to i8*, !dbg !858
  call void @free(i8* %18) #11, !dbg !859
  ret i32 0, !dbg !860
}

SUSAN: found argument 6346: i32 %argc
CBackend: varname: argc
  call void @llvm.dbg.value(metadata i32 %argc, metadata !766, metadata !DIExpression()), !dbg !767
SUSAN: found argument 6346: i8** %argv
CBackend: varname: argv
  call void @llvm.dbg.value(metadata i8** %argv, metadata !768, metadata !DIExpression()), !dbg !767
=========================SUSAN: IR NAMING BEFORE=====================
i32 %argc -> argc
i8** %argv -> argv
  %call = call i32 @atoi(i8* %0) #10, !dbg !755 -> dump_code
  %conv = sext i32 %call2 to i64, !dbg !758 -> ni
  %conv5 = sext i32 %call4 to i64, !dbg !761 -> nj
  %conv8 = sext i32 %call7 to i64, !dbg !764 -> nk
  %conv11 = sext i32 %call10 to i64, !dbg !767 -> nl
  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775 -> A
  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782 -> B
  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789 -> C
  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798 -> D
  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805 -> tmp
SUSAN: inst:  %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %9, metadata !822, metadata !DIExpression()), !dbg !767
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv26 = trunc i64 %conv to i32, !dbg !808
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv27 = trunc i64 %conv5 to i32, !dbg !809
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv28 = trunc i64 %conv8 to i32, !dbg !810
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv29 = trunc i64 %conv11 to i32, !dbg !811
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !812
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %10 = bitcast double* %5 to i8*, !dbg !813
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %11 = bitcast double* %5 to i8*, !dbg !814
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %mul45 = mul nsw i64 %conv, %conv8, !dbg !815
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %mul46 = mul i64 %mul45, 8, !dbg !816
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv60 = trunc i64 %conv to i32, !dbg !819
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %argc, metadata !766, metadata !DIExpression()), !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i8** %argv, metadata !768, metadata !DIExpression()), !dbg !767
SUSAN: inst:  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !754
SUSAN: inst:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !754
SUSAN: inst:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %call, metadata !771, metadata !DIExpression()), !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: inst:  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !757
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: inst:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !757
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: inst:  %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: inst:  %conv = sext i32 %call2 to i64, !dbg !758
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %conv, metadata !774, metadata !DIExpression()), !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: inst:  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !760
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: inst:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !760
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: inst:  %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: inst:  %conv5 = sext i32 %call4 to i64, !dbg !761
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %conv5, metadata !777, metadata !DIExpression()), !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: inst:  %arrayidx6 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !763
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: inst:  %3 = load i8*, i8** %arrayidx6, align 8, !dbg !763
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: inst:  %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: inst:  %conv8 = sext i32 %call7 to i64, !dbg !764
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %conv8, metadata !780, metadata !DIExpression()), !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: inst:  %arrayidx9 = getelementptr inbounds i8*, i8** %argv, i64 5, !dbg !766
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: inst:  %4 = load i8*, i8** %arrayidx9, align 8, !dbg !766
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: inst:  %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: inst:  %conv11 = sext i32 %call10 to i64, !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %conv11, metadata !783, metadata !DIExpression()), !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !784, metadata !DIExpression()), !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !785, metadata !DIExpression()), !dbg !767
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul = mul nsw i64 %conv, %conv8, !dbg !771
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul12 = mul i64 %mul, 8, !dbg !772, !tulip.target.datasize !773
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %5 = bitcast i8* %call13 to double*, !dbg !776
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %5, metadata !792, metadata !DIExpression()), !dbg !767
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul14 = mul nsw i64 %conv8, %conv5, !dbg !778
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul15 = mul i64 %mul14, 8, !dbg !779, !tulip.target.datasize !780
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %6 = bitcast i8* %call16 to double*, !dbg !783
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %6, metadata !799, metadata !DIExpression()), !dbg !767
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul17 = mul nsw i64 %conv11, %conv5, !dbg !785
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul18 = mul i64 %mul17, 8, !dbg !786, !tulip.target.datasize !787
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %7 = bitcast i8* %call19 to double*, !dbg !790
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %7, metadata !806, metadata !DIExpression()), !dbg !767
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul20 = mul nsw i64 %conv, %conv11, !dbg !792
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul21 = mul i64 %mul20, 8, !dbg !793, !tulip.target.datasize !794
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %8 = bitcast i8* %call22 to double*, !dbg !799
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %8, metadata !815, metadata !DIExpression()), !dbg !767
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul23 = mul nsw i64 %conv, %conv5, !dbg !801
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %mul24 = mul i64 %mul23, 8, !dbg !802, !tulip.target.datasize !803
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: inst:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %9 = bitcast i8* %call25 to double*, !dbg !806
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv61 = trunc i64 %conv5 to i32, !dbg !820
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv62 = trunc i64 %conv8 to i32, !dbg !821
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv63 = trunc i64 %conv11 to i32, !dbg !822
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !823
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %12 = bitcast double* %8 to i8*, !dbg !824
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %13 = bitcast double* %8 to i8*, !dbg !825
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %mul64 = mul nsw i64 %conv, %conv11, !dbg !826
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %mul65 = mul i64 %mul64, 8, !dbg !827
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %cmp = icmp eq i32 %call, 1, !dbg !829
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  br i1 %cmp, label %if.then, label %if.end, !dbg !831
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv74 = trunc i64 %conv to i32, !dbg !832
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %conv75 = trunc i64 %conv8 to i32, !dbg !833
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !834
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  br label %if.end, !dbg !834
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %14 = bitcast double* %9 to i8*, !dbg !835
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @free(i8* %14) #11, !dbg !836
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %15 = bitcast double* %5 to i8*, !dbg !837
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @free(i8* %15) #11, !dbg !838
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %16 = bitcast double* %6 to i8*, !dbg !839
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @free(i8* %16) #11, !dbg !840
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %17 = bitcast double* %7 to i8*, !dbg !841
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @free(i8* %17) #11, !dbg !842
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  %18 = bitcast double* %8 to i8*, !dbg !843
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  call void @free(i8* %18) #11, !dbg !844
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: inst:  ret i32 0, !dbg !845
A:  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
B:  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
C:  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
D:  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
dump_code:  %call = call i32 @atoi(i8* %0) #10, !dbg !755
ni:  %conv = sext i32 %call2 to i64, !dbg !758
nj:  %conv5 = sext i32 %call4 to i64, !dbg !761
nk:  %conv8 = sext i32 %call7 to i64, !dbg !764
nl:  %conv11 = sext i32 %call10 to i64, !dbg !767
tmp:  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
=========================SUSAN: IR NAMING=====================
i32 %argc -> argc
i8** %argv -> argv
  %call = call i32 @atoi(i8* %0) #10, !dbg !755 -> dump_code
  %conv = sext i32 %call2 to i64, !dbg !758 -> ni
  %conv5 = sext i32 %call4 to i64, !dbg !761 -> nj
  %conv8 = sext i32 %call7 to i64, !dbg !764 -> nk
  %conv11 = sext i32 %call10 to i64, !dbg !767 -> nl
  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775 -> A
  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782 -> B
  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789 -> C
  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798 -> D
  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805 -> tmp
SUSAN: getting value name for:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
inst from IRNaming:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
original name : dump_code
returning name: dump_code
SUSAN: declaring varName 5298: dump_code
SUSAN: declared locals:
SUSAN: declaring 3252:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: getting value name for:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
inst from IRNaming:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
original name : dump_code
returning name: dump_code
SUSAN: declaring with reconstructed name 3286: dump_code
SUSAN: inst at 5950:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: declaring   %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: printing type at 5937: i32
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: declaring varName 5298: call2
SUSAN: declared locals:
dump_code
SUSAN: declaring 3252:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: inst at 5950:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: declaring   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: printing type at 5930: i64
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: declaring varName 5298: call4
SUSAN: declared locals:
call2
dump_code
SUSAN: declaring 3252:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: inst at 5950:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: declaring   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: printing type at 5930: i64
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: declaring varName 5298: call7
SUSAN: declared locals:
call2
call4
dump_code
SUSAN: declaring 3252:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: inst at 5950:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: declaring   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: printing type at 5930: i64
SUSAN: getting value name for:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: declaring varName 5298: call10
SUSAN: declared locals:
call2
call4
call7
dump_code
SUSAN: declaring 3252:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: getting value name for:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: inst at 5950:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: declaring   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: printing type at 5930: i64
SUSAN: getting value name for:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
inst from IRNaming:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
original name : A
returning name: A
SUSAN: declaring varName 5298: A
SUSAN: declared locals:
call10
call2
call4
call7
dump_code
SUSAN: declaring 3252:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: getting value name for:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
inst from IRNaming:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
original name : A
returning name: A
SUSAN: declaring with reconstructed name 3286: A
SUSAN: inst at 5950:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: declaring   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
inst from IRNaming:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
original name : B
returning name: B
SUSAN: declaring varName 5298: B
SUSAN: declared locals:
A
call10
call2
call4
call7
dump_code
SUSAN: declaring 3252:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: getting value name for:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
inst from IRNaming:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
original name : B
returning name: B
SUSAN: declaring with reconstructed name 3286: B
SUSAN: inst at 5950:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: declaring   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
inst from IRNaming:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
original name : C
returning name: C
SUSAN: declaring varName 5298: C
SUSAN: declared locals:
A
B
call10
call2
call4
call7
dump_code
SUSAN: declaring 3252:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: getting value name for:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
inst from IRNaming:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
original name : C
returning name: C
SUSAN: declaring with reconstructed name 3286: C
SUSAN: inst at 5950:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: declaring   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
inst from IRNaming:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
original name : D
returning name: D
SUSAN: declaring varName 5298: D
SUSAN: declared locals:
A
B
C
call10
call2
call4
call7
dump_code
SUSAN: declaring 3252:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: getting value name for:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
inst from IRNaming:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
original name : D
returning name: D
SUSAN: declaring with reconstructed name 3286: D
SUSAN: inst at 5950:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: declaring   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
inst from IRNaming:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
original name : tmp
returning name: tmp
SUSAN: declaring varName 5298: tmp
SUSAN: declared locals:
A
B
C
D
call10
call2
call4
call7
dump_code
SUSAN: declaring 3252:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: getting value name for:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
inst from IRNaming:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
original name : tmp
returning name: tmp
SUSAN: declaring with reconstructed name 3286: tmp
SUSAN: inst at 5950:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: declaring   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
SUSAN: declaring varName 5298: call47
SUSAN: declared locals:
A
B
C
D
call10
call2
call4
call7
dump_code
tmp
SUSAN: declaring 3252:   %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
SUSAN: getting value name for:   %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
SUSAN: inst at 5950:   %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
SUSAN: declaring   %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !817, !tulip.target.start.of.map !818
SUSAN: printing type at 5937: i32
SUSAN: getting value name for:   %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
SUSAN: declaring varName 5298: call66
SUSAN: declared locals:
A
B
C
D
call10
call2
call4
call47
call7
dump_code
tmp
SUSAN: declaring 3252:   %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
SUSAN: getting value name for:   %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
SUSAN: inst at 5950:   %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
SUSAN: declaring   %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !828, !tulip.target.end.of.map !818
SUSAN: printing type at 5937: i32
SUSAN: am I here 6807??
IfElse Region with entry block: entry
thenSubRegions : 
SUSAN: declaring 3252:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: getting value name for:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
inst from IRNaming:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
original name : dump_code
returning name: dump_code
SUSAN: declaring with reconstructed name 3286: dump_code
SUSAN: getting value name for:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
inst from IRNaming:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
original name : dump_code
returning name: dump_code
CBackend: writeOperand 3595: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

SUSAN: getting value name for: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %0 = load i8*, i8** %arrayidx, align 8, !dbg !754
SUSAN: loadInst:   %0 = load i8*, i8** %arrayidx, align 8, !dbg !754
SUSAN: GEPINST:   %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !754
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !754
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:i8** %argv
SUSAN: writing ptr 9994: i8** %argv
SUSAN: getting value name for: i8** %argv
inst from IRNaming: i8** %argv
original name : argv
returning name: argv
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
CBackend: writeOperand 3595: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

SUSAN: getting value name for: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %1 = load i8*, i8** %arrayidx1, align 8, !dbg !757
SUSAN: loadInst:   %1 = load i8*, i8** %arrayidx1, align 8, !dbg !757
SUSAN: GEPINST:   %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !757
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !757
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:i8** %argv
SUSAN: writing ptr 9994: i8** %argv
SUSAN: getting value name for: i8** %argv
inst from IRNaming: i8** %argv
original name : argv
returning name: argv
CBackend: writeOperand 3595: i64 2
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
CBackend: writeOperand 3595: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

SUSAN: getting value name for: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %2 = load i8*, i8** %arrayidx3, align 8, !dbg !760
SUSAN: loadInst:   %2 = load i8*, i8** %arrayidx3, align 8, !dbg !760
SUSAN: GEPINST:   %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !760
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !760
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:i8** %argv
SUSAN: writing ptr 9994: i8** %argv
SUSAN: getting value name for: i8** %argv
inst from IRNaming: i8** %argv
original name : argv
returning name: argv
CBackend: writeOperand 3595: i64 3
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
CBackend: writeOperand 3595: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

SUSAN: getting value name for: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %3 = load i8*, i8** %arrayidx6, align 8, !dbg !763
SUSAN: loadInst:   %3 = load i8*, i8** %arrayidx6, align 8, !dbg !763
SUSAN: GEPINST:   %arrayidx6 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !763
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx6 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !763
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:i8** %argv
SUSAN: writing ptr 9994: i8** %argv
SUSAN: getting value name for: i8** %argv
inst from IRNaming: i8** %argv
original name : argv
returning name: argv
CBackend: writeOperand 3595: i64 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: getting value name for:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: getting value name for:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
CBackend: writeOperand 3595: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

SUSAN: getting value name for: 
; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %4 = load i8*, i8** %arrayidx9, align 8, !dbg !766
SUSAN: loadInst:   %4 = load i8*, i8** %arrayidx9, align 8, !dbg !766
SUSAN: GEPINST:   %arrayidx9 = getelementptr inbounds i8*, i8** %argv, i64 5, !dbg !766
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx9 = getelementptr inbounds i8*, i8** %argv, i64 5, !dbg !766
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:i8** %argv
SUSAN: writing ptr 9994: i8** %argv
SUSAN: getting value name for: i8** %argv
inst from IRNaming: i8** %argv
original name : argv
returning name: argv
CBackend: writeOperand 3595: i64 5
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: getting value name for:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
inst from IRNaming:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
original name : A
returning name: A
SUSAN: declaring with reconstructed name 3286: A
SUSAN: getting value name for:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
inst from IRNaming:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
original name : A
returning name: A
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %mul12 = mul i64 %mul, 8, !dbg !772, !tulip.target.datasize !773
CBackend: writeOperand 3595:   %mul = mul nsw i64 %conv, %conv8, !dbg !771
CBackend: writeOperand 3595:   %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: visiting cast:   %conv = sext i32 %call2 to i64, !dbg !758
CBackend: writeOperand 3595:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: visiting cast:   %conv8 = sext i32 %call7 to i64, !dbg !764
CBackend: writeOperand 3595:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 8
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: getting value name for:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
inst from IRNaming:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
original name : B
returning name: B
SUSAN: declaring with reconstructed name 3286: B
SUSAN: getting value name for:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
inst from IRNaming:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
original name : B
returning name: B
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %mul15 = mul i64 %mul14, 8, !dbg !779, !tulip.target.datasize !780
CBackend: writeOperand 3595:   %mul14 = mul nsw i64 %conv8, %conv5, !dbg !778
CBackend: writeOperand 3595:   %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: visiting cast:   %conv8 = sext i32 %call7 to i64, !dbg !764
CBackend: writeOperand 3595:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: visiting cast:   %conv5 = sext i32 %call4 to i64, !dbg !761
CBackend: writeOperand 3595:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 8
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: getting value name for:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
inst from IRNaming:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
original name : C
returning name: C
SUSAN: declaring with reconstructed name 3286: C
SUSAN: getting value name for:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
inst from IRNaming:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
original name : C
returning name: C
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %mul18 = mul i64 %mul17, 8, !dbg !786, !tulip.target.datasize !787
CBackend: writeOperand 3595:   %mul17 = mul nsw i64 %conv11, %conv5, !dbg !785
CBackend: writeOperand 3595:   %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: visiting cast:   %conv11 = sext i32 %call10 to i64, !dbg !767
CBackend: writeOperand 3595:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: getting value name for:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: visiting cast:   %conv5 = sext i32 %call4 to i64, !dbg !761
CBackend: writeOperand 3595:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 8
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: getting value name for:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
inst from IRNaming:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
original name : D
returning name: D
SUSAN: declaring with reconstructed name 3286: D
SUSAN: getting value name for:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
inst from IRNaming:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
original name : D
returning name: D
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %mul21 = mul i64 %mul20, 8, !dbg !793, !tulip.target.datasize !794
CBackend: writeOperand 3595:   %mul20 = mul nsw i64 %conv, %conv11, !dbg !792
CBackend: writeOperand 3595:   %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: visiting cast:   %conv = sext i32 %call2 to i64, !dbg !758
CBackend: writeOperand 3595:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: visiting cast:   %conv11 = sext i32 %call10 to i64, !dbg !767
CBackend: writeOperand 3595:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: getting value name for:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 8
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: getting value name for:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
inst from IRNaming:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
original name : tmp
returning name: tmp
SUSAN: declaring with reconstructed name 3286: tmp
SUSAN: getting value name for:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
inst from IRNaming:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
original name : tmp
returning name: tmp
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %mul24 = mul i64 %mul23, 8, !dbg !802, !tulip.target.datasize !803
CBackend: writeOperand 3595:   %mul23 = mul nsw i64 %conv, %conv5, !dbg !801
CBackend: writeOperand 3595:   %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: visiting cast:   %conv = sext i32 %call2 to i64, !dbg !758
CBackend: writeOperand 3595:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: visiting cast:   %conv5 = sext i32 %call4 to i64, !dbg !761
CBackend: writeOperand 3595:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 8
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: 
; Function Attrs: noinline nounwind uwtable
define internal void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double* %A, double* %B, double* %C, double* %D, double* %tmp) #2 !dbg !861 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !864, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nj, metadata !866, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nk, metadata !867, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nl, metadata !868, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %A, metadata !869, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %B, metadata !870, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %C, metadata !871, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %D, metadata !872, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %tmp, metadata !873, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %0 = sext i32 %nk to i64, !dbg !875
  %1 = sext i32 %ni to i64, !dbg !875
  %2 = sext i32 %ni to i64, !dbg !875
  br label %for.cond, !dbg !875

for.cond:                                         ; preds = %for.inc7, %entry
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !877
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !878
  br i1 %cmp, label %for.body, label %for.end9, !dbg !880

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond1, !dbg !882

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !884
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !885
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !887

for.body3:                                        ; preds = %for.cond1
  %3 = trunc i64 %indvars.iv28 to i32, !dbg !888
  %conv = sitofp i32 %3 to double, !dbg !888
  %4 = trunc i64 %indvars.iv25 to i32, !dbg !889
  %conv4 = sitofp i32 %4 to double, !dbg !889
  %mul = fmul contract double %conv, %conv4, !dbg !890
  %conv5 = sitofp i32 %ni to double, !dbg !891
  %div = fdiv double %mul, %conv5, !dbg !892
  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !893
  %6 = add nsw i64 %5, %indvars.iv25, !dbg !894
  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !895
  store double %div, double* %arrayidx, align 8, !dbg !896
  br label %for.inc, !dbg !895

for.inc:                                          ; preds = %for.body3
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !897
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond1, !dbg !898, !llvm.loop !899

for.end:                                          ; preds = %for.cond1
  br label %for.inc7, !dbg !900

for.inc7:                                         ; preds = %for.end
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !901
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond, !dbg !902, !llvm.loop !903

for.end9:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %7 = sext i32 %nj to i64, !dbg !905
  %8 = sext i32 %nk to i64, !dbg !905
  %9 = sext i32 %nk to i64, !dbg !905
  br label %for.cond10, !dbg !905

for.cond10:                                       ; preds = %for.inc29, %for.end9
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !907
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !908
  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !910

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond13, !dbg !911

for.cond13:                                       ; preds = %for.inc26, %for.body12
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !913
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !914
  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !916

for.body15:                                       ; preds = %for.cond13
  %10 = trunc i64 %indvars.iv22 to i32, !dbg !917
  %conv16 = sitofp i32 %10 to double, !dbg !917
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !918
  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !919
  %conv18 = sitofp i32 %11 to double, !dbg !919
  %mul19 = fmul contract double %conv16, %conv18, !dbg !920
  %conv20 = sitofp i32 %nj to double, !dbg !921
  %div21 = fdiv double %mul19, %conv20, !dbg !922
  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !923
  %13 = add nsw i64 %12, %indvars.iv19, !dbg !924
  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !925
  store double %div21, double* %arrayidx25, align 8, !dbg !926
  br label %for.inc26, !dbg !925

for.inc26:                                        ; preds = %for.body15
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond13, !dbg !927, !llvm.loop !928

for.end28:                                        ; preds = %for.cond13
  br label %for.inc29, !dbg !929

for.inc29:                                        ; preds = %for.end28
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !930
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond10, !dbg !931, !llvm.loop !932

for.end31:                                        ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %14 = sext i32 %nj to i64, !dbg !934
  %15 = sext i32 %nl to i64, !dbg !934
  %16 = sext i32 %nl to i64, !dbg !934
  br label %for.cond32, !dbg !934

for.cond32:                                       ; preds = %for.inc51, %for.end31
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !936
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !937
  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !939

for.body34:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond35, !dbg !940

for.cond35:                                       ; preds = %for.inc48, %for.body34
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !942
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !943
  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !945

for.body37:                                       ; preds = %for.cond35
  %17 = trunc i64 %indvars.iv16 to i32, !dbg !946
  %conv38 = sitofp i32 %17 to double, !dbg !946
  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !947
  %19 = trunc i64 %18 to i32, !dbg !948
  %conv40 = sitofp i32 %19 to double, !dbg !948
  %mul41 = fmul contract double %conv38, %conv40, !dbg !949
  %conv42 = sitofp i32 %nl to double, !dbg !950
  %div43 = fdiv double %mul41, %conv42, !dbg !951
  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !952
  %21 = add nsw i64 %20, %indvars.iv12, !dbg !953
  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !954
  store double %div43, double* %arrayidx47, align 8, !dbg !955
  br label %for.inc48, !dbg !954

for.inc48:                                        ; preds = %for.body37
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !956
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond35, !dbg !957, !llvm.loop !958

for.end50:                                        ; preds = %for.cond35
  br label %for.inc51, !dbg !959

for.inc51:                                        ; preds = %for.end50
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !960
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond32, !dbg !961, !llvm.loop !962

for.end53:                                        ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %22 = sext i32 %nl to i64, !dbg !964
  %23 = sext i32 %ni to i64, !dbg !964
  %24 = sext i32 %ni to i64, !dbg !964
  br label %for.cond54, !dbg !964

for.cond54:                                       ; preds = %for.inc73, %for.end53
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !966
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !967
  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !969

for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond57, !dbg !970

for.cond57:                                       ; preds = %for.inc70, %for.body56
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !972
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !973
  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !975

for.body59:                                       ; preds = %for.cond57
  %25 = trunc i64 %indvars.iv9 to i32, !dbg !976
  %conv60 = sitofp i32 %25 to double, !dbg !976
  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !977
  %27 = trunc i64 %26 to i32, !dbg !978
  %conv62 = sitofp i32 %27 to double, !dbg !978
  %mul63 = fmul contract double %conv60, %conv62, !dbg !979
  %conv64 = sitofp i32 %nk to double, !dbg !980
  %div65 = fdiv double %mul63, %conv64, !dbg !981
  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !982
  %29 = add nsw i64 %28, %indvars.iv5, !dbg !983
  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !984
  store double %div65, double* %arrayidx69, align 8, !dbg !985
  br label %for.inc70, !dbg !984

for.inc70:                                        ; preds = %for.body59
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !986
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond57, !dbg !987, !llvm.loop !988

for.end72:                                        ; preds = %for.cond57
  br label %for.inc73, !dbg !989

for.inc73:                                        ; preds = %for.end72
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !990
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond54, !dbg !991, !llvm.loop !992

for.end75:                                        ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %30 = sext i32 %nj to i64, !dbg !994
  %31 = sext i32 %ni to i64, !dbg !994
  %32 = sext i32 %ni to i64, !dbg !994
  br label %for.cond76, !dbg !994

for.cond76:                                       ; preds = %for.inc89, %for.end75
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !996
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !997
  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !999

for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond79, !dbg !1000

for.cond79:                                       ; preds = %for.inc86, %for.body78
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !1002
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !1003
  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !1005

for.body81:                                       ; preds = %for.cond79
  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !1006
  %34 = add nsw i64 %33, %indvars.iv, !dbg !1007
  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !1008
  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !1009
  br label %for.inc86, !dbg !1008

for.inc86:                                        ; preds = %for.body81
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1010
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond79, !dbg !1011, !llvm.loop !1012

for.end88:                                        ; preds = %for.cond79
  br label %for.inc89, !dbg !1013

for.inc89:                                        ; preds = %for.end88
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !1014
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond76, !dbg !1015, !llvm.loop !1016

for.end91:                                        ; preds = %for.cond76
  ret void, !dbg !1018
}

SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define internal void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double* %A, double* %B, double* %C, double* %D, double* %tmp) #2 !dbg !861 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !864, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nj, metadata !866, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nk, metadata !867, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nl, metadata !868, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %A, metadata !869, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %B, metadata !870, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %C, metadata !871, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %D, metadata !872, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %tmp, metadata !873, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %0 = sext i32 %nk to i64, !dbg !875
  %1 = sext i32 %ni to i64, !dbg !875
  %2 = sext i32 %ni to i64, !dbg !875
  br label %for.cond, !dbg !875

for.cond:                                         ; preds = %for.inc7, %entry
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !877
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !878
  br i1 %cmp, label %for.body, label %for.end9, !dbg !880

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond1, !dbg !882

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !884
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !885
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !887

for.body3:                                        ; preds = %for.cond1
  %3 = trunc i64 %indvars.iv28 to i32, !dbg !888
  %conv = sitofp i32 %3 to double, !dbg !888
  %4 = trunc i64 %indvars.iv25 to i32, !dbg !889
  %conv4 = sitofp i32 %4 to double, !dbg !889
  %mul = fmul contract double %conv, %conv4, !dbg !890
  %conv5 = sitofp i32 %ni to double, !dbg !891
  %div = fdiv double %mul, %conv5, !dbg !892
  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !893
  %6 = add nsw i64 %5, %indvars.iv25, !dbg !894
  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !895
  store double %div, double* %arrayidx, align 8, !dbg !896
  br label %for.inc, !dbg !895

for.inc:                                          ; preds = %for.body3
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !897
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond1, !dbg !898, !llvm.loop !899

for.end:                                          ; preds = %for.cond1
  br label %for.inc7, !dbg !900

for.inc7:                                         ; preds = %for.end
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !901
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond, !dbg !902, !llvm.loop !903

for.end9:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %7 = sext i32 %nj to i64, !dbg !905
  %8 = sext i32 %nk to i64, !dbg !905
  %9 = sext i32 %nk to i64, !dbg !905
  br label %for.cond10, !dbg !905

for.cond10:                                       ; preds = %for.inc29, %for.end9
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !907
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !908
  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !910

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond13, !dbg !911

for.cond13:                                       ; preds = %for.inc26, %for.body12
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !913
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !914
  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !916

for.body15:                                       ; preds = %for.cond13
  %10 = trunc i64 %indvars.iv22 to i32, !dbg !917
  %conv16 = sitofp i32 %10 to double, !dbg !917
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !918
  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !919
  %conv18 = sitofp i32 %11 to double, !dbg !919
  %mul19 = fmul contract double %conv16, %conv18, !dbg !920
  %conv20 = sitofp i32 %nj to double, !dbg !921
  %div21 = fdiv double %mul19, %conv20, !dbg !922
  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !923
  %13 = add nsw i64 %12, %indvars.iv19, !dbg !924
  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !925
  store double %div21, double* %arrayidx25, align 8, !dbg !926
  br label %for.inc26, !dbg !925

for.inc26:                                        ; preds = %for.body15
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond13, !dbg !927, !llvm.loop !928

for.end28:                                        ; preds = %for.cond13
  br label %for.inc29, !dbg !929

for.inc29:                                        ; preds = %for.end28
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !930
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond10, !dbg !931, !llvm.loop !932

for.end31:                                        ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %14 = sext i32 %nj to i64, !dbg !934
  %15 = sext i32 %nl to i64, !dbg !934
  %16 = sext i32 %nl to i64, !dbg !934
  br label %for.cond32, !dbg !934

for.cond32:                                       ; preds = %for.inc51, %for.end31
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !936
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !937
  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !939

for.body34:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond35, !dbg !940

for.cond35:                                       ; preds = %for.inc48, %for.body34
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !942
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !943
  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !945

for.body37:                                       ; preds = %for.cond35
  %17 = trunc i64 %indvars.iv16 to i32, !dbg !946
  %conv38 = sitofp i32 %17 to double, !dbg !946
  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !947
  %19 = trunc i64 %18 to i32, !dbg !948
  %conv40 = sitofp i32 %19 to double, !dbg !948
  %mul41 = fmul contract double %conv38, %conv40, !dbg !949
  %conv42 = sitofp i32 %nl to double, !dbg !950
  %div43 = fdiv double %mul41, %conv42, !dbg !951
  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !952
  %21 = add nsw i64 %20, %indvars.iv12, !dbg !953
  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !954
  store double %div43, double* %arrayidx47, align 8, !dbg !955
  br label %for.inc48, !dbg !954

for.inc48:                                        ; preds = %for.body37
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !956
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond35, !dbg !957, !llvm.loop !958

for.end50:                                        ; preds = %for.cond35
  br label %for.inc51, !dbg !959

for.inc51:                                        ; preds = %for.end50
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !960
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond32, !dbg !961, !llvm.loop !962

for.end53:                                        ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %22 = sext i32 %nl to i64, !dbg !964
  %23 = sext i32 %ni to i64, !dbg !964
  %24 = sext i32 %ni to i64, !dbg !964
  br label %for.cond54, !dbg !964

for.cond54:                                       ; preds = %for.inc73, %for.end53
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !966
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !967
  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !969

for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond57, !dbg !970

for.cond57:                                       ; preds = %for.inc70, %for.body56
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !972
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !973
  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !975

for.body59:                                       ; preds = %for.cond57
  %25 = trunc i64 %indvars.iv9 to i32, !dbg !976
  %conv60 = sitofp i32 %25 to double, !dbg !976
  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !977
  %27 = trunc i64 %26 to i32, !dbg !978
  %conv62 = sitofp i32 %27 to double, !dbg !978
  %mul63 = fmul contract double %conv60, %conv62, !dbg !979
  %conv64 = sitofp i32 %nk to double, !dbg !980
  %div65 = fdiv double %mul63, %conv64, !dbg !981
  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !982
  %29 = add nsw i64 %28, %indvars.iv5, !dbg !983
  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !984
  store double %div65, double* %arrayidx69, align 8, !dbg !985
  br label %for.inc70, !dbg !984

for.inc70:                                        ; preds = %for.body59
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !986
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond57, !dbg !987, !llvm.loop !988

for.end72:                                        ; preds = %for.cond57
  br label %for.inc73, !dbg !989

for.inc73:                                        ; preds = %for.end72
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !990
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond54, !dbg !991, !llvm.loop !992

for.end75:                                        ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %30 = sext i32 %nj to i64, !dbg !994
  %31 = sext i32 %ni to i64, !dbg !994
  %32 = sext i32 %ni to i64, !dbg !994
  br label %for.cond76, !dbg !994

for.cond76:                                       ; preds = %for.inc89, %for.end75
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !996
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !997
  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !999

for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond79, !dbg !1000

for.cond79:                                       ; preds = %for.inc86, %for.body78
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !1002
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !1003
  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !1005

for.body81:                                       ; preds = %for.cond79
  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !1006
  %34 = add nsw i64 %33, %indvars.iv, !dbg !1007
  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !1008
  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !1009
  br label %for.inc86, !dbg !1008

for.inc86:                                        ; preds = %for.body81
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1010
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond79, !dbg !1011, !llvm.loop !1012

for.end88:                                        ; preds = %for.cond79
  br label %for.inc89, !dbg !1013

for.inc89:                                        ; preds = %for.end88
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !1014
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond76, !dbg !1015, !llvm.loop !1016

for.end91:                                        ; preds = %for.cond76
  ret void, !dbg !1018
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv26 = trunc i64 %conv to i32, !dbg !808
SUSAN: visiting cast:   %conv26 = trunc i64 %conv to i32, !dbg !808
CBackend: writeOperand 3595:   %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: visiting cast:   %conv = sext i32 %call2 to i64, !dbg !758
CBackend: writeOperand 3595:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv27 = trunc i64 %conv5 to i32, !dbg !809
SUSAN: visiting cast:   %conv27 = trunc i64 %conv5 to i32, !dbg !809
CBackend: writeOperand 3595:   %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: visiting cast:   %conv5 = sext i32 %call4 to i64, !dbg !761
CBackend: writeOperand 3595:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv28 = trunc i64 %conv8 to i32, !dbg !810
SUSAN: visiting cast:   %conv28 = trunc i64 %conv8 to i32, !dbg !810
CBackend: writeOperand 3595:   %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: visiting cast:   %conv8 = sext i32 %call7 to i64, !dbg !764
CBackend: writeOperand 3595:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv29 = trunc i64 %conv11 to i32, !dbg !811
SUSAN: visiting cast:   %conv29 = trunc i64 %conv11 to i32, !dbg !811
CBackend: writeOperand 3595:   %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: visiting cast:   %conv11 = sext i32 %call10 to i64, !dbg !767
CBackend: writeOperand 3595:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: getting value name for:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %5 = bitcast i8* %call13 to double*, !dbg !776
SUSAN: visiting cast:   %5 = bitcast i8* %call13 to double*, !dbg !776
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: getting value name for:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
inst from IRNaming:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
original name : A
returning name: A
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %6 = bitcast i8* %call16 to double*, !dbg !783
SUSAN: visiting cast:   %6 = bitcast i8* %call16 to double*, !dbg !783
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: getting value name for:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
inst from IRNaming:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
original name : B
returning name: B
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %7 = bitcast i8* %call19 to double*, !dbg !790
SUSAN: visiting cast:   %7 = bitcast i8* %call19 to double*, !dbg !790
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: getting value name for:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
inst from IRNaming:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
original name : C
returning name: C
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: visiting cast:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: getting value name for:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
inst from IRNaming:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
original name : D
returning name: D
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %9 = bitcast i8* %call25 to double*, !dbg !806
SUSAN: visiting cast:   %9 = bitcast i8* %call25 to double*, !dbg !806
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: getting value name for:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
inst from IRNaming:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
original name : tmp
returning name: tmp
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: 
; Function Attrs: noinline uwtable
define internal void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D) #7 !dbg !1019 {
entry:
  %block = alloca %struct.dim3, align 4
  %grid = alloca %struct.dim3, align 4
  %agg.tmp = alloca %struct.dim3, align 4
  %agg.tmp7 = alloca %struct.dim3, align 4
  %agg.tmp.coerce = alloca { i64, i32 }, align 4
  %agg.tmp7.coerce = alloca { i64, i32 }, align 4
  %grid9 = alloca %struct.dim3, align 4
  %agg.tmp20 = alloca %struct.dim3, align 4
  %agg.tmp21 = alloca %struct.dim3, align 4
  %agg.tmp20.coerce = alloca { i64, i32 }, align 4
  %agg.tmp21.coerce = alloca { i64, i32 }, align 4
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1022, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1024, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1025, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1026, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double %alpha, metadata !1027, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double %beta, metadata !1028, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1029, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %A, metadata !1030, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %B, metadata !1031, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %C, metadata !1032, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %D, metadata !1033, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 256, metadata !1034, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.declare(metadata %struct.dim3* %block, metadata !1035, metadata !DIExpression()), !dbg !1059
  %div = udiv i32 256, 32, !dbg !1060
  %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
  store i32 %div, i32* %dim3gep.0
  %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
  store i32 32, i32* %dim3gep.1
  %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
  store i32 1, i32* %dim3gep.2
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid, metadata !1061, metadata !DIExpression()), !dbg !1063
  %conv = trunc i32 %ni to i16, !dbg !1064
  %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !1065
  %0 = load i32, i32* %x, align 4, !dbg !1065
  %conv1 = trunc i32 %0 to i16, !dbg !1066
  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !1067
  %conv2 = sext i16 %call to i32, !dbg !1067
  %conv3 = trunc i32 %nj to i16, !dbg !1068
  %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !1069
  %1 = load i32, i32* %y, align 4, !dbg !1069
  %conv4 = trunc i32 %1 to i16, !dbg !1070
  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !1071
  %conv6 = sext i16 %call5 to i32, !dbg !1071
  %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
  store i32 %conv2, i32* %dim3gep.01
  %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
  store i32 %conv6, i32* %dim3gep.12
  %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
  store i32 1, i32* %dim3gep.23
  %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !1072
  %3 = bitcast %struct.dim3* %grid to i8*, !dbg !1072
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false), !dbg !1072
  %4 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !1073
  %5 = bitcast %struct.dim3* %block to i8*, !dbg !1073
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false), !dbg !1073
  %6 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !1074
  %7 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !1074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false), !dbg !1074
  %8 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !1074
  %9 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !1074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 12, i1 false), !dbg !1074
  br label %header.0

header.0:                                         ; preds = %latch.0, %entry
  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
  %exitcond33 = icmp ne i32 %indvar.0, %conv2
  br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !833

header.1.preheader:                               ; preds = %header.0
  br label %header.1

header.1:                                         ; preds = %header.1.preheader, %latch.1
  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
  %exitcond32 = icmp ne i32 %indvar.1, %conv6
  br i1 %exitcond32, label %header.2.preheader, label %latch.0

header.2.preheader:                               ; preds = %header.1
  br label %header.2

header.2:                                         ; preds = %header.2.preheader, %latch.2
  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
  %exitcond31 = icmp ne i32 %indvar.2, 8
  br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !833

header.3.preheader:                               ; preds = %header.2
  br label %header.3

header.3:                                         ; preds = %header.3.preheader, %latch.3
  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
  %exitcond30 = icmp ne i32 %indvar.3, 32
  br i1 %exitcond30, label %kcall.configok, label %latch.2

latch.3:                                          ; preds = %kcall.configok
  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
  br label %header.3

latch.2:                                          ; preds = %header.3
  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
  br label %header.2

latch.1:                                          ; preds = %header.2
  %indvar.next.1 = add i32 %indvar.1, 1
  br label %header.1

latch.0:                                          ; preds = %header.1
  %indvar.next.0 = add i32 %indvar.0, 1
  br label %header.0

kcall.configok:                                   ; preds = %header.3
  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
  br label %latch.3

kcall.end:                                        ; preds = %header.0
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid9, metadata !1075, metadata !DIExpression()), !dbg !1077
  %conv10 = trunc i32 %ni to i16, !dbg !1078
  %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !1079
  %10 = load i32, i32* %x11, align 4, !dbg !1079
  %conv12 = trunc i32 %10 to i16, !dbg !1080
  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !1081
  %conv14 = sext i16 %call13 to i32, !dbg !1081
  %conv15 = trunc i32 %nl to i16, !dbg !1082
  %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !1083
  %11 = load i32, i32* %y16, align 4, !dbg !1083
  %conv17 = trunc i32 %11 to i16, !dbg !1084
  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !1085
  %conv19 = sext i16 %call18 to i32, !dbg !1085
  %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
  store i32 %conv14, i32* %dim3gep.04
  %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
  store i32 %conv19, i32* %dim3gep.15
  %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
  store i32 1, i32* %dim3gep.26
  %12 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !1086
  %13 = bitcast %struct.dim3* %grid9 to i8*, !dbg !1086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 12, i1 false), !dbg !1086
  %14 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !1087
  %15 = bitcast %struct.dim3* %block to i8*, !dbg !1087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false), !dbg !1087
  %16 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !1088
  %17 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !1088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false), !dbg !1088
  %18 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !1088
  %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !1088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false), !dbg !1088
  br label %header.07

header.07:                                        ; preds = %latch.014, %kcall.end
  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
  %exitcond29 = icmp ne i32 %indvar.024, %conv14
  br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !833

header.18.preheader:                              ; preds = %header.07
  br label %header.18

header.18:                                        ; preds = %header.18.preheader, %latch.113
  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
  %exitcond28 = icmp ne i32 %indvar.121, %conv19
  br i1 %exitcond28, label %header.29.preheader, label %latch.014

header.29.preheader:                              ; preds = %header.18
  br label %header.29

header.29:                                        ; preds = %header.29.preheader, %latch.212
  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
  %exitcond27 = icmp ne i32 %indvar.218, 8
  br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !833

header.310.preheader:                             ; preds = %header.29
  br label %header.310

header.310:                                       ; preds = %header.310.preheader, %latch.311
  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
  %exitcond = icmp ne i32 %indvar.315, 32
  br i1 %exitcond, label %kcall.configok24, label %latch.212

latch.311:                                        ; preds = %kcall.configok24
  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
  br label %header.310

latch.212:                                        ; preds = %header.310
  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
  br label %header.29

latch.113:                                        ; preds = %header.29
  %indvar.next.123 = add i32 %indvar.121, 1
  br label %header.18

latch.014:                                        ; preds = %header.18
  %indvar.next.026 = add i32 %indvar.024, 1
  br label %header.07

kcall.configok24:                                 ; preds = %header.310
  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
  br label %latch.311

kcall.end25:                                      ; preds = %header.07
  ret void, !dbg !1089
}

SUSAN: getting value name for: 
; Function Attrs: noinline uwtable
define internal void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D) #7 !dbg !1019 {
entry:
  %block = alloca %struct.dim3, align 4
  %grid = alloca %struct.dim3, align 4
  %agg.tmp = alloca %struct.dim3, align 4
  %agg.tmp7 = alloca %struct.dim3, align 4
  %agg.tmp.coerce = alloca { i64, i32 }, align 4
  %agg.tmp7.coerce = alloca { i64, i32 }, align 4
  %grid9 = alloca %struct.dim3, align 4
  %agg.tmp20 = alloca %struct.dim3, align 4
  %agg.tmp21 = alloca %struct.dim3, align 4
  %agg.tmp20.coerce = alloca { i64, i32 }, align 4
  %agg.tmp21.coerce = alloca { i64, i32 }, align 4
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1022, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1024, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1025, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1026, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double %alpha, metadata !1027, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double %beta, metadata !1028, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1029, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %A, metadata !1030, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %B, metadata !1031, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %C, metadata !1032, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %D, metadata !1033, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 256, metadata !1034, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.declare(metadata %struct.dim3* %block, metadata !1035, metadata !DIExpression()), !dbg !1059
  %div = udiv i32 256, 32, !dbg !1060
  %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
  store i32 %div, i32* %dim3gep.0
  %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
  store i32 32, i32* %dim3gep.1
  %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
  store i32 1, i32* %dim3gep.2
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid, metadata !1061, metadata !DIExpression()), !dbg !1063
  %conv = trunc i32 %ni to i16, !dbg !1064
  %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !1065
  %0 = load i32, i32* %x, align 4, !dbg !1065
  %conv1 = trunc i32 %0 to i16, !dbg !1066
  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !1067
  %conv2 = sext i16 %call to i32, !dbg !1067
  %conv3 = trunc i32 %nj to i16, !dbg !1068
  %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !1069
  %1 = load i32, i32* %y, align 4, !dbg !1069
  %conv4 = trunc i32 %1 to i16, !dbg !1070
  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !1071
  %conv6 = sext i16 %call5 to i32, !dbg !1071
  %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
  store i32 %conv2, i32* %dim3gep.01
  %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
  store i32 %conv6, i32* %dim3gep.12
  %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
  store i32 1, i32* %dim3gep.23
  %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !1072
  %3 = bitcast %struct.dim3* %grid to i8*, !dbg !1072
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false), !dbg !1072
  %4 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !1073
  %5 = bitcast %struct.dim3* %block to i8*, !dbg !1073
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false), !dbg !1073
  %6 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !1074
  %7 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !1074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false), !dbg !1074
  %8 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !1074
  %9 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !1074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 12, i1 false), !dbg !1074
  br label %header.0

header.0:                                         ; preds = %latch.0, %entry
  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
  %exitcond33 = icmp ne i32 %indvar.0, %conv2
  br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !833

header.1.preheader:                               ; preds = %header.0
  br label %header.1

header.1:                                         ; preds = %header.1.preheader, %latch.1
  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
  %exitcond32 = icmp ne i32 %indvar.1, %conv6
  br i1 %exitcond32, label %header.2.preheader, label %latch.0

header.2.preheader:                               ; preds = %header.1
  br label %header.2

header.2:                                         ; preds = %header.2.preheader, %latch.2
  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
  %exitcond31 = icmp ne i32 %indvar.2, 8
  br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !833

header.3.preheader:                               ; preds = %header.2
  br label %header.3

header.3:                                         ; preds = %header.3.preheader, %latch.3
  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
  %exitcond30 = icmp ne i32 %indvar.3, 32
  br i1 %exitcond30, label %kcall.configok, label %latch.2

latch.3:                                          ; preds = %kcall.configok
  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
  br label %header.3

latch.2:                                          ; preds = %header.3
  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
  br label %header.2

latch.1:                                          ; preds = %header.2
  %indvar.next.1 = add i32 %indvar.1, 1
  br label %header.1

latch.0:                                          ; preds = %header.1
  %indvar.next.0 = add i32 %indvar.0, 1
  br label %header.0

kcall.configok:                                   ; preds = %header.3
  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
  br label %latch.3

kcall.end:                                        ; preds = %header.0
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid9, metadata !1075, metadata !DIExpression()), !dbg !1077
  %conv10 = trunc i32 %ni to i16, !dbg !1078
  %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !1079
  %10 = load i32, i32* %x11, align 4, !dbg !1079
  %conv12 = trunc i32 %10 to i16, !dbg !1080
  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !1081
  %conv14 = sext i16 %call13 to i32, !dbg !1081
  %conv15 = trunc i32 %nl to i16, !dbg !1082
  %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !1083
  %11 = load i32, i32* %y16, align 4, !dbg !1083
  %conv17 = trunc i32 %11 to i16, !dbg !1084
  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !1085
  %conv19 = sext i16 %call18 to i32, !dbg !1085
  %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
  store i32 %conv14, i32* %dim3gep.04
  %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
  store i32 %conv19, i32* %dim3gep.15
  %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
  store i32 1, i32* %dim3gep.26
  %12 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !1086
  %13 = bitcast %struct.dim3* %grid9 to i8*, !dbg !1086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 12, i1 false), !dbg !1086
  %14 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !1087
  %15 = bitcast %struct.dim3* %block to i8*, !dbg !1087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false), !dbg !1087
  %16 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !1088
  %17 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !1088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false), !dbg !1088
  %18 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !1088
  %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !1088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false), !dbg !1088
  br label %header.07

header.07:                                        ; preds = %latch.014, %kcall.end
  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
  %exitcond29 = icmp ne i32 %indvar.024, %conv14
  br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !833

header.18.preheader:                              ; preds = %header.07
  br label %header.18

header.18:                                        ; preds = %header.18.preheader, %latch.113
  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
  %exitcond28 = icmp ne i32 %indvar.121, %conv19
  br i1 %exitcond28, label %header.29.preheader, label %latch.014

header.29.preheader:                              ; preds = %header.18
  br label %header.29

header.29:                                        ; preds = %header.29.preheader, %latch.212
  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
  %exitcond27 = icmp ne i32 %indvar.218, 8
  br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !833

header.310.preheader:                             ; preds = %header.29
  br label %header.310

header.310:                                       ; preds = %header.310.preheader, %latch.311
  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
  %exitcond = icmp ne i32 %indvar.315, 32
  br i1 %exitcond, label %kcall.configok24, label %latch.212

latch.311:                                        ; preds = %kcall.configok24
  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
  br label %header.310

latch.212:                                        ; preds = %header.310
  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
  br label %header.29

latch.113:                                        ; preds = %header.29
  %indvar.next.123 = add i32 %indvar.121, 1
  br label %header.18

latch.014:                                        ; preds = %header.18
  %indvar.next.026 = add i32 %indvar.024, 1
  br label %header.07

kcall.configok24:                                 ; preds = %header.310
  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
  br label %latch.311

kcall.end25:                                      ; preds = %header.07
  ret void, !dbg !1089
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv60 = trunc i64 %conv to i32, !dbg !819
SUSAN: visiting cast:   %conv60 = trunc i64 %conv to i32, !dbg !819
CBackend: writeOperand 3595:   %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: visiting cast:   %conv = sext i32 %call2 to i64, !dbg !758
CBackend: writeOperand 3595:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv61 = trunc i64 %conv5 to i32, !dbg !820
SUSAN: visiting cast:   %conv61 = trunc i64 %conv5 to i32, !dbg !820
CBackend: writeOperand 3595:   %conv5 = sext i32 %call4 to i64, !dbg !761
SUSAN: visiting cast:   %conv5 = sext i32 %call4 to i64, !dbg !761
CBackend: writeOperand 3595:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
SUSAN: getting value name for:   %call4 = call i32 @atoi(i8* %2) #10, !dbg !761
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv62 = trunc i64 %conv8 to i32, !dbg !821
SUSAN: visiting cast:   %conv62 = trunc i64 %conv8 to i32, !dbg !821
CBackend: writeOperand 3595:   %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: visiting cast:   %conv8 = sext i32 %call7 to i64, !dbg !764
CBackend: writeOperand 3595:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv63 = trunc i64 %conv11 to i32, !dbg !822
SUSAN: visiting cast:   %conv63 = trunc i64 %conv11 to i32, !dbg !822
CBackend: writeOperand 3595:   %conv11 = sext i32 %call10 to i64, !dbg !767
SUSAN: visiting cast:   %conv11 = sext i32 %call10 to i64, !dbg !767
CBackend: writeOperand 3595:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
SUSAN: getting value name for:   %call10 = call i32 @atoi(i8* %4) #10, !dbg !767
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double 3.241200e+04
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double 2.123000e+03
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %9 = bitcast i8* %call25 to double*, !dbg !806
SUSAN: visiting cast:   %9 = bitcast i8* %call25 to double*, !dbg !806
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: getting value name for:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
inst from IRNaming:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
original name : tmp
returning name: tmp
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %5 = bitcast i8* %call13 to double*, !dbg !776
SUSAN: visiting cast:   %5 = bitcast i8* %call13 to double*, !dbg !776
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: getting value name for:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
inst from IRNaming:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
original name : A
returning name: A
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %6 = bitcast i8* %call16 to double*, !dbg !783
SUSAN: visiting cast:   %6 = bitcast i8* %call16 to double*, !dbg !783
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: getting value name for:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
inst from IRNaming:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
original name : B
returning name: B
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %7 = bitcast i8* %call19 to double*, !dbg !790
SUSAN: visiting cast:   %7 = bitcast i8* %call19 to double*, !dbg !790
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: getting value name for:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
inst from IRNaming:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
original name : C
returning name: C
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: visiting cast:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: getting value name for:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
inst from IRNaming:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
original name : D
returning name: D
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %cmp = icmp eq i32 %call, 1, !dbg !829
CBackend: writeOperand 3595:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
SUSAN: getting value name for:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
inst from IRNaming:   %call = call i32 @atoi(i8* %0) #10, !dbg !755
original name : dump_code
returning name: dump_code
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
Linear Region with entry block: if.then
SUSAN: printing bb:if.then
CBEBackend: printing bb 7082 if.then
SUSAN: printing instruction   call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !834 at 6678
CBackend: writeOperand 3595: 
; Function Attrs: noinline uwtable
define internal void @_ZL11print_arrayiiPd(i32 %ni, i32 %nl, double* %D) #7 !dbg !1090 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1093, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1095, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata double* %D, metadata !1096, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata i32 0, metadata !1097, metadata !DIExpression()), !dbg !1094
  %0 = sext i32 %nl to i64, !dbg !1098
  %1 = sext i32 %ni to i64, !dbg !1098
  %2 = sext i32 %ni to i64, !dbg !1098
  %3 = sext i32 %ni to i64, !dbg !1098
  br label %for.cond, !dbg !1098

for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !1100
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !1097, metadata !DIExpression()), !dbg !1094
  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !1101
  br i1 %cmp, label %for.body, label %for.end10, !dbg !1103

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !1104, metadata !DIExpression()), !dbg !1094
  br label %for.cond1, !dbg !1105

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !1107
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1104, metadata !DIExpression()), !dbg !1094
  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !1108
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1110

for.body3:                                        ; preds = %for.cond1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1111
  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !1113
  %6 = add nsw i64 %5, %indvars.iv, !dbg !1114
  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !1115
  %7 = load double, double* %arrayidx, align 8, !dbg !1115
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !1116
  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !1117
  %9 = add nsw i64 %8, %indvars.iv, !dbg !1119
  %10 = trunc i64 %9 to i32, !dbg !1120
  %rem = srem i32 %10, 20, !dbg !1120
  %cmp6 = icmp eq i32 %rem, 0, !dbg !1121
  br i1 %cmp6, label %if.then, label %if.end, !dbg !1122

if.then:                                          ; preds = %for.body3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1123
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1124
  br label %if.end, !dbg !1124

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !1125

for.inc:                                          ; preds = %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1126
  call void @llvm.dbg.value(metadata i32 undef, metadata !1104, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
  br label %for.cond1, !dbg !1127, !llvm.loop !1128

for.end:                                          ; preds = %for.cond1
  br label %for.inc8, !dbg !1129

for.inc8:                                         ; preds = %for.end
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !1130
  call void @llvm.dbg.value(metadata i32 undef, metadata !1097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
  br label %for.cond, !dbg !1131, !llvm.loop !1132

for.end10:                                        ; preds = %for.cond
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1134
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1135
  ret void, !dbg !1136
}

SUSAN: getting value name for: 
; Function Attrs: noinline uwtable
define internal void @_ZL11print_arrayiiPd(i32 %ni, i32 %nl, double* %D) #7 !dbg !1090 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1093, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1095, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata double* %D, metadata !1096, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata i32 0, metadata !1097, metadata !DIExpression()), !dbg !1094
  %0 = sext i32 %nl to i64, !dbg !1098
  %1 = sext i32 %ni to i64, !dbg !1098
  %2 = sext i32 %ni to i64, !dbg !1098
  %3 = sext i32 %ni to i64, !dbg !1098
  br label %for.cond, !dbg !1098

for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !1100
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !1097, metadata !DIExpression()), !dbg !1094
  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !1101
  br i1 %cmp, label %for.body, label %for.end10, !dbg !1103

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !1104, metadata !DIExpression()), !dbg !1094
  br label %for.cond1, !dbg !1105

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !1107
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1104, metadata !DIExpression()), !dbg !1094
  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !1108
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1110

for.body3:                                        ; preds = %for.cond1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1111
  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !1113
  %6 = add nsw i64 %5, %indvars.iv, !dbg !1114
  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !1115
  %7 = load double, double* %arrayidx, align 8, !dbg !1115
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !1116
  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !1117
  %9 = add nsw i64 %8, %indvars.iv, !dbg !1119
  %10 = trunc i64 %9 to i32, !dbg !1120
  %rem = srem i32 %10, 20, !dbg !1120
  %cmp6 = icmp eq i32 %rem, 0, !dbg !1121
  br i1 %cmp6, label %if.then, label %if.end, !dbg !1122

if.then:                                          ; preds = %for.body3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1123
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1124
  br label %if.end, !dbg !1124

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !1125

for.inc:                                          ; preds = %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1126
  call void @llvm.dbg.value(metadata i32 undef, metadata !1104, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
  br label %for.cond1, !dbg !1127, !llvm.loop !1128

for.end:                                          ; preds = %for.cond1
  br label %for.inc8, !dbg !1129

for.inc8:                                         ; preds = %for.end
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !1130
  call void @llvm.dbg.value(metadata i32 undef, metadata !1097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
  br label %for.cond, !dbg !1131, !llvm.loop !1132

for.end10:                                        ; preds = %for.cond
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1134
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1135
  ret void, !dbg !1136
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv74 = trunc i64 %conv to i32, !dbg !832
SUSAN: visiting cast:   %conv74 = trunc i64 %conv to i32, !dbg !832
CBackend: writeOperand 3595:   %conv = sext i32 %call2 to i64, !dbg !758
SUSAN: visiting cast:   %conv = sext i32 %call2 to i64, !dbg !758
CBackend: writeOperand 3595:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
SUSAN: getting value name for:   %call2 = call i32 @atoi(i8* %1) #10, !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv75 = trunc i64 %conv8 to i32, !dbg !833
SUSAN: visiting cast:   %conv75 = trunc i64 %conv8 to i32, !dbg !833
CBackend: writeOperand 3595:   %conv8 = sext i32 %call7 to i64, !dbg !764
SUSAN: visiting cast:   %conv8 = sext i32 %call7 to i64, !dbg !764
CBackend: writeOperand 3595:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
SUSAN: getting value name for:   %call7 = call i32 @atoi(i8* %3) #10, !dbg !764
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: visiting cast:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: getting value name for:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
inst from IRNaming:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
original name : D
returning name: D
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
printing unconditional branch   br label %if.end, !dbg !834
Linear Region with entry block: if.end
SUSAN: printing bb:if.end
CBEBackend: printing bb 7082 if.end
SUSAN: printing instruction   call void @free(i8* %14) #11, !dbg !836 at 6678
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %14 = bitcast double* %9 to i8*, !dbg !835
SUSAN: visiting cast:   %14 = bitcast double* %9 to i8*, !dbg !835
SUSAN: printing cast from: double* to i8*
CBackend: writeOperand 3595:   %9 = bitcast i8* %call25 to double*, !dbg !806
SUSAN: visiting cast:   %9 = bitcast i8* %call25 to double*, !dbg !806
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
SUSAN: getting value name for:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
inst from IRNaming:   %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !804, !tulip.target.mapdata.to !805
original name : tmp
returning name: tmp
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   call void @free(i8* %15) #11, !dbg !838 at 6678
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %15 = bitcast double* %5 to i8*, !dbg !837
SUSAN: visiting cast:   %15 = bitcast double* %5 to i8*, !dbg !837
SUSAN: printing cast from: double* to i8*
CBackend: writeOperand 3595:   %5 = bitcast i8* %call13 to double*, !dbg !776
SUSAN: visiting cast:   %5 = bitcast i8* %call13 to double*, !dbg !776
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
SUSAN: getting value name for:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
inst from IRNaming:   %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !774, !tulip.target.mapdata.to !775
original name : A
returning name: A
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   call void @free(i8* %16) #11, !dbg !840 at 6678
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %16 = bitcast double* %6 to i8*, !dbg !839
SUSAN: visiting cast:   %16 = bitcast double* %6 to i8*, !dbg !839
SUSAN: printing cast from: double* to i8*
CBackend: writeOperand 3595:   %6 = bitcast i8* %call16 to double*, !dbg !783
SUSAN: visiting cast:   %6 = bitcast i8* %call16 to double*, !dbg !783
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
SUSAN: getting value name for:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
inst from IRNaming:   %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !781, !tulip.target.mapdata.to !782
original name : B
returning name: B
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   call void @free(i8* %17) #11, !dbg !842 at 6678
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %17 = bitcast double* %7 to i8*, !dbg !841
SUSAN: visiting cast:   %17 = bitcast double* %7 to i8*, !dbg !841
SUSAN: printing cast from: double* to i8*
CBackend: writeOperand 3595:   %7 = bitcast i8* %call19 to double*, !dbg !790
SUSAN: visiting cast:   %7 = bitcast i8* %call19 to double*, !dbg !790
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
SUSAN: getting value name for:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
inst from IRNaming:   %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !788, !tulip.target.mapdata.to !789
original name : C
returning name: C
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   call void @free(i8* %18) #11, !dbg !844 at 6678
CBackend: writeOperand 3595: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

SUSAN: getting value name for: 
; Function Attrs: nounwind
declare dso_local void @free(i8*) #5

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %18 = bitcast double* %8 to i8*, !dbg !843
SUSAN: visiting cast:   %18 = bitcast double* %8 to i8*, !dbg !843
SUSAN: printing cast from: double* to i8*
CBackend: writeOperand 3595:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: visiting cast:   %8 = bitcast i8* %call22 to double*, !dbg !799
SUSAN: printing cast from: i8* to double*
CBackend: writeOperand 3595:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
SUSAN: getting value name for:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
inst from IRNaming:   %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !795, !tulip.target.mapdata.to !796, !tulip.target.mapdata.from !798
original name : D
returning name: D
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
CBackend: iterating function 1759: atoi
CBackend: iterating function 1759: malloc
CBackend: iterating function 1759: _ZL10init_arrayiiiiPdS_S_S_S_
CBackend: printing function 1770_ZL10init_arrayiiiiPdS_S_S_S_
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
term 6818:   br i1 %cmp77, label %for.body78, label %for.end91, !dbg !886
none omp loop ub:   %31 = sext i32 %ni to i64, !dbg !881
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
term 6818:   br i1 %cmp55, label %for.body56, label %for.end75, !dbg !856
none omp loop ub:   %23 = sext i32 %ni to i64, !dbg !851
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
term 6818:   br i1 %cmp33, label %for.body34, label %for.end53, !dbg !826
none omp loop ub:   %15 = sext i32 %nl to i64, !dbg !821
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
term 6818:   br i1 %cmp11, label %for.body12, label %for.end31, !dbg !797
none omp loop ub:   %8 = sext i32 %nk to i64, !dbg !792
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
term 6818:   br i1 %cmp, label %for.body, label %for.end9, !dbg !767
none omp loop ub:   %1 = sext i32 %ni to i64, !dbg !762
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
term 6818:   br i1 %cmp80, label %for.body81, label %for.end88, !dbg !892
none omp loop ub:   %30 = sext i32 %nj to i64, !dbg !881
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
term 6818:   br i1 %cmp58, label %for.body59, label %for.end72, !dbg !862
none omp loop ub:   %22 = sext i32 %nl to i64, !dbg !851
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
term 6818:   br i1 %cmp36, label %for.body37, label %for.end50, !dbg !832
none omp loop ub:   %14 = sext i32 %nj to i64, !dbg !821
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
term 6818:   br i1 %cmp14, label %for.body15, label %for.end28, !dbg !803
none omp loop ub:   %7 = sext i32 %nj to i64, !dbg !792
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
term 6818:   br i1 %cmp2, label %for.body3, label %for.end, !dbg !774
none omp loop ub:   %0 = sext i32 %nk to i64, !dbg !762
=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %for.cond32<header><exiting>,%for.body34,%for.cond35,%for.end50,%for.inc51<latch>,%for.body37,%for.inc48
    Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

isomp: 0
Loop: Loop at depth 1 containing: %for.cond10<header><exiting>,%for.body12,%for.cond13,%for.end28,%for.inc29<latch>,%for.body15,%for.inc26
    Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

isomp: 0
Loop: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc7<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

isomp: 0
Loop: Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

isomp: 0
Loop: Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

isomp: 0
Loop: Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

isomp: 0
Loop: Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

isomp: 0
Loop: Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

isomp: 0
Loop: Loop at depth 1 containing: %for.cond76<header><exiting>,%for.body78,%for.cond79,%for.end88,%for.inc89<latch>,%for.body81,%for.inc86
    Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

isomp: 0
Loop: Loop at depth 1 containing: %for.cond54<header><exiting>,%for.body56,%for.cond57,%for.end72,%for.inc73<latch>,%for.body59,%for.inc70
    Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

isomp: 0
SUSAN: opnd0  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: opnd1  %1 = sext i32 %ni to i64, !dbg !762
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: opnd0  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: opnd1  %0 = sext i32 %nk to i64, !dbg !762
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: opnd0  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: opnd1  %8 = sext i32 %nk to i64, !dbg !792
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: opnd0  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: opnd1  %7 = sext i32 %nj to i64, !dbg !792
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: opnd0  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: opnd1  %15 = sext i32 %nl to i64, !dbg !821
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: opnd0  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: opnd1  %14 = sext i32 %nj to i64, !dbg !821
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: opnd0  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: opnd1  %23 = sext i32 %ni to i64, !dbg !851
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: opnd0  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: opnd1  %22 = sext i32 %nl to i64, !dbg !851
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: opnd0  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: opnd1  %31 = sext i32 %ni to i64, !dbg !881
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: opnd0  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: opnd1  %30 = sext i32 %nj to i64, !dbg !881
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: BB:
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !751, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nj, metadata !753, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nk, metadata !754, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nl, metadata !755, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %A, metadata !756, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %B, metadata !757, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %C, metadata !758, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %D, metadata !759, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %tmp, metadata !760, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %0 = sext i32 %nk to i64, !dbg !762
  %1 = sext i32 %ni to i64, !dbg !762
  %2 = sext i32 %ni to i64, !dbg !762
  br label %for.cond, !dbg !762

SUSAN: BB:
for.cond:                                         ; preds = %for.inc7, %entry
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !765
  br i1 %cmp, label %for.body, label %for.end9, !dbg !767

SUSAN: BB:
for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond1, !dbg !769

SUSAN: BB:
for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !772
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !774

SUSAN: BB:
for.body3:                                        ; preds = %for.cond1
  %3 = trunc i64 %indvars.iv28 to i32, !dbg !775
  %conv = sitofp i32 %3 to double, !dbg !775
  %4 = trunc i64 %indvars.iv25 to i32, !dbg !776
  %conv4 = sitofp i32 %4 to double, !dbg !776
  %mul = fmul contract double %conv, %conv4, !dbg !777
  %conv5 = sitofp i32 %ni to double, !dbg !778
  %div = fdiv double %mul, %conv5, !dbg !779
  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !780
  %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
  store double %div, double* %arrayidx, align 8, !dbg !783
  br label %for.inc, !dbg !782

SUSAN: BB:
for.inc:                                          ; preds = %for.body3
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
  call void @llvm.dbg.value(metadata i32 undef, metadata !768, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond1, !dbg !785, !llvm.loop !786

SUSAN: BB:
for.end:                                          ; preds = %for.cond1
  br label %for.inc7, !dbg !787

SUSAN: BB:
for.inc7:                                         ; preds = %for.end
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
  call void @llvm.dbg.value(metadata i32 undef, metadata !761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond, !dbg !789, !llvm.loop !790

SUSAN: BB:
for.end9:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %7 = sext i32 %nj to i64, !dbg !792
  %8 = sext i32 %nk to i64, !dbg !792
  %9 = sext i32 %nk to i64, !dbg !792
  br label %for.cond10, !dbg !792

SUSAN: BB:
for.cond10:                                       ; preds = %for.inc29, %for.end9
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !795
  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !797

SUSAN: BB:
for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond13, !dbg !798

SUSAN: BB:
for.cond13:                                       ; preds = %for.inc26, %for.body12
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !801
  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !803

SUSAN: BB:
for.body15:                                       ; preds = %for.cond13
  %10 = trunc i64 %indvars.iv22 to i32, !dbg !804
  %conv16 = sitofp i32 %10 to double, !dbg !804
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !806
  %conv18 = sitofp i32 %11 to double, !dbg !806
  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
  %conv20 = sitofp i32 %nj to double, !dbg !808
  %div21 = fdiv double %mul19, %conv20, !dbg !809
  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !810
  %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
  store double %div21, double* %arrayidx25, align 8, !dbg !813
  br label %for.inc26, !dbg !812

SUSAN: BB:
for.inc26:                                        ; preds = %for.body15
  call void @llvm.dbg.value(metadata i32 undef, metadata !768, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond13, !dbg !814, !llvm.loop !815

SUSAN: BB:
for.end28:                                        ; preds = %for.cond13
  br label %for.inc29, !dbg !816

SUSAN: BB:
for.inc29:                                        ; preds = %for.end28
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
  call void @llvm.dbg.value(metadata i32 undef, metadata !761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond10, !dbg !818, !llvm.loop !819

SUSAN: BB:
for.end31:                                        ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %14 = sext i32 %nj to i64, !dbg !821
  %15 = sext i32 %nl to i64, !dbg !821
  %16 = sext i32 %nl to i64, !dbg !821
  br label %for.cond32, !dbg !821

SUSAN: BB:
for.cond32:                                       ; preds = %for.inc51, %for.end31
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !824
  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !826

SUSAN: BB:
for.body34:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond35, !dbg !827

SUSAN: BB:
for.cond35:                                       ; preds = %for.inc48, %for.body34
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !830
  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !832

SUSAN: BB:
for.body37:                                       ; preds = %for.cond35
  %17 = trunc i64 %indvars.iv16 to i32, !dbg !833
  %conv38 = sitofp i32 %17 to double, !dbg !833
  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !834
  %19 = trunc i64 %18 to i32, !dbg !835
  %conv40 = sitofp i32 %19 to double, !dbg !835
  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
  %conv42 = sitofp i32 %nl to double, !dbg !837
  %div43 = fdiv double %mul41, %conv42, !dbg !838
  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !839
  %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
  store double %div43, double* %arrayidx47, align 8, !dbg !842
  br label %for.inc48, !dbg !841

SUSAN: BB:
for.inc48:                                        ; preds = %for.body37
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
  call void @llvm.dbg.value(metadata i32 undef, metadata !768, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond35, !dbg !844, !llvm.loop !845

SUSAN: BB:
for.end50:                                        ; preds = %for.cond35
  br label %for.inc51, !dbg !846

SUSAN: BB:
for.inc51:                                        ; preds = %for.end50
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
  call void @llvm.dbg.value(metadata i32 undef, metadata !761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond32, !dbg !848, !llvm.loop !849

SUSAN: BB:
for.end53:                                        ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %22 = sext i32 %nl to i64, !dbg !851
  %23 = sext i32 %ni to i64, !dbg !851
  %24 = sext i32 %ni to i64, !dbg !851
  br label %for.cond54, !dbg !851

SUSAN: BB:
for.cond54:                                       ; preds = %for.inc73, %for.end53
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !854
  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !856

SUSAN: BB:
for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond57, !dbg !857

SUSAN: BB:
for.cond57:                                       ; preds = %for.inc70, %for.body56
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !860
  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !862

SUSAN: BB:
for.body59:                                       ; preds = %for.cond57
  %25 = trunc i64 %indvars.iv9 to i32, !dbg !863
  %conv60 = sitofp i32 %25 to double, !dbg !863
  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !864
  %27 = trunc i64 %26 to i32, !dbg !865
  %conv62 = sitofp i32 %27 to double, !dbg !865
  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
  %conv64 = sitofp i32 %nk to double, !dbg !867
  %div65 = fdiv double %mul63, %conv64, !dbg !868
  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !869
  %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
  store double %div65, double* %arrayidx69, align 8, !dbg !872
  br label %for.inc70, !dbg !871

SUSAN: BB:
for.inc70:                                        ; preds = %for.body59
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
  call void @llvm.dbg.value(metadata i32 undef, metadata !768, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond57, !dbg !874, !llvm.loop !875

SUSAN: BB:
for.end72:                                        ; preds = %for.cond57
  br label %for.inc73, !dbg !876

SUSAN: BB:
for.inc73:                                        ; preds = %for.end72
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
  call void @llvm.dbg.value(metadata i32 undef, metadata !761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond54, !dbg !878, !llvm.loop !879

SUSAN: BB:
for.end75:                                        ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %30 = sext i32 %nj to i64, !dbg !881
  %31 = sext i32 %ni to i64, !dbg !881
  %32 = sext i32 %ni to i64, !dbg !881
  br label %for.cond76, !dbg !881

SUSAN: BB:
for.cond76:                                       ; preds = %for.inc89, %for.end75
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !884
  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !886

SUSAN: BB:
for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond79, !dbg !887

SUSAN: BB:
for.cond79:                                       ; preds = %for.inc86, %for.body78
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !890
  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !892

SUSAN: BB:
for.body81:                                       ; preds = %for.cond79
  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !893
  %34 = add nsw i64 %33, %indvars.iv, !dbg !894
  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !896
  br label %for.inc86, !dbg !895

SUSAN: BB:
for.inc86:                                        ; preds = %for.body81
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
  call void @llvm.dbg.value(metadata i32 undef, metadata !768, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond79, !dbg !898, !llvm.loop !899

SUSAN: BB:
for.end88:                                        ; preds = %for.cond79
  br label %for.inc89, !dbg !900

SUSAN: BB:
for.inc89:                                        ; preds = %for.end88
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
  call void @llvm.dbg.value(metadata i32 undef, metadata !761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond76, !dbg !902, !llvm.loop !903

SUSAN: BB:
for.end91:                                        ; preds = %for.cond76
  ret void, !dbg !905

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc7<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

SUSAN exitBB: 
for.cond:                                         ; preds = %for.inc7, %entry
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !765
  br i1 %cmp, label %for.body, label %for.end9, !dbg !767

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

SUSAN exitBB: 
for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !772
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !774

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond10<header><exiting>,%for.body12,%for.cond13,%for.end28,%for.inc29<latch>,%for.body15,%for.inc26
    Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

SUSAN exitBB: 
for.cond10:                                       ; preds = %for.inc29, %for.end9
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !795
  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !797

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

SUSAN exitBB: 
for.cond13:                                       ; preds = %for.inc26, %for.body12
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !801
  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !803

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond32<header><exiting>,%for.body34,%for.cond35,%for.end50,%for.inc51<latch>,%for.body37,%for.inc48
    Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

SUSAN exitBB: 
for.cond32:                                       ; preds = %for.inc51, %for.end31
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !824
  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !826

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

SUSAN exitBB: 
for.cond35:                                       ; preds = %for.inc48, %for.body34
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !830
  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !832

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond54<header><exiting>,%for.body56,%for.cond57,%for.end72,%for.inc73<latch>,%for.body59,%for.inc70
    Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

SUSAN exitBB: 
for.cond54:                                       ; preds = %for.inc73, %for.end53
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !854
  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !856

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

SUSAN exitBB: 
for.cond57:                                       ; preds = %for.inc70, %for.body56
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !860
  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !862

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond76<header><exiting>,%for.body78,%for.cond79,%for.end88,%for.inc89<latch>,%for.body81,%for.inc86
    Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

SUSAN exitBB: 
for.cond76:                                       ; preds = %for.inc89, %for.end75
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !761, metadata !DIExpression()), !dbg !752
  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !884
  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !886

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

SUSAN exitBB: 
for.cond79:                                       ; preds = %for.inc86, %for.body78
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !768, metadata !DIExpression()), !dbg !752
  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !890
  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !892

SUSAN: entry block is a linear region! entry
CBERegion: including entry in a linear region
CBERegion: nextBB 
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !751, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nj, metadata !753, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nk, metadata !754, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nl, metadata !755, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %A, metadata !756, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %B, metadata !757, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %C, metadata !758, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %D, metadata !759, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %tmp, metadata !760, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %0 = sext i32 %nk to i64, !dbg !762
  %1 = sext i32 %ni to i64, !dbg !762
  %2 = sext i32 %ni to i64, !dbg !762
  br label %for.cond, !dbg !762

SUSAN: nextRegionEntryBB for.cond
CBackend: entryBB is a loop: for.cond
SUSAN: entry block is a loop region! for.cond
creating loop region for entryBB: for.cond
SUSAN: loop at 355 Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc7<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
term 6818:   br i1 %cmp, label %for.body, label %for.end9, !dbg !767
CBERegion: startBB 393: 
for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond1, !dbg !769

CBERegion: here? 149
CBackend: entryBB is a loop: for.body
but not a header!
SUSAN: entry block is a linear region! for.body
CBERegion: including for.body in a linear region
CBERegion: nextBB 
for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond1, !dbg !769

SUSAN: nextRegionEntryBB for.cond1
for region: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc7<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.cond1
SUSAN: entry block is a loop region! for.cond1
creating loop region for entryBB: for.cond1
SUSAN: loop at 355 Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
term 6818:   br i1 %cmp2, label %for.body3, label %for.end, !dbg !774
CBERegion: startBB 393: 
for.body3:                                        ; preds = %for.cond1
  %3 = trunc i64 %indvars.iv28 to i32, !dbg !775
  %conv = sitofp i32 %3 to double, !dbg !775
  %4 = trunc i64 %indvars.iv25 to i32, !dbg !776
  %conv4 = sitofp i32 %4 to double, !dbg !776
  %mul = fmul contract double %conv, %conv4, !dbg !777
  %conv5 = sitofp i32 %ni to double, !dbg !778
  %div = fdiv double %mul, %conv5, !dbg !779
  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !780
  %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
  store double %div, double* %arrayidx, align 8, !dbg !783
  br label %for.inc, !dbg !782

CBERegion: here? 149
CBackend: entryBB is a loop: for.body3
but not a header!
SUSAN: entry block is a linear region! for.body3
CBERegion: including for.body3 in a linear region
CBERegion: nextBB 
for.body3:                                        ; preds = %for.cond1
  %3 = trunc i64 %indvars.iv28 to i32, !dbg !775
  %conv = sitofp i32 %3 to double, !dbg !775
  %4 = trunc i64 %indvars.iv25 to i32, !dbg !776
  %conv4 = sitofp i32 %4 to double, !dbg !776
  %mul = fmul contract double %conv, %conv4, !dbg !777
  %conv5 = sitofp i32 %ni to double, !dbg !778
  %div = fdiv double %mul, %conv5, !dbg !779
  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !780
  %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
  store double %div, double* %arrayidx, align 8, !dbg !783
  br label %for.inc, !dbg !782

SUSAN: nextRegionEntryBB for.inc
for region: Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

SUSAN: nextRegionEntryBB for.end
for region: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc7<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.end
but not a header!
SUSAN: entry block is a linear region! for.end
CBERegion: including for.end in a linear region
CBERegion: nextBB 
for.end:                                          ; preds = %for.cond1
  br label %for.inc7, !dbg !787

SUSAN: nextRegionEntryBB for.inc7
for region: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc7<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

SUSAN: nextRegionEntryBB for.end9
SUSAN: entry block is a linear region! for.end9
CBERegion: including for.end9 in a linear region
CBERegion: nextBB 
for.end9:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %7 = sext i32 %nj to i64, !dbg !792
  %8 = sext i32 %nk to i64, !dbg !792
  %9 = sext i32 %nk to i64, !dbg !792
  br label %for.cond10, !dbg !792

SUSAN: nextRegionEntryBB for.cond10
CBackend: entryBB is a loop: for.cond10
SUSAN: entry block is a loop region! for.cond10
creating loop region for entryBB: for.cond10
SUSAN: loop at 355 Loop at depth 1 containing: %for.cond10<header><exiting>,%for.body12,%for.cond13,%for.end28,%for.inc29<latch>,%for.body15,%for.inc26
    Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
term 6818:   br i1 %cmp11, label %for.body12, label %for.end31, !dbg !797
CBERegion: startBB 393: 
for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond13, !dbg !798

CBERegion: here? 149
CBackend: entryBB is a loop: for.body12
but not a header!
SUSAN: entry block is a linear region! for.body12
CBERegion: including for.body12 in a linear region
CBERegion: nextBB 
for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond13, !dbg !798

SUSAN: nextRegionEntryBB for.cond13
for region: Loop at depth 1 containing: %for.cond10<header><exiting>,%for.body12,%for.cond13,%for.end28,%for.inc29<latch>,%for.body15,%for.inc26
    Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.cond13
SUSAN: entry block is a loop region! for.cond13
creating loop region for entryBB: for.cond13
SUSAN: loop at 355 Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
term 6818:   br i1 %cmp14, label %for.body15, label %for.end28, !dbg !803
CBERegion: startBB 393: 
for.body15:                                       ; preds = %for.cond13
  %10 = trunc i64 %indvars.iv22 to i32, !dbg !804
  %conv16 = sitofp i32 %10 to double, !dbg !804
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !806
  %conv18 = sitofp i32 %11 to double, !dbg !806
  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
  %conv20 = sitofp i32 %nj to double, !dbg !808
  %div21 = fdiv double %mul19, %conv20, !dbg !809
  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !810
  %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
  store double %div21, double* %arrayidx25, align 8, !dbg !813
  br label %for.inc26, !dbg !812

CBERegion: here? 149
CBackend: entryBB is a loop: for.body15
but not a header!
SUSAN: entry block is a linear region! for.body15
CBERegion: including for.body15 in a linear region
CBERegion: nextBB 
for.body15:                                       ; preds = %for.cond13
  %10 = trunc i64 %indvars.iv22 to i32, !dbg !804
  %conv16 = sitofp i32 %10 to double, !dbg !804
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !806
  %conv18 = sitofp i32 %11 to double, !dbg !806
  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
  %conv20 = sitofp i32 %nj to double, !dbg !808
  %div21 = fdiv double %mul19, %conv20, !dbg !809
  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !810
  %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
  store double %div21, double* %arrayidx25, align 8, !dbg !813
  br label %for.inc26, !dbg !812

SUSAN: nextRegionEntryBB for.inc26
for region: Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

SUSAN: nextRegionEntryBB for.end28
for region: Loop at depth 1 containing: %for.cond10<header><exiting>,%for.body12,%for.cond13,%for.end28,%for.inc29<latch>,%for.body15,%for.inc26
    Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.end28
but not a header!
SUSAN: entry block is a linear region! for.end28
CBERegion: including for.end28 in a linear region
CBERegion: nextBB 
for.end28:                                        ; preds = %for.cond13
  br label %for.inc29, !dbg !816

SUSAN: nextRegionEntryBB for.inc29
for region: Loop at depth 1 containing: %for.cond10<header><exiting>,%for.body12,%for.cond13,%for.end28,%for.inc29<latch>,%for.body15,%for.inc26
    Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

SUSAN: nextRegionEntryBB for.end31
SUSAN: entry block is a linear region! for.end31
CBERegion: including for.end31 in a linear region
CBERegion: nextBB 
for.end31:                                        ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %14 = sext i32 %nj to i64, !dbg !821
  %15 = sext i32 %nl to i64, !dbg !821
  %16 = sext i32 %nl to i64, !dbg !821
  br label %for.cond32, !dbg !821

SUSAN: nextRegionEntryBB for.cond32
CBackend: entryBB is a loop: for.cond32
SUSAN: entry block is a loop region! for.cond32
creating loop region for entryBB: for.cond32
SUSAN: loop at 355 Loop at depth 1 containing: %for.cond32<header><exiting>,%for.body34,%for.cond35,%for.end50,%for.inc51<latch>,%for.body37,%for.inc48
    Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
term 6818:   br i1 %cmp33, label %for.body34, label %for.end53, !dbg !826
CBERegion: startBB 393: 
for.body34:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond35, !dbg !827

CBERegion: here? 149
CBackend: entryBB is a loop: for.body34
but not a header!
SUSAN: entry block is a linear region! for.body34
CBERegion: including for.body34 in a linear region
CBERegion: nextBB 
for.body34:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond35, !dbg !827

SUSAN: nextRegionEntryBB for.cond35
for region: Loop at depth 1 containing: %for.cond32<header><exiting>,%for.body34,%for.cond35,%for.end50,%for.inc51<latch>,%for.body37,%for.inc48
    Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.cond35
SUSAN: entry block is a loop region! for.cond35
creating loop region for entryBB: for.cond35
SUSAN: loop at 355 Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
term 6818:   br i1 %cmp36, label %for.body37, label %for.end50, !dbg !832
CBERegion: startBB 393: 
for.body37:                                       ; preds = %for.cond35
  %17 = trunc i64 %indvars.iv16 to i32, !dbg !833
  %conv38 = sitofp i32 %17 to double, !dbg !833
  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !834
  %19 = trunc i64 %18 to i32, !dbg !835
  %conv40 = sitofp i32 %19 to double, !dbg !835
  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
  %conv42 = sitofp i32 %nl to double, !dbg !837
  %div43 = fdiv double %mul41, %conv42, !dbg !838
  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !839
  %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
  store double %div43, double* %arrayidx47, align 8, !dbg !842
  br label %for.inc48, !dbg !841

CBERegion: here? 149
CBackend: entryBB is a loop: for.body37
but not a header!
SUSAN: entry block is a linear region! for.body37
CBERegion: including for.body37 in a linear region
CBERegion: nextBB 
for.body37:                                       ; preds = %for.cond35
  %17 = trunc i64 %indvars.iv16 to i32, !dbg !833
  %conv38 = sitofp i32 %17 to double, !dbg !833
  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !834
  %19 = trunc i64 %18 to i32, !dbg !835
  %conv40 = sitofp i32 %19 to double, !dbg !835
  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
  %conv42 = sitofp i32 %nl to double, !dbg !837
  %div43 = fdiv double %mul41, %conv42, !dbg !838
  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !839
  %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
  store double %div43, double* %arrayidx47, align 8, !dbg !842
  br label %for.inc48, !dbg !841

SUSAN: nextRegionEntryBB for.inc48
for region: Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

SUSAN: nextRegionEntryBB for.end50
for region: Loop at depth 1 containing: %for.cond32<header><exiting>,%for.body34,%for.cond35,%for.end50,%for.inc51<latch>,%for.body37,%for.inc48
    Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.end50
but not a header!
SUSAN: entry block is a linear region! for.end50
CBERegion: including for.end50 in a linear region
CBERegion: nextBB 
for.end50:                                        ; preds = %for.cond35
  br label %for.inc51, !dbg !846

SUSAN: nextRegionEntryBB for.inc51
for region: Loop at depth 1 containing: %for.cond32<header><exiting>,%for.body34,%for.cond35,%for.end50,%for.inc51<latch>,%for.body37,%for.inc48
    Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

SUSAN: nextRegionEntryBB for.end53
SUSAN: entry block is a linear region! for.end53
CBERegion: including for.end53 in a linear region
CBERegion: nextBB 
for.end53:                                        ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %22 = sext i32 %nl to i64, !dbg !851
  %23 = sext i32 %ni to i64, !dbg !851
  %24 = sext i32 %ni to i64, !dbg !851
  br label %for.cond54, !dbg !851

SUSAN: nextRegionEntryBB for.cond54
CBackend: entryBB is a loop: for.cond54
SUSAN: entry block is a loop region! for.cond54
creating loop region for entryBB: for.cond54
SUSAN: loop at 355 Loop at depth 1 containing: %for.cond54<header><exiting>,%for.body56,%for.cond57,%for.end72,%for.inc73<latch>,%for.body59,%for.inc70
    Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
term 6818:   br i1 %cmp55, label %for.body56, label %for.end75, !dbg !856
CBERegion: startBB 393: 
for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond57, !dbg !857

CBERegion: here? 149
CBackend: entryBB is a loop: for.body56
but not a header!
SUSAN: entry block is a linear region! for.body56
CBERegion: including for.body56 in a linear region
CBERegion: nextBB 
for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond57, !dbg !857

SUSAN: nextRegionEntryBB for.cond57
for region: Loop at depth 1 containing: %for.cond54<header><exiting>,%for.body56,%for.cond57,%for.end72,%for.inc73<latch>,%for.body59,%for.inc70
    Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.cond57
SUSAN: entry block is a loop region! for.cond57
creating loop region for entryBB: for.cond57
SUSAN: loop at 355 Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
term 6818:   br i1 %cmp58, label %for.body59, label %for.end72, !dbg !862
CBERegion: startBB 393: 
for.body59:                                       ; preds = %for.cond57
  %25 = trunc i64 %indvars.iv9 to i32, !dbg !863
  %conv60 = sitofp i32 %25 to double, !dbg !863
  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !864
  %27 = trunc i64 %26 to i32, !dbg !865
  %conv62 = sitofp i32 %27 to double, !dbg !865
  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
  %conv64 = sitofp i32 %nk to double, !dbg !867
  %div65 = fdiv double %mul63, %conv64, !dbg !868
  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !869
  %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
  store double %div65, double* %arrayidx69, align 8, !dbg !872
  br label %for.inc70, !dbg !871

CBERegion: here? 149
CBackend: entryBB is a loop: for.body59
but not a header!
SUSAN: entry block is a linear region! for.body59
CBERegion: including for.body59 in a linear region
CBERegion: nextBB 
for.body59:                                       ; preds = %for.cond57
  %25 = trunc i64 %indvars.iv9 to i32, !dbg !863
  %conv60 = sitofp i32 %25 to double, !dbg !863
  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !864
  %27 = trunc i64 %26 to i32, !dbg !865
  %conv62 = sitofp i32 %27 to double, !dbg !865
  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
  %conv64 = sitofp i32 %nk to double, !dbg !867
  %div65 = fdiv double %mul63, %conv64, !dbg !868
  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !869
  %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
  store double %div65, double* %arrayidx69, align 8, !dbg !872
  br label %for.inc70, !dbg !871

SUSAN: nextRegionEntryBB for.inc70
for region: Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

SUSAN: nextRegionEntryBB for.end72
for region: Loop at depth 1 containing: %for.cond54<header><exiting>,%for.body56,%for.cond57,%for.end72,%for.inc73<latch>,%for.body59,%for.inc70
    Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.end72
but not a header!
SUSAN: entry block is a linear region! for.end72
CBERegion: including for.end72 in a linear region
CBERegion: nextBB 
for.end72:                                        ; preds = %for.cond57
  br label %for.inc73, !dbg !876

SUSAN: nextRegionEntryBB for.inc73
for region: Loop at depth 1 containing: %for.cond54<header><exiting>,%for.body56,%for.cond57,%for.end72,%for.inc73<latch>,%for.body59,%for.inc70
    Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

SUSAN: nextRegionEntryBB for.end75
SUSAN: entry block is a linear region! for.end75
CBERegion: including for.end75 in a linear region
CBERegion: nextBB 
for.end75:                                        ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !761, metadata !DIExpression()), !dbg !752
  %30 = sext i32 %nj to i64, !dbg !881
  %31 = sext i32 %ni to i64, !dbg !881
  %32 = sext i32 %ni to i64, !dbg !881
  br label %for.cond76, !dbg !881

SUSAN: nextRegionEntryBB for.cond76
CBackend: entryBB is a loop: for.cond76
SUSAN: entry block is a loop region! for.cond76
creating loop region for entryBB: for.cond76
SUSAN: loop at 355 Loop at depth 1 containing: %for.cond76<header><exiting>,%for.body78,%for.cond79,%for.end88,%for.inc89<latch>,%for.body81,%for.inc86
    Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
term 6818:   br i1 %cmp77, label %for.body78, label %for.end91, !dbg !886
CBERegion: startBB 393: 
for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond79, !dbg !887

CBERegion: here? 149
CBackend: entryBB is a loop: for.body78
but not a header!
SUSAN: entry block is a linear region! for.body78
CBERegion: including for.body78 in a linear region
CBERegion: nextBB 
for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.value(metadata i32 0, metadata !768, metadata !DIExpression()), !dbg !752
  br label %for.cond79, !dbg !887

SUSAN: nextRegionEntryBB for.cond79
for region: Loop at depth 1 containing: %for.cond76<header><exiting>,%for.body78,%for.cond79,%for.end88,%for.inc89<latch>,%for.body81,%for.inc86
    Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.cond79
SUSAN: entry block is a loop region! for.cond79
creating loop region for entryBB: for.cond79
SUSAN: loop at 355 Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
term 6818:   br i1 %cmp80, label %for.body81, label %for.end88, !dbg !892
CBERegion: startBB 393: 
for.body81:                                       ; preds = %for.cond79
  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !893
  %34 = add nsw i64 %33, %indvars.iv, !dbg !894
  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !896
  br label %for.inc86, !dbg !895

CBERegion: here? 149
CBackend: entryBB is a loop: for.body81
but not a header!
SUSAN: entry block is a linear region! for.body81
CBERegion: including for.body81 in a linear region
CBERegion: nextBB 
for.body81:                                       ; preds = %for.cond79
  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !893
  %34 = add nsw i64 %33, %indvars.iv, !dbg !894
  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !896
  br label %for.inc86, !dbg !895

SUSAN: nextRegionEntryBB for.inc86
for region: Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

SUSAN: nextRegionEntryBB for.end88
for region: Loop at depth 1 containing: %for.cond76<header><exiting>,%for.body78,%for.cond79,%for.end88,%for.inc89<latch>,%for.body81,%for.inc86
    Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.end88
but not a header!
SUSAN: entry block is a linear region! for.end88
CBERegion: including for.end88 in a linear region
CBERegion: nextBB 
for.end88:                                        ; preds = %for.cond79
  br label %for.inc89, !dbg !900

SUSAN: nextRegionEntryBB for.inc89
for region: Loop at depth 1 containing: %for.cond76<header><exiting>,%for.body78,%for.cond79,%for.end88,%for.inc89<latch>,%for.body81,%for.inc86
    Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

SUSAN: nextRegionEntryBB for.end91
SUSAN: entry block is a linear region! for.end91
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %ni, metadata !864, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nj, metadata !866, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nk, metadata !867, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nl, metadata !868, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %A, metadata !869, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %B, metadata !870, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %C, metadata !871, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %D, metadata !872, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %tmp, metadata !873, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !881, metadata !DIExpression()), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
========== IV MAP==========
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond76<header><exiting>,%for.body78,%for.cond79,%for.end88,%for.inc89<latch>,%for.body81,%for.inc86
    Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

SUSAN: found LP for L:Loop at depth 1 containing: %for.cond54<header><exiting>,%for.body56,%for.cond57,%for.end72,%for.inc73<latch>,%for.body59,%for.inc70
    Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

SUSAN: found LP for L:Loop at depth 1 containing: %for.cond32<header><exiting>,%for.body34,%for.cond35,%for.end50,%for.inc51<latch>,%for.body37,%for.inc48
    Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

SUSAN: found LP for L:Loop at depth 1 containing: %for.cond10<header><exiting>,%for.body12,%for.cond13,%for.end28,%for.inc29<latch>,%for.body15,%for.inc26
    Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

SUSAN: found LP for L:Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc7<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

SUSAN: found LP for L:Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

SUSAN: found LP for L:Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

SUSAN: found LP for L:Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

SUSAN: found LP for L:Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

SUSAN: found LP for L:Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

currInst :  %0 = sext i32 %nk to i64, !dbg !762
currInst :  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !772
currInst :  br i1 %cmp2, label %for.body3, label %for.end, !dbg !774
currInst :  %1 = sext i32 %ni to i64, !dbg !762
currInst :  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !765
currInst :  br i1 %cmp, label %for.body, label %for.end9, !dbg !767
currInst :  %2 = sext i32 %ni to i64, !dbg !762
currInst :  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !780
currInst :  %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !765
currInst :  br i1 %cmp, label %for.body, label %for.end9, !dbg !767
currInst :  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !772
currInst :  br i1 %cmp2, label %for.body3, label %for.end, !dbg !774
currInst :  %3 = trunc i64 %indvars.iv28 to i32, !dbg !775
currInst :  %conv = sitofp i32 %3 to double, !dbg !775
currInst :  %mul = fmul contract double %conv, %conv4, !dbg !777
currInst :  %div = fdiv double %mul, %conv5, !dbg !779
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %conv = sitofp i32 %3 to double, !dbg !775
currInst :  %mul = fmul contract double %conv, %conv4, !dbg !777
currInst :  %div = fdiv double %mul, %conv5, !dbg !779
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %4 = trunc i64 %indvars.iv25 to i32, !dbg !776
currInst :  %conv4 = sitofp i32 %4 to double, !dbg !776
currInst :  %mul = fmul contract double %conv, %conv4, !dbg !777
currInst :  %div = fdiv double %mul, %conv5, !dbg !779
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %conv4 = sitofp i32 %4 to double, !dbg !776
currInst :  %mul = fmul contract double %conv, %conv4, !dbg !777
currInst :  %div = fdiv double %mul, %conv5, !dbg !779
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %mul = fmul contract double %conv, %conv4, !dbg !777
currInst :  %div = fdiv double %mul, %conv5, !dbg !779
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %conv5 = sitofp i32 %ni to double, !dbg !778
currInst :  %div = fdiv double %mul, %conv5, !dbg !779
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %div = fdiv double %mul, %conv5, !dbg !779
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !780
currInst :  %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: add () to inst:   %5 = mul nsw i64 %indvars.iv28, %2, !dbg !780
currInst :  %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: add () to inst:   %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
currInst :  store double %div, double* %arrayidx, align 8, !dbg !783
currInst :  %7 = sext i32 %nj to i64, !dbg !792
currInst :  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !801
currInst :  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !803
currInst :  %8 = sext i32 %nk to i64, !dbg !792
currInst :  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !795
currInst :  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !797
currInst :  %9 = sext i32 %nk to i64, !dbg !792
currInst :  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !810
currInst :  %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
currInst :  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !795
currInst :  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !797
currInst :  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !801
currInst :  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !803
currInst :  %10 = trunc i64 %indvars.iv22 to i32, !dbg !804
currInst :  %conv16 = sitofp i32 %10 to double, !dbg !804
currInst :  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
currInst :  %div21 = fdiv double %mul19, %conv20, !dbg !809
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %conv16 = sitofp i32 %10 to double, !dbg !804
currInst :  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
currInst :  %div21 = fdiv double %mul19, %conv20, !dbg !809
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !806
currInst :  %conv18 = sitofp i32 %11 to double, !dbg !806
currInst :  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
currInst :  %div21 = fdiv double %mul19, %conv20, !dbg !809
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %conv18 = sitofp i32 %11 to double, !dbg !806
currInst :  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
currInst :  %div21 = fdiv double %mul19, %conv20, !dbg !809
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
currInst :  %div21 = fdiv double %mul19, %conv20, !dbg !809
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %conv20 = sitofp i32 %nj to double, !dbg !808
currInst :  %div21 = fdiv double %mul19, %conv20, !dbg !809
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %div21 = fdiv double %mul19, %conv20, !dbg !809
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !810
currInst :  %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
currInst :  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: add () to inst:   %12 = mul nsw i64 %indvars.iv22, %9, !dbg !810
currInst :  %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
currInst :  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: add () to inst:   %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
currInst :  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
currInst :  store double %div21, double* %arrayidx25, align 8, !dbg !813
currInst :  %14 = sext i32 %nj to i64, !dbg !821
currInst :  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !830
currInst :  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !832
currInst :  %15 = sext i32 %nl to i64, !dbg !821
currInst :  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !824
currInst :  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !826
currInst :  %16 = sext i32 %nl to i64, !dbg !821
currInst :  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !839
currInst :  %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
currInst :  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !824
currInst :  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !826
currInst :  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !830
currInst :  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !832
currInst :  %17 = trunc i64 %indvars.iv16 to i32, !dbg !833
currInst :  %conv38 = sitofp i32 %17 to double, !dbg !833
currInst :  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
currInst :  %div43 = fdiv double %mul41, %conv42, !dbg !838
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %conv38 = sitofp i32 %17 to double, !dbg !833
currInst :  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
currInst :  %div43 = fdiv double %mul41, %conv42, !dbg !838
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !834
currInst :  %19 = trunc i64 %18 to i32, !dbg !835
currInst :  %conv40 = sitofp i32 %19 to double, !dbg !835
currInst :  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: add () to inst:   %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !834
currInst :  %19 = trunc i64 %18 to i32, !dbg !835
currInst :  %conv40 = sitofp i32 %19 to double, !dbg !835
currInst :  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
currInst :  %div43 = fdiv double %mul41, %conv42, !dbg !838
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %conv40 = sitofp i32 %19 to double, !dbg !835
currInst :  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
currInst :  %div43 = fdiv double %mul41, %conv42, !dbg !838
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
currInst :  %div43 = fdiv double %mul41, %conv42, !dbg !838
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %conv42 = sitofp i32 %nl to double, !dbg !837
currInst :  %div43 = fdiv double %mul41, %conv42, !dbg !838
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %div43 = fdiv double %mul41, %conv42, !dbg !838
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !839
currInst :  %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
currInst :  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: add () to inst:   %20 = mul nsw i64 %indvars.iv16, %16, !dbg !839
currInst :  %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
currInst :  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: add () to inst:   %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
currInst :  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
currInst :  store double %div43, double* %arrayidx47, align 8, !dbg !842
currInst :  %22 = sext i32 %nl to i64, !dbg !851
currInst :  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !860
currInst :  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !862
currInst :  %23 = sext i32 %ni to i64, !dbg !851
currInst :  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !854
currInst :  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !856
currInst :  %24 = sext i32 %ni to i64, !dbg !851
currInst :  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !869
currInst :  %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
currInst :  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !854
currInst :  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !856
currInst :  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !860
currInst :  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !862
currInst :  %25 = trunc i64 %indvars.iv9 to i32, !dbg !863
currInst :  %conv60 = sitofp i32 %25 to double, !dbg !863
currInst :  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
currInst :  %div65 = fdiv double %mul63, %conv64, !dbg !868
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %conv60 = sitofp i32 %25 to double, !dbg !863
currInst :  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
currInst :  %div65 = fdiv double %mul63, %conv64, !dbg !868
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !864
currInst :  %27 = trunc i64 %26 to i32, !dbg !865
currInst :  %conv62 = sitofp i32 %27 to double, !dbg !865
currInst :  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: add () to inst:   %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !864
currInst :  %27 = trunc i64 %26 to i32, !dbg !865
currInst :  %conv62 = sitofp i32 %27 to double, !dbg !865
currInst :  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
currInst :  %div65 = fdiv double %mul63, %conv64, !dbg !868
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %conv62 = sitofp i32 %27 to double, !dbg !865
currInst :  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
currInst :  %div65 = fdiv double %mul63, %conv64, !dbg !868
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
currInst :  %div65 = fdiv double %mul63, %conv64, !dbg !868
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %conv64 = sitofp i32 %nk to double, !dbg !867
currInst :  %div65 = fdiv double %mul63, %conv64, !dbg !868
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %div65 = fdiv double %mul63, %conv64, !dbg !868
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !869
currInst :  %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
currInst :  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: add () to inst:   %28 = mul nsw i64 %indvars.iv9, %24, !dbg !869
currInst :  %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
currInst :  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: add () to inst:   %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
currInst :  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
currInst :  store double %div65, double* %arrayidx69, align 8, !dbg !872
currInst :  %30 = sext i32 %nj to i64, !dbg !881
currInst :  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !890
currInst :  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !892
currInst :  %31 = sext i32 %ni to i64, !dbg !881
currInst :  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !884
currInst :  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !886
currInst :  %32 = sext i32 %ni to i64, !dbg !881
currInst :  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !893
currInst :  %34 = add nsw i64 %33, %indvars.iv, !dbg !894
currInst :  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
currInst :  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !896
currInst :  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !884
currInst :  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !886
currInst :  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !890
currInst :  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !892
currInst :  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !893
currInst :  %34 = add nsw i64 %33, %indvars.iv, !dbg !894
currInst :  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: add () to inst:   %33 = mul nsw i64 %indvars.iv2, %32, !dbg !893
currInst :  %34 = add nsw i64 %33, %indvars.iv, !dbg !894
currInst :  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: add () to inst:   %34 = add nsw i64 %33, %indvars.iv, !dbg !894
currInst :  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
currInst :  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !896
LP->LV 1694:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
LP->L 1694: Loop at depth 1 containing: %for.cond32<header><exiting>,%for.body34,%for.cond35,%for.end50,%for.inc51<latch>,%for.body37,%for.inc48
    Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

nestlevel: i
LP->LV 1694:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
LP->L 1694: Loop at depth 1 containing: %for.cond10<header><exiting>,%for.body12,%for.cond13,%for.end28,%for.inc29<latch>,%for.body15,%for.inc26
    Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

nestlevel: i
LP->LV 1694:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
LP->L 1694: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc7<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

nestlevel: i
LP->LV 1694:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
LP->L 1694: Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

nestlevel: j
LP->LV 1694:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
LP->L 1694: Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

nestlevel: j
LP->LV 1694:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
LP->L 1694: Loop at depth 2 containing: %for.cond35<header><exiting>,%for.body37,%for.inc48<latch>

nestlevel: j
LP->LV 1694:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
LP->L 1694: Loop at depth 2 containing: %for.cond13<header><exiting>,%for.body15,%for.inc26<latch>

nestlevel: j
LP->LV 1694:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
LP->L 1694: Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>

nestlevel: j
LP->LV 1694:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
LP->L 1694: Loop at depth 1 containing: %for.cond76<header><exiting>,%for.body78,%for.cond79,%for.end88,%for.inc89<latch>,%for.body81,%for.inc86
    Loop at depth 2 containing: %for.cond79<header><exiting>,%for.body81,%for.inc86<latch>

nestlevel: i
LP->LV 1694:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
LP->L 1694: Loop at depth 1 containing: %for.cond54<header><exiting>,%for.body56,%for.cond57,%for.end72,%for.inc73<latch>,%for.body59,%for.inc70
    Loop at depth 2 containing: %for.cond57<header><exiting>,%for.body59,%for.inc70<latch>

nestlevel: i
SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define internal void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double* %A, double* %B, double* %C, double* %D, double* %tmp) #2 !dbg !861 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !864, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nj, metadata !866, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nk, metadata !867, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nl, metadata !868, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %A, metadata !869, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %B, metadata !870, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %C, metadata !871, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %D, metadata !872, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %tmp, metadata !873, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %0 = sext i32 %nk to i64, !dbg !875
  %1 = sext i32 %ni to i64, !dbg !875
  %2 = sext i32 %ni to i64, !dbg !875
  br label %for.cond, !dbg !875

for.cond:                                         ; preds = %for.inc7, %entry
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !877
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !878
  br i1 %cmp, label %for.body, label %for.end9, !dbg !880

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond1, !dbg !882

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !884
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !885
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !887

for.body3:                                        ; preds = %for.cond1
  %3 = trunc i64 %indvars.iv28 to i32, !dbg !888
  %conv = sitofp i32 %3 to double, !dbg !888
  %4 = trunc i64 %indvars.iv25 to i32, !dbg !889
  %conv4 = sitofp i32 %4 to double, !dbg !889
  %mul = fmul contract double %conv, %conv4, !dbg !890
  %conv5 = sitofp i32 %ni to double, !dbg !891
  %div = fdiv double %mul, %conv5, !dbg !892
  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !893
  %6 = add nsw i64 %5, %indvars.iv25, !dbg !894
  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !895
  store double %div, double* %arrayidx, align 8, !dbg !896
  br label %for.inc, !dbg !895

for.inc:                                          ; preds = %for.body3
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !897
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond1, !dbg !898, !llvm.loop !899

for.end:                                          ; preds = %for.cond1
  br label %for.inc7, !dbg !900

for.inc7:                                         ; preds = %for.end
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !901
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond, !dbg !902, !llvm.loop !903

for.end9:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %7 = sext i32 %nj to i64, !dbg !905
  %8 = sext i32 %nk to i64, !dbg !905
  %9 = sext i32 %nk to i64, !dbg !905
  br label %for.cond10, !dbg !905

for.cond10:                                       ; preds = %for.inc29, %for.end9
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !907
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !908
  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !910

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond13, !dbg !911

for.cond13:                                       ; preds = %for.inc26, %for.body12
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !913
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !914
  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !916

for.body15:                                       ; preds = %for.cond13
  %10 = trunc i64 %indvars.iv22 to i32, !dbg !917
  %conv16 = sitofp i32 %10 to double, !dbg !917
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !918
  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !919
  %conv18 = sitofp i32 %11 to double, !dbg !919
  %mul19 = fmul contract double %conv16, %conv18, !dbg !920
  %conv20 = sitofp i32 %nj to double, !dbg !921
  %div21 = fdiv double %mul19, %conv20, !dbg !922
  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !923
  %13 = add nsw i64 %12, %indvars.iv19, !dbg !924
  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !925
  store double %div21, double* %arrayidx25, align 8, !dbg !926
  br label %for.inc26, !dbg !925

for.inc26:                                        ; preds = %for.body15
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond13, !dbg !927, !llvm.loop !928

for.end28:                                        ; preds = %for.cond13
  br label %for.inc29, !dbg !929

for.inc29:                                        ; preds = %for.end28
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !930
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond10, !dbg !931, !llvm.loop !932

for.end31:                                        ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %14 = sext i32 %nj to i64, !dbg !934
  %15 = sext i32 %nl to i64, !dbg !934
  %16 = sext i32 %nl to i64, !dbg !934
  br label %for.cond32, !dbg !934

for.cond32:                                       ; preds = %for.inc51, %for.end31
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !936
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !937
  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !939

for.body34:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond35, !dbg !940

for.cond35:                                       ; preds = %for.inc48, %for.body34
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !942
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !943
  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !945

for.body37:                                       ; preds = %for.cond35
  %17 = trunc i64 %indvars.iv16 to i32, !dbg !946
  %conv38 = sitofp i32 %17 to double, !dbg !946
  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !947
  %19 = trunc i64 %18 to i32, !dbg !948
  %conv40 = sitofp i32 %19 to double, !dbg !948
  %mul41 = fmul contract double %conv38, %conv40, !dbg !949
  %conv42 = sitofp i32 %nl to double, !dbg !950
  %div43 = fdiv double %mul41, %conv42, !dbg !951
  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !952
  %21 = add nsw i64 %20, %indvars.iv12, !dbg !953
  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !954
  store double %div43, double* %arrayidx47, align 8, !dbg !955
  br label %for.inc48, !dbg !954

for.inc48:                                        ; preds = %for.body37
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !956
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond35, !dbg !957, !llvm.loop !958

for.end50:                                        ; preds = %for.cond35
  br label %for.inc51, !dbg !959

for.inc51:                                        ; preds = %for.end50
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !960
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond32, !dbg !961, !llvm.loop !962

for.end53:                                        ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %22 = sext i32 %nl to i64, !dbg !964
  %23 = sext i32 %ni to i64, !dbg !964
  %24 = sext i32 %ni to i64, !dbg !964
  br label %for.cond54, !dbg !964

for.cond54:                                       ; preds = %for.inc73, %for.end53
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !966
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !967
  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !969

for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond57, !dbg !970

for.cond57:                                       ; preds = %for.inc70, %for.body56
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !972
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !973
  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !975

for.body59:                                       ; preds = %for.cond57
  %25 = trunc i64 %indvars.iv9 to i32, !dbg !976
  %conv60 = sitofp i32 %25 to double, !dbg !976
  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !977
  %27 = trunc i64 %26 to i32, !dbg !978
  %conv62 = sitofp i32 %27 to double, !dbg !978
  %mul63 = fmul contract double %conv60, %conv62, !dbg !979
  %conv64 = sitofp i32 %nk to double, !dbg !980
  %div65 = fdiv double %mul63, %conv64, !dbg !981
  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !982
  %29 = add nsw i64 %28, %indvars.iv5, !dbg !983
  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !984
  store double %div65, double* %arrayidx69, align 8, !dbg !985
  br label %for.inc70, !dbg !984

for.inc70:                                        ; preds = %for.body59
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !986
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond57, !dbg !987, !llvm.loop !988

for.end72:                                        ; preds = %for.cond57
  br label %for.inc73, !dbg !989

for.inc73:                                        ; preds = %for.end72
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !990
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond54, !dbg !991, !llvm.loop !992

for.end75:                                        ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %30 = sext i32 %nj to i64, !dbg !994
  %31 = sext i32 %ni to i64, !dbg !994
  %32 = sext i32 %ni to i64, !dbg !994
  br label %for.cond76, !dbg !994

for.cond76:                                       ; preds = %for.inc89, %for.end75
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !996
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !997
  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !999

for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond79, !dbg !1000

for.cond79:                                       ; preds = %for.inc86, %for.body78
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !1002
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !1003
  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !1005

for.body81:                                       ; preds = %for.cond79
  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !1006
  %34 = add nsw i64 %33, %indvars.iv, !dbg !1007
  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !1008
  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !1009
  br label %for.inc86, !dbg !1008

for.inc86:                                        ; preds = %for.body81
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1010
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond79, !dbg !1011, !llvm.loop !1012

for.end88:                                        ; preds = %for.cond79
  br label %for.inc89, !dbg !1013

for.inc89:                                        ; preds = %for.end88
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !1014
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond76, !dbg !1015, !llvm.loop !1016

for.end91:                                        ; preds = %for.cond76
  ret void, !dbg !1018
}

SUSAN: found argument 6346: i32 %ni
CBackend: varname: ni
  call void @llvm.dbg.value(metadata i32 %ni, metadata !864, metadata !DIExpression()), !dbg !865
SUSAN: found argument 6346: i32 %nj
CBackend: varname: nj
  call void @llvm.dbg.value(metadata i32 %nj, metadata !866, metadata !DIExpression()), !dbg !865
SUSAN: found argument 6346: i32 %nk
CBackend: varname: nk
  call void @llvm.dbg.value(metadata i32 %nk, metadata !867, metadata !DIExpression()), !dbg !865
SUSAN: found argument 6346: i32 %nl
CBackend: varname: nl
  call void @llvm.dbg.value(metadata i32 %nl, metadata !868, metadata !DIExpression()), !dbg !865
SUSAN: found argument 6346: double* %A
CBackend: varname: A
  call void @llvm.dbg.value(metadata double* %A, metadata !869, metadata !DIExpression()), !dbg !865
SUSAN: found argument 6346: double* %B
CBackend: varname: B
  call void @llvm.dbg.value(metadata double* %B, metadata !870, metadata !DIExpression()), !dbg !865
SUSAN: found argument 6346: double* %C
CBackend: varname: C
  call void @llvm.dbg.value(metadata double* %C, metadata !871, metadata !DIExpression()), !dbg !865
SUSAN: found argument 6346: double* %D
CBackend: varname: D
  call void @llvm.dbg.value(metadata double* %D, metadata !872, metadata !DIExpression()), !dbg !865
SUSAN: found argument 6346: double* %tmp
CBackend: varname: tmp
  call void @llvm.dbg.value(metadata double* %tmp, metadata !873, metadata !DIExpression()), !dbg !865
SUSAN: getting value name for:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
inst from IRNaming:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
original name : i
returning name: i
SUSAN: phi related name: i
SUSAN: getting value name for:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
inst from IRNaming:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
original name : j
returning name: j
SUSAN: phi related name: j
SUSAN: getting value name for:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
inst from IRNaming:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
original name : i
returning name: i
SUSAN: phi related name: i
SUSAN: getting value name for:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
inst from IRNaming:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
original name : j
returning name: j
SUSAN: phi related name: j
SUSAN: getting value name for:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
inst from IRNaming:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
original name : i
returning name: i
SUSAN: phi related name: i
SUSAN: getting value name for:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
inst from IRNaming:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
original name : j
returning name: j
SUSAN: phi related name: j
SUSAN: getting value name for:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
inst from IRNaming:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
original name : i
returning name: i
SUSAN: phi related name: i
SUSAN: getting value name for:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
inst from IRNaming:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
original name : j
returning name: j
SUSAN: phi related name: j
SUSAN: getting value name for:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
inst from IRNaming:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
original name : i
returning name: i
SUSAN: phi related name: i
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
original name : j
returning name: j
SUSAN: phi related name: j
=========================SUSAN: IR NAMING BEFORE=====================
i32 %ni -> ni
i32 %nj -> nj
i32 %nk -> nk
i32 %nl -> nl
double* %A -> A
double* %B -> B
double* %C -> C
double* %D -> D
double* %tmp -> tmp
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764 -> i
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771 -> j
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784 -> j
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788 -> i
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794 -> i
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800 -> j
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805 -> j
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817 -> i
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823 -> i
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829 -> j
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843 -> j
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847 -> i
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853 -> i
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859 -> j
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873 -> j
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877 -> i
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883 -> i
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889 -> j
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897 -> j
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901 -> i
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %ni, metadata !864, metadata !DIExpression()), !dbg !865
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nj, metadata !866, metadata !DIExpression()), !dbg !865
SUSAN: inst:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nk, metadata !867, metadata !DIExpression()), !dbg !865
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nl, metadata !868, metadata !DIExpression()), !dbg !865
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %A, metadata !869, metadata !DIExpression()), !dbg !865
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %B, metadata !870, metadata !DIExpression()), !dbg !865
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %C, metadata !871, metadata !DIExpression()), !dbg !865
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %D, metadata !872, metadata !DIExpression()), !dbg !865
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %tmp, metadata !873, metadata !DIExpression()), !dbg !865
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
SUSAN: inst:  %0 = sext i32 %nk to i64, !dbg !762
SUSAN: inst:  %1 = sext i32 %ni to i64, !dbg !762
SUSAN: inst:  %2 = sext i32 %ni to i64, !dbg !762
SUSAN: inst:  br label %for.cond, !dbg !762
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !765
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  br i1 %cmp, label %for.body, label %for.end9, !dbg !767
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  br label %for.cond1, !dbg !769
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !772
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  br i1 %cmp2, label %for.body3, label %for.end, !dbg !774
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %3 = trunc i64 %indvars.iv28 to i32, !dbg !775
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %conv = sitofp i32 %3 to double, !dbg !775
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %4 = trunc i64 %indvars.iv25 to i32, !dbg !776
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %conv4 = sitofp i32 %4 to double, !dbg !776
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %mul = fmul contract double %conv, %conv4, !dbg !777
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %conv5 = sitofp i32 %ni to double, !dbg !778
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %div = fdiv double %mul, %conv5, !dbg !779
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !780
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  store double %div, double* %arrayidx, align 8, !dbg !783
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  br label %for.inc, !dbg !782
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
SUSAN: inst:  br label %for.cond1, !dbg !785, !llvm.loop !786
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
SUSAN: inst:  br label %for.inc7, !dbg !787
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
i:  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  br label %for.cond, !dbg !789, !llvm.loop !790
i:  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %7 = sext i32 %nj to i64, !dbg !792
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %8 = sext i32 %nk to i64, !dbg !792
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %9 = sext i32 %nk to i64, !dbg !792
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  br label %for.cond10, !dbg !792
i:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
j:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: inst:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !795
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !797
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  br label %for.cond13, !dbg !798
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !801
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !803
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  %10 = trunc i64 %indvars.iv22 to i32, !dbg !804
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  %conv16 = sitofp i32 %10 to double, !dbg !804
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !806
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  %conv18 = sitofp i32 %11 to double, !dbg !806
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  %mul19 = fmul contract double %conv16, %conv18, !dbg !807
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  %conv20 = sitofp i32 %nj to double, !dbg !808
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  %div21 = fdiv double %mul19, %conv20, !dbg !809
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !810
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  store double %div21, double* %arrayidx25, align 8, !dbg !813
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  br label %for.inc26, !dbg !812
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  br label %for.cond13, !dbg !814, !llvm.loop !815
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: inst:  br label %for.inc29, !dbg !816
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
i:  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  br label %for.cond10, !dbg !818, !llvm.loop !819
i:  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
j:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  %14 = sext i32 %nj to i64, !dbg !821
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  %15 = sext i32 %nl to i64, !dbg !821
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  %16 = sext i32 %nl to i64, !dbg !821
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  br label %for.cond32, !dbg !821
i:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: inst:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !824
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !826
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  br label %for.cond35, !dbg !827
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !830
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !832
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %17 = trunc i64 %indvars.iv16 to i32, !dbg !833
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %conv38 = sitofp i32 %17 to double, !dbg !833
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !834
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %19 = trunc i64 %18 to i32, !dbg !835
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %conv40 = sitofp i32 %19 to double, !dbg !835
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %mul41 = fmul contract double %conv38, %conv40, !dbg !836
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %conv42 = sitofp i32 %nl to double, !dbg !837
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %div43 = fdiv double %mul41, %conv42, !dbg !838
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !839
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  store double %div43, double* %arrayidx47, align 8, !dbg !842
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  br label %for.inc48, !dbg !841
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
SUSAN: inst:  br label %for.cond35, !dbg !844, !llvm.loop !845
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
SUSAN: inst:  br label %for.inc51, !dbg !846
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
i:  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  br label %for.cond32, !dbg !848, !llvm.loop !849
i:  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %22 = sext i32 %nl to i64, !dbg !851
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %23 = sext i32 %ni to i64, !dbg !851
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %24 = sext i32 %ni to i64, !dbg !851
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  br label %for.cond54, !dbg !851
i:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
j:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: inst:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !854
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !856
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  br label %for.cond57, !dbg !857
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !860
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !862
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %25 = trunc i64 %indvars.iv9 to i32, !dbg !863
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %conv60 = sitofp i32 %25 to double, !dbg !863
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !864
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %27 = trunc i64 %26 to i32, !dbg !865
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %conv62 = sitofp i32 %27 to double, !dbg !865
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %mul63 = fmul contract double %conv60, %conv62, !dbg !866
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %conv64 = sitofp i32 %nk to double, !dbg !867
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %div65 = fdiv double %mul63, %conv64, !dbg !868
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !869
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  store double %div65, double* %arrayidx69, align 8, !dbg !872
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  br label %for.inc70, !dbg !871
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
SUSAN: inst:  br label %for.cond57, !dbg !874, !llvm.loop !875
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
SUSAN: inst:  br label %for.inc73, !dbg !876
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
i:  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  br label %for.cond54, !dbg !878, !llvm.loop !879
i:  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
j:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  %30 = sext i32 %nj to i64, !dbg !881
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  %31 = sext i32 %ni to i64, !dbg !881
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  %32 = sext i32 %ni to i64, !dbg !881
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  br label %for.cond76, !dbg !881
i:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: inst:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !874, metadata !DIExpression()), !dbg !865
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !884
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !886
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  br label %for.cond79, !dbg !887
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !881, metadata !DIExpression()), !dbg !865
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !890
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !892
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !893
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  %34 = add nsw i64 %33, %indvars.iv, !dbg !894
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !896
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  br label %for.inc86, !dbg !895
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
SUSAN: inst:  br label %for.cond79, !dbg !898, !llvm.loop !899
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
SUSAN: inst:  br label %for.inc89, !dbg !900
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
i:  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
i:  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  br label %for.cond76, !dbg !902, !llvm.loop !903
i:  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: inst:  ret void, !dbg !905
i:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
=========================SUSAN: IR NAMING=====================
i32 %ni -> ni
i32 %nj -> nj
i32 %nk -> nk
i32 %nl -> nl
double* %A -> A
double* %B -> B
double* %C -> C
double* %D -> D
double* %tmp -> tmp
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764 -> i
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771 -> j
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784 -> j
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788 -> i
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794 -> i
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800 -> j
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805 -> j
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817 -> i
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823 -> i
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829 -> j
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843 -> j
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847 -> i
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853 -> i
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859 -> j
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873 -> j
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877 -> i
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883 -> i
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889 -> j
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897 -> j
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901 -> i
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
SUSAN: getting value name for: double* %C
inst from IRNaming: double* %C
original name : C
returning name: C
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
SUSAN: getting value name for:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
inst from IRNaming:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: declared locals:
SUSAN: declaring 3252:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: getting value name for:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
inst from IRNaming:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: inst at 5950:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: declaring   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: printing type at 5937: i64
SUSAN: getting value name for:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
inst from IRNaming:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: declared locals:
i
SUSAN: declaring 3252:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: getting value name for:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
inst from IRNaming:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: inst at 5950:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: declaring   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: printing type at 5937: i64
SUSAN: getting value name for:   %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
inst from IRNaming:   %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
inst from IRNaming:   %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
inst from IRNaming:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
inst from IRNaming:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
inst from IRNaming:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
inst from IRNaming:   %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
inst from IRNaming:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
inst from IRNaming:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
inst from IRNaming:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
inst from IRNaming:   %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
inst from IRNaming:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
inst from IRNaming:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
inst from IRNaming:   %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
inst from IRNaming:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
inst from IRNaming:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
inst from IRNaming:   %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: am I here 6807??
Linear Region with entry block: entry
SUSAN: printing bb:entry
CBEBackend: printing bb 7082 entry
printing unconditional branch   br label %for.cond, !dbg !762
Loop Region with entry block: for.cond
term 6818:   br i1 %cmp, label %for.body, label %for.end9, !dbg !767
SUSAN: condrelatedinst:  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: condrelatedinst:  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !765
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: declaring 3252:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: getting value name for:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
inst from IRNaming:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
inst from IRNaming:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
original name : i
returning name: i
SUSAN: visiting cast:   %1 = sext i32 %ni to i64, !dbg !762
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
SUSAN: getting value name for:   %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
inst from IRNaming:   %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
inst from IRNaming:   %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
original name : i
returning name: i
CBackend: writeOperand 3595:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: getting value name for:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
inst from IRNaming:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body
SUSAN: printing bb:for.body
CBEBackend: printing bb 7082 for.body
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
printing unconditional branch   br label %for.cond1, !dbg !769
Loop Region with entry block: for.cond1
term 6818:   br i1 %cmp2, label %for.body3, label %for.end, !dbg !774
SUSAN: condrelatedinst:  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: condrelatedinst:  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !772
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: declaring 3252:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: getting value name for:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
inst from IRNaming:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
inst from IRNaming:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
original name : j
returning name: j
SUSAN: visiting cast:   %0 = sext i32 %nk to i64, !dbg !762
CBackend: writeOperand 3595: i32 %nk
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
SUSAN: getting value name for:   %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
inst from IRNaming:   %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
inst from IRNaming:   %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: getting value name for:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
inst from IRNaming:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body3
SUSAN: printing bb:for.body3
CBEBackend: printing bb 7082 for.body3
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: printing instruction   store double %div, double* %arrayidx, align 8, !dbg !783 at 6678
CBEBackend: printing store Inst:   store double %div, double* %arrayidx, align 8, !dbg !783
CBackend: here? 10442
SUSAN: GEPINST:   %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !782
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %A
SUSAN: writing ptr 9994: double* %A
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
CBackend: writeOperand 3595:   %6 = add nsw i64 %5, %indvars.iv25, !dbg !781
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeOperand 3595:   %5 = mul nsw i64 %indvars.iv28, %2, !dbg !780
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeOperand 3595:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: getting value name for:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
inst from IRNaming:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %2 = sext i32 %ni to i64, !dbg !762
SUSAN: visiting cast:   %2 = sext i32 %ni to i64, !dbg !762
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: getting value name for:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
inst from IRNaming:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
CBackend: here? 10445
CBackend: writeOperand 3595:   %div = fdiv double %mul, %conv5, !dbg !779
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeOperand 3595:   %mul = fmul contract double %conv, %conv4, !dbg !777
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeOperand 3595:   %conv = sitofp i32 %3 to double, !dbg !775
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: visiting cast:   %conv = sitofp i32 %3 to double, !dbg !775
CBackend: writeOperand 3595:   %3 = trunc i64 %indvars.iv28 to i32, !dbg !775
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: visiting cast:   %3 = trunc i64 %indvars.iv28 to i32, !dbg !775
CBackend: writeOperand 3595:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: getting value name for:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
inst from IRNaming:   %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %conv4 = sitofp i32 %4 to double, !dbg !776
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: visiting cast:   %conv4 = sitofp i32 %4 to double, !dbg !776
CBackend: writeOperand 3595:   %4 = trunc i64 %indvars.iv25 to i32, !dbg !776
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: visiting cast:   %4 = trunc i64 %indvars.iv25 to i32, !dbg !776
CBackend: writeOperand 3595:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: getting value name for:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
inst from IRNaming:   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %conv5 = sitofp i32 %ni to double, !dbg !778
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: visiting cast:   %conv5 = sitofp i32 %ni to double, !dbg !778
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBackend: writeoperand here 3674? 
CBackend: here? 10462
printing unconditional branch   br label %for.inc, !dbg !782
CBERegion: printing latchBB for.inc
CBERegion: I 316:   %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !784
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
CBERegion: I 316:   br label %for.cond1, !dbg !785, !llvm.loop !786
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
SUSAN: found IV 784  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !771
Linear Region with entry block: for.end
SUSAN: printing bb:for.end
CBEBackend: printing bb 7082 for.end
printing unconditional branch   br label %for.inc7, !dbg !787
CBERegion: printing latchBB for.inc7
CBERegion: I 316:   %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !788
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
CBERegion: I 316:   br label %for.cond, !dbg !789, !llvm.loop !790
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
SUSAN: found IV 784  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !764
Linear Region with entry block: for.end9
SUSAN: printing bb:for.end9
CBEBackend: printing bb 7082 for.end9
printing unconditional branch   br label %for.cond10, !dbg !792
Loop Region with entry block: for.cond10
term 6818:   br i1 %cmp11, label %for.body12, label %for.end31, !dbg !797
SUSAN: condrelatedinst:  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: condrelatedinst:  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !795
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: declaring 3252:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: getting value name for:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
inst from IRNaming:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
inst from IRNaming:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
original name : i
returning name: i
SUSAN: visiting cast:   %8 = sext i32 %nk to i64, !dbg !792
CBackend: writeOperand 3595: i32 %nk
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
SUSAN: getting value name for:   %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
inst from IRNaming:   %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
inst from IRNaming:   %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
original name : i
returning name: i
CBackend: writeOperand 3595:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: getting value name for:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
inst from IRNaming:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body12
SUSAN: printing bb:for.body12
CBEBackend: printing bb 7082 for.body12
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
printing unconditional branch   br label %for.cond13, !dbg !798
Loop Region with entry block: for.cond13
term 6818:   br i1 %cmp14, label %for.body15, label %for.end28, !dbg !803
SUSAN: condrelatedinst:  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: condrelatedinst:  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !801
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: declaring 3252:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: getting value name for:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
inst from IRNaming:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
inst from IRNaming:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
original name : j
returning name: j
SUSAN: visiting cast:   %7 = sext i32 %nj to i64, !dbg !792
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: getting value name for:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
inst from IRNaming:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
inst from IRNaming:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: getting value name for:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
inst from IRNaming:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body15
SUSAN: printing bb:for.body15
CBEBackend: printing bb 7082 for.body15
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: printing instruction   store double %div21, double* %arrayidx25, align 8, !dbg !813 at 6678
CBEBackend: printing store Inst:   store double %div21, double* %arrayidx25, align 8, !dbg !813
CBackend: here? 10442
SUSAN: GEPINST:   %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !812
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %B
SUSAN: writing ptr 9994: double* %B
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
CBackend: writeOperand 3595:   %13 = add nsw i64 %12, %indvars.iv19, !dbg !811
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeOperand 3595:   %12 = mul nsw i64 %indvars.iv22, %9, !dbg !810
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeOperand 3595:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: getting value name for:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
inst from IRNaming:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %9 = sext i32 %nk to i64, !dbg !792
SUSAN: visiting cast:   %9 = sext i32 %nk to i64, !dbg !792
CBackend: writeOperand 3595: i32 %nk
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: getting value name for:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
inst from IRNaming:   %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
CBackend: here? 10445
CBackend: writeOperand 3595:   %div21 = fdiv double %mul19, %conv20, !dbg !809
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeOperand 3595:   %mul19 = fmul contract double %conv16, %conv18, !dbg !807
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeOperand 3595:   %conv16 = sitofp i32 %10 to double, !dbg !804
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: visiting cast:   %conv16 = sitofp i32 %10 to double, !dbg !804
CBackend: writeOperand 3595:   %10 = trunc i64 %indvars.iv22 to i32, !dbg !804
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: visiting cast:   %10 = trunc i64 %indvars.iv22 to i32, !dbg !804
CBackend: writeOperand 3595:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: getting value name for:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
inst from IRNaming:   %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %conv18 = sitofp i32 %11 to double, !dbg !806
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: visiting cast:   %conv18 = sitofp i32 %11 to double, !dbg !806
CBackend: writeOperand 3595:   %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !806
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: visiting cast:   %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !806
CBackend: writeOperand 3595:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: getting value name for:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
inst from IRNaming:   %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !805
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %conv20 = sitofp i32 %nj to double, !dbg !808
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: visiting cast:   %conv20 = sitofp i32 %nj to double, !dbg !808
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBackend: writeoperand here 3674? 
CBackend: here? 10462
printing unconditional branch   br label %for.inc26, !dbg !812
CBERegion: printing latchBB for.inc26
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
CBERegion: I 316:   br label %for.cond13, !dbg !814, !llvm.loop !815
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
SUSAN: found IV 784  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !800
Linear Region with entry block: for.end28
SUSAN: printing bb:for.end28
CBEBackend: printing bb 7082 for.end28
printing unconditional branch   br label %for.inc29, !dbg !816
CBERegion: printing latchBB for.inc29
CBERegion: I 316:   %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !817
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
CBERegion: I 316:   br label %for.cond10, !dbg !818, !llvm.loop !819
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
SUSAN: found IV 784  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !794
Linear Region with entry block: for.end31
SUSAN: printing bb:for.end31
CBEBackend: printing bb 7082 for.end31
printing unconditional branch   br label %for.cond32, !dbg !821
Loop Region with entry block: for.cond32
term 6818:   br i1 %cmp33, label %for.body34, label %for.end53, !dbg !826
SUSAN: condrelatedinst:  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: condrelatedinst:  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !824
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: declaring 3252:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: getting value name for:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
inst from IRNaming:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
inst from IRNaming:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
original name : i
returning name: i
SUSAN: visiting cast:   %15 = sext i32 %nl to i64, !dbg !821
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
SUSAN: getting value name for:   %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
inst from IRNaming:   %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
inst from IRNaming:   %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
original name : i
returning name: i
CBackend: writeOperand 3595:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: getting value name for:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
inst from IRNaming:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body34
SUSAN: printing bb:for.body34
CBEBackend: printing bb 7082 for.body34
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
printing unconditional branch   br label %for.cond35, !dbg !827
Loop Region with entry block: for.cond35
term 6818:   br i1 %cmp36, label %for.body37, label %for.end50, !dbg !832
SUSAN: condrelatedinst:  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: condrelatedinst:  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !830
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: declaring 3252:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: getting value name for:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
inst from IRNaming:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
inst from IRNaming:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
original name : j
returning name: j
SUSAN: visiting cast:   %14 = sext i32 %nj to i64, !dbg !821
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
SUSAN: getting value name for:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
inst from IRNaming:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
inst from IRNaming:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: getting value name for:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
inst from IRNaming:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body37
SUSAN: printing bb:for.body37
CBEBackend: printing bb 7082 for.body37
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: printing instruction   store double %div43, double* %arrayidx47, align 8, !dbg !842 at 6678
CBEBackend: printing store Inst:   store double %div43, double* %arrayidx47, align 8, !dbg !842
CBackend: here? 10442
SUSAN: GEPINST:   %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !841
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %C
SUSAN: writing ptr 9994: double* %C
SUSAN: getting value name for: double* %C
inst from IRNaming: double* %C
original name : C
returning name: C
CBackend: writeOperand 3595:   %21 = add nsw i64 %20, %indvars.iv12, !dbg !840
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeOperand 3595:   %20 = mul nsw i64 %indvars.iv16, %16, !dbg !839
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeOperand 3595:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: getting value name for:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
inst from IRNaming:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %16 = sext i32 %nl to i64, !dbg !821
SUSAN: visiting cast:   %16 = sext i32 %nl to i64, !dbg !821
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: getting value name for:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
inst from IRNaming:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
CBackend: here? 10445
CBackend: writeOperand 3595:   %div43 = fdiv double %mul41, %conv42, !dbg !838
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeOperand 3595:   %mul41 = fmul contract double %conv38, %conv40, !dbg !836
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeOperand 3595:   %conv38 = sitofp i32 %17 to double, !dbg !833
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: visiting cast:   %conv38 = sitofp i32 %17 to double, !dbg !833
CBackend: writeOperand 3595:   %17 = trunc i64 %indvars.iv16 to i32, !dbg !833
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: visiting cast:   %17 = trunc i64 %indvars.iv16 to i32, !dbg !833
CBackend: writeOperand 3595:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: getting value name for:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
inst from IRNaming:   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %conv40 = sitofp i32 %19 to double, !dbg !835
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: visiting cast:   %conv40 = sitofp i32 %19 to double, !dbg !835
CBackend: writeOperand 3595:   %19 = trunc i64 %18 to i32, !dbg !835
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: visiting cast:   %19 = trunc i64 %18 to i32, !dbg !835
CBackend: writeOperand 3595:   %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !834
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeOperand 3595:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: getting value name for:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
inst from IRNaming:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 3
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %conv42 = sitofp i32 %nl to double, !dbg !837
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: visiting cast:   %conv42 = sitofp i32 %nl to double, !dbg !837
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBackend: writeoperand here 3674? 
CBackend: here? 10462
printing unconditional branch   br label %for.inc48, !dbg !841
CBERegion: printing latchBB for.inc48
CBERegion: I 316:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !843
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
CBERegion: I 316:   br label %for.cond35, !dbg !844, !llvm.loop !845
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
SUSAN: found IV 784  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !829
Linear Region with entry block: for.end50
SUSAN: printing bb:for.end50
CBEBackend: printing bb 7082 for.end50
printing unconditional branch   br label %for.inc51, !dbg !846
CBERegion: printing latchBB for.inc51
CBERegion: I 316:   %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !847
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
CBERegion: I 316:   br label %for.cond32, !dbg !848, !llvm.loop !849
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
SUSAN: found IV 784  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !823
Linear Region with entry block: for.end53
SUSAN: printing bb:for.end53
CBEBackend: printing bb 7082 for.end53
printing unconditional branch   br label %for.cond54, !dbg !851
Loop Region with entry block: for.cond54
term 6818:   br i1 %cmp55, label %for.body56, label %for.end75, !dbg !856
SUSAN: condrelatedinst:  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: condrelatedinst:  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !854
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: declaring 3252:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: getting value name for:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
inst from IRNaming:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
inst from IRNaming:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
original name : i
returning name: i
SUSAN: visiting cast:   %23 = sext i32 %ni to i64, !dbg !851
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
SUSAN: getting value name for:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
inst from IRNaming:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
inst from IRNaming:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
original name : i
returning name: i
CBackend: writeOperand 3595:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: getting value name for:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
inst from IRNaming:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body56
SUSAN: printing bb:for.body56
CBEBackend: printing bb 7082 for.body56
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
printing unconditional branch   br label %for.cond57, !dbg !857
Loop Region with entry block: for.cond57
term 6818:   br i1 %cmp58, label %for.body59, label %for.end72, !dbg !862
SUSAN: condrelatedinst:  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: condrelatedinst:  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !860
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: declaring 3252:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: getting value name for:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
inst from IRNaming:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
inst from IRNaming:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
original name : j
returning name: j
SUSAN: visiting cast:   %22 = sext i32 %nl to i64, !dbg !851
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
SUSAN: getting value name for:   %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
inst from IRNaming:   %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
inst from IRNaming:   %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: getting value name for:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
inst from IRNaming:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body59
SUSAN: printing bb:for.body59
CBEBackend: printing bb 7082 for.body59
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: printing instruction   store double %div65, double* %arrayidx69, align 8, !dbg !872 at 6678
CBEBackend: printing store Inst:   store double %div65, double* %arrayidx69, align 8, !dbg !872
CBackend: here? 10442
SUSAN: GEPINST:   %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !871
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %D
SUSAN: writing ptr 9994: double* %D
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
CBackend: writeOperand 3595:   %29 = add nsw i64 %28, %indvars.iv5, !dbg !870
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeOperand 3595:   %28 = mul nsw i64 %indvars.iv9, %24, !dbg !869
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeOperand 3595:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: getting value name for:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
inst from IRNaming:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %24 = sext i32 %ni to i64, !dbg !851
SUSAN: visiting cast:   %24 = sext i32 %ni to i64, !dbg !851
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: getting value name for:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
inst from IRNaming:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
CBackend: here? 10445
CBackend: writeOperand 3595:   %div65 = fdiv double %mul63, %conv64, !dbg !868
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeOperand 3595:   %mul63 = fmul contract double %conv60, %conv62, !dbg !866
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeOperand 3595:   %conv60 = sitofp i32 %25 to double, !dbg !863
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: visiting cast:   %conv60 = sitofp i32 %25 to double, !dbg !863
CBackend: writeOperand 3595:   %25 = trunc i64 %indvars.iv9 to i32, !dbg !863
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: visiting cast:   %25 = trunc i64 %indvars.iv9 to i32, !dbg !863
CBackend: writeOperand 3595:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: getting value name for:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
inst from IRNaming:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %conv62 = sitofp i32 %27 to double, !dbg !865
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: visiting cast:   %conv62 = sitofp i32 %27 to double, !dbg !865
CBackend: writeOperand 3595:   %27 = trunc i64 %26 to i32, !dbg !865
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: visiting cast:   %27 = trunc i64 %26 to i32, !dbg !865
CBackend: writeOperand 3595:   %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !864
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeOperand 3595:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: getting value name for:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
inst from IRNaming:   %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 2
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %conv64 = sitofp i32 %nk to double, !dbg !867
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: visiting cast:   %conv64 = sitofp i32 %nk to double, !dbg !867
CBackend: writeOperand 3595: i32 %nk
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBackend: writeoperand here 3674? 
CBackend: here? 10462
printing unconditional branch   br label %for.inc70, !dbg !871
CBERegion: printing latchBB for.inc70
CBERegion: I 316:   %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !873
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
CBERegion: I 316:   br label %for.cond57, !dbg !874, !llvm.loop !875
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
SUSAN: found IV 784  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !859
Linear Region with entry block: for.end72
SUSAN: printing bb:for.end72
CBEBackend: printing bb 7082 for.end72
printing unconditional branch   br label %for.inc73, !dbg !876
CBERegion: printing latchBB for.inc73
CBERegion: I 316:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !877
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
CBERegion: I 316:   br label %for.cond54, !dbg !878, !llvm.loop !879
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
SUSAN: found IV 784  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !853
Linear Region with entry block: for.end75
SUSAN: printing bb:for.end75
CBEBackend: printing bb 7082 for.end75
printing unconditional branch   br label %for.cond76, !dbg !881
Loop Region with entry block: for.cond76
term 6818:   br i1 %cmp77, label %for.body78, label %for.end91, !dbg !886
SUSAN: condrelatedinst:  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: condrelatedinst:  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !884
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: declaring 3252:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: getting value name for:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
inst from IRNaming:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
inst from IRNaming:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
original name : i
returning name: i
SUSAN: visiting cast:   %31 = sext i32 %ni to i64, !dbg !881
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
SUSAN: getting value name for:   %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
inst from IRNaming:   %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
inst from IRNaming:   %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
original name : i
returning name: i
CBackend: writeOperand 3595:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: getting value name for:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
inst from IRNaming:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body78
SUSAN: printing bb:for.body78
CBEBackend: printing bb 7082 for.body78
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
printing unconditional branch   br label %for.cond79, !dbg !887
Loop Region with entry block: for.cond79
term 6818:   br i1 %cmp80, label %for.body81, label %for.end88, !dbg !892
SUSAN: condrelatedinst:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: condrelatedinst:  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !890
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: declaring 3252:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
original name : j
returning name: j
SUSAN: visiting cast:   %30 = sext i32 %nj to i64, !dbg !881
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body81
SUSAN: printing bb:for.body81
CBEBackend: printing bb 7082 for.body81
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: printing instruction   store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !896 at 6678
CBEBackend: printing store Inst:   store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !896
CBackend: here? 10442
SUSAN: GEPINST:   %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !895
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %tmp
SUSAN: writing ptr 9994: double* %tmp
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
CBackend: writeOperand 3595:   %34 = add nsw i64 %33, %indvars.iv, !dbg !894
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
CBackend: writeOperand 3595:   %33 = mul nsw i64 %indvars.iv2, %32, !dbg !893
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
CBackend: writeOperand 3595:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: getting value name for:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
inst from IRNaming:   %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %32 = sext i32 %ni to i64, !dbg !881
SUSAN: visiting cast:   %32 = sext i32 %ni to i64, !dbg !881
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
CBackend: writeoperand here 3674? 
CBackend: here? 10445
CBackend: writeOperand 3595: double 0.000000e+00
CBackend: writeoperand here 3674? 
CBackend: here? 10462
printing unconditional branch   br label %for.inc86, !dbg !895
CBERegion: printing latchBB for.inc86
CBERegion: I 316:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !897
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
CBERegion: I 316:   br label %for.cond79, !dbg !898, !llvm.loop !899
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !889
Linear Region with entry block: for.end88
SUSAN: printing bb:for.end88
CBEBackend: printing bb 7082 for.end88
printing unconditional branch   br label %for.inc89, !dbg !900
CBERegion: printing latchBB for.inc89
CBERegion: I 316:   %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !901
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
CBERegion: I 316:   br label %for.cond76, !dbg !902, !llvm.loop !903
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
SUSAN: found IV 784  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !883
Linear Region with entry block: for.end91
SUSAN: printing bb:for.end91
CBEBackend: printing bb 7082 for.end91
CBackend: iterating function 1759: cudaMemcpy
CBackend: iterating function 1759: _ZL6kerneliiiiddPdS_S_S_S_
CBackend: printing function 1770_ZL6kerneliiiiddPdS_S_S_S_
CBackend: here? 1175
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
term 6818:   br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !804
none omp loop ub:   %conv14 = sext i16 %call13 to i32, !dbg !811
CBackend: here? 1175
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
term 6818:   br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !804
none omp loop ub:   %conv2 = sext i16 %call to i32, !dbg !796
CBackend: here? 1175
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
term 6818:   br i1 %exitcond28, label %header.29.preheader, label %latch.014
none omp loop ub:   %conv19 = sext i16 %call18 to i32, !dbg !815
CBackend: here? 1175
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
term 6818:   br i1 %exitcond32, label %header.2.preheader, label %latch.0
none omp loop ub:   %conv6 = sext i16 %call5 to i32, !dbg !800
CBackend: here? 1175
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
term 6818:   br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !804
none omp loop ub: i32 8
CBackend: here? 1175
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
term 6818:   br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !804
none omp loop ub: i32 8
CBackend: here? 1175
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
term 6818:   br i1 %exitcond, label %kcall.configok24, label %latch.212
none omp loop ub: i32 32
CBackend: here? 1175
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
term 6818:   br i1 %exitcond30, label %kcall.configok, label %latch.2
none omp loop ub: i32 32
=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %header.07<header><exiting>,%header.18.preheader,%header.18,%latch.014<latch>,%header.29.preheader,%header.29,%latch.113,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
        Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
            Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

isomp: 0
Loop: Loop at depth 1 containing: %header.0<header><exiting>,%header.1.preheader,%header.1,%latch.0<latch>,%header.2.preheader,%header.2,%latch.1,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
        Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
            Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

isomp: 0
Loop: Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
    Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

isomp: 0
Loop: Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

isomp: 0
Loop: Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

isomp: 0
Loop: Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
        Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

isomp: 0
Loop: Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
        Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

isomp: 0
Loop: Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
    Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

isomp: 0
SUSAN: opnd0  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: opnd1  %conv2 = sext i16 %call to i32, !dbg !796
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: opnd0  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: opnd1  %conv6 = sext i16 %call5 to i32, !dbg !800
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: opnd0  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: opnd1i32 8
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: opnd0  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: opnd1i32 32
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: opnd0  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: opnd1  %conv14 = sext i16 %call13 to i32, !dbg !811
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: opnd0  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: opnd1  %conv19 = sext i16 %call18 to i32, !dbg !815
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: opnd0  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: opnd1i32 8
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: opnd0  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: opnd1i32 32
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: BB:
entry:
  %block = alloca %struct.dim3, align 4
  %grid = alloca %struct.dim3, align 4
  %agg.tmp = alloca %struct.dim3, align 4
  %agg.tmp7 = alloca %struct.dim3, align 4
  %agg.tmp.coerce = alloca { i64, i32 }, align 4
  %agg.tmp7.coerce = alloca { i64, i32 }, align 4
  %grid9 = alloca %struct.dim3, align 4
  %agg.tmp20 = alloca %struct.dim3, align 4
  %agg.tmp21 = alloca %struct.dim3, align 4
  %agg.tmp20.coerce = alloca { i64, i32 }, align 4
  %agg.tmp21.coerce = alloca { i64, i32 }, align 4
  call void @llvm.dbg.value(metadata i32 %ni, metadata !751, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nj, metadata !753, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nk, metadata !754, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nl, metadata !755, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double %alpha, metadata !756, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double %beta, metadata !757, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %tmp, metadata !758, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %A, metadata !759, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %B, metadata !760, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %C, metadata !761, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %D, metadata !762, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 256, metadata !763, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.declare(metadata %struct.dim3* %block, metadata !764, metadata !DIExpression()), !dbg !788
  %div = udiv i32 256, 32, !dbg !789
  %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
  store i32 %div, i32* %dim3gep.0
  %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
  store i32 32, i32* %dim3gep.1
  %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
  store i32 1, i32* %dim3gep.2
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid, metadata !790, metadata !DIExpression()), !dbg !792
  %conv = trunc i32 %ni to i16, !dbg !793
  %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !794
  %0 = load i32, i32* %x, align 4, !dbg !794
  %conv1 = trunc i32 %0 to i16, !dbg !795
  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
  %conv2 = sext i16 %call to i32, !dbg !796
  %conv3 = trunc i32 %nj to i16, !dbg !797
  %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !798
  %1 = load i32, i32* %y, align 4, !dbg !798
  %conv4 = trunc i32 %1 to i16, !dbg !799
  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
  %conv6 = sext i16 %call5 to i32, !dbg !800
  %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
  store i32 %conv2, i32* %dim3gep.01
  %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
  store i32 %conv6, i32* %dim3gep.12
  %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
  store i32 1, i32* %dim3gep.23
  %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !801
  %3 = bitcast %struct.dim3* %grid to i8*, !dbg !801
  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
  %5 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !802
  %6 = bitcast %struct.dim3* %block to i8*, !dbg !802
  %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
  %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !803
  %9 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !803
  %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
  %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !803
  %12 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !803
  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
  br label %header.0

SUSAN: BB:
header.0:                                         ; preds = %latch.0, %entry
  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
  %exitcond33 = icmp ne i32 %indvar.0, %conv2
  br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !804

SUSAN: BB:
header.1.preheader:                               ; preds = %header.0
  br label %header.1

SUSAN: BB:
header.1:                                         ; preds = %header.1.preheader, %latch.1
  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
  %exitcond32 = icmp ne i32 %indvar.1, %conv6
  br i1 %exitcond32, label %header.2.preheader, label %latch.0

SUSAN: BB:
header.2.preheader:                               ; preds = %header.1
  br label %header.2

SUSAN: BB:
header.2:                                         ; preds = %header.2.preheader, %latch.2
  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
  %exitcond31 = icmp ne i32 %indvar.2, 8
  br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !804

SUSAN: BB:
header.3.preheader:                               ; preds = %header.2
  br label %header.3

SUSAN: BB:
header.3:                                         ; preds = %header.3.preheader, %latch.3
  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
  %exitcond30 = icmp ne i32 %indvar.3, 32
  br i1 %exitcond30, label %kcall.configok, label %latch.2

SUSAN: BB:
latch.3:                                          ; preds = %kcall.configok
  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
  br label %header.3

SUSAN: BB:
latch.2:                                          ; preds = %header.3
  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
  br label %header.2

SUSAN: BB:
latch.1:                                          ; preds = %header.2
  %indvar.next.1 = add i32 %indvar.1, 1
  br label %header.1

SUSAN: BB:
latch.0:                                          ; preds = %header.1
  %indvar.next.0 = add i32 %indvar.0, 1
  br label %header.0

SUSAN: BB:
kcall.configok:                                   ; preds = %header.3
  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
  br label %latch.3

SUSAN: BB:
kcall.end:                                        ; preds = %header.0
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid9, metadata !805, metadata !DIExpression()), !dbg !807
  %conv10 = trunc i32 %ni to i16, !dbg !808
  %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !809
  %14 = load i32, i32* %x11, align 4, !dbg !809
  %conv12 = trunc i32 %14 to i16, !dbg !810
  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
  %conv14 = sext i16 %call13 to i32, !dbg !811
  %conv15 = trunc i32 %nl to i16, !dbg !812
  %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !813
  %15 = load i32, i32* %y16, align 4, !dbg !813
  %conv17 = trunc i32 %15 to i16, !dbg !814
  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
  %conv19 = sext i16 %call18 to i32, !dbg !815
  %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
  store i32 %conv14, i32* %dim3gep.04
  %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
  store i32 %conv19, i32* %dim3gep.15
  %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
  store i32 1, i32* %dim3gep.26
  %16 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !816
  %17 = bitcast %struct.dim3* %grid9 to i8*, !dbg !816
  %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
  %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !817
  %20 = bitcast %struct.dim3* %block to i8*, !dbg !817
  %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
  %22 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !818
  %23 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !818
  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
  %25 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !818
  %26 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !818
  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
  br label %header.07

SUSAN: BB:
header.07:                                        ; preds = %latch.014, %kcall.end
  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
  %exitcond29 = icmp ne i32 %indvar.024, %conv14
  br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !804

SUSAN: BB:
header.18.preheader:                              ; preds = %header.07
  br label %header.18

SUSAN: BB:
header.18:                                        ; preds = %header.18.preheader, %latch.113
  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
  %exitcond28 = icmp ne i32 %indvar.121, %conv19
  br i1 %exitcond28, label %header.29.preheader, label %latch.014

SUSAN: BB:
header.29.preheader:                              ; preds = %header.18
  br label %header.29

SUSAN: BB:
header.29:                                        ; preds = %header.29.preheader, %latch.212
  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
  %exitcond27 = icmp ne i32 %indvar.218, 8
  br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !804

SUSAN: BB:
header.310.preheader:                             ; preds = %header.29
  br label %header.310

SUSAN: BB:
header.310:                                       ; preds = %header.310.preheader, %latch.311
  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
  %exitcond = icmp ne i32 %indvar.315, 32
  br i1 %exitcond, label %kcall.configok24, label %latch.212

SUSAN: BB:
latch.311:                                        ; preds = %kcall.configok24
  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
  br label %header.310

SUSAN: BB:
latch.212:                                        ; preds = %header.310
  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
  br label %header.29

SUSAN: BB:
latch.113:                                        ; preds = %header.29
  %indvar.next.123 = add i32 %indvar.121, 1
  br label %header.18

SUSAN: BB:
latch.014:                                        ; preds = %header.18
  %indvar.next.026 = add i32 %indvar.024, 1
  br label %header.07

SUSAN: BB:
kcall.configok24:                                 ; preds = %header.310
  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
  br label %latch.311

SUSAN: BB:
kcall.end25:                                      ; preds = %header.07
  ret void, !dbg !819

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %header.0<header><exiting>,%header.1.preheader,%header.1,%latch.0<latch>,%header.2.preheader,%header.2,%latch.1,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
        Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
            Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN exitBB: 
header.0:                                         ; preds = %latch.0, %entry
  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
  %exitcond33 = icmp ne i32 %indvar.0, %conv2
  br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !804

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
        Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN exitBB: 
header.1:                                         ; preds = %header.1.preheader, %latch.1
  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
  %exitcond32 = icmp ne i32 %indvar.1, %conv6
  br i1 %exitcond32, label %header.2.preheader, label %latch.0

SUSAN: trying to get exit for loop: Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
    Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN exitBB: 
header.2:                                         ; preds = %header.2.preheader, %latch.2
  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
  %exitcond31 = icmp ne i32 %indvar.2, 8
  br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !804

SUSAN: trying to get exit for loop: Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN exitBB: 
header.3:                                         ; preds = %header.3.preheader, %latch.3
  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
  %exitcond30 = icmp ne i32 %indvar.3, 32
  br i1 %exitcond30, label %kcall.configok, label %latch.2

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %header.07<header><exiting>,%header.18.preheader,%header.18,%latch.014<latch>,%header.29.preheader,%header.29,%latch.113,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
        Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
            Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN exitBB: 
header.07:                                        ; preds = %latch.014, %kcall.end
  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
  %exitcond29 = icmp ne i32 %indvar.024, %conv14
  br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !804

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
        Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN exitBB: 
header.18:                                        ; preds = %header.18.preheader, %latch.113
  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
  %exitcond28 = icmp ne i32 %indvar.121, %conv19
  br i1 %exitcond28, label %header.29.preheader, label %latch.014

SUSAN: trying to get exit for loop: Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
    Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN exitBB: 
header.29:                                        ; preds = %header.29.preheader, %latch.212
  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
  %exitcond27 = icmp ne i32 %indvar.218, 8
  br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !804

SUSAN: trying to get exit for loop: Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN exitBB: 
header.310:                                       ; preds = %header.310.preheader, %latch.311
  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
  %exitcond = icmp ne i32 %indvar.315, 32
  br i1 %exitcond, label %kcall.configok24, label %latch.212

SUSAN: entry block is a linear region! entry
CBERegion: including entry in a linear region
CBERegion: nextBB 
entry:
  %block = alloca %struct.dim3, align 4
  %grid = alloca %struct.dim3, align 4
  %agg.tmp = alloca %struct.dim3, align 4
  %agg.tmp7 = alloca %struct.dim3, align 4
  %agg.tmp.coerce = alloca { i64, i32 }, align 4
  %agg.tmp7.coerce = alloca { i64, i32 }, align 4
  %grid9 = alloca %struct.dim3, align 4
  %agg.tmp20 = alloca %struct.dim3, align 4
  %agg.tmp21 = alloca %struct.dim3, align 4
  %agg.tmp20.coerce = alloca { i64, i32 }, align 4
  %agg.tmp21.coerce = alloca { i64, i32 }, align 4
  call void @llvm.dbg.value(metadata i32 %ni, metadata !751, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nj, metadata !753, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nk, metadata !754, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nl, metadata !755, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double %alpha, metadata !756, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double %beta, metadata !757, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %tmp, metadata !758, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %A, metadata !759, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %B, metadata !760, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %C, metadata !761, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %D, metadata !762, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 256, metadata !763, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.declare(metadata %struct.dim3* %block, metadata !764, metadata !DIExpression()), !dbg !788
  %div = udiv i32 256, 32, !dbg !789
  %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
  store i32 %div, i32* %dim3gep.0
  %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
  store i32 32, i32* %dim3gep.1
  %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
  store i32 1, i32* %dim3gep.2
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid, metadata !790, metadata !DIExpression()), !dbg !792
  %conv = trunc i32 %ni to i16, !dbg !793
  %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !794
  %0 = load i32, i32* %x, align 4, !dbg !794
  %conv1 = trunc i32 %0 to i16, !dbg !795
  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
  %conv2 = sext i16 %call to i32, !dbg !796
  %conv3 = trunc i32 %nj to i16, !dbg !797
  %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !798
  %1 = load i32, i32* %y, align 4, !dbg !798
  %conv4 = trunc i32 %1 to i16, !dbg !799
  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
  %conv6 = sext i16 %call5 to i32, !dbg !800
  %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
  store i32 %conv2, i32* %dim3gep.01
  %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
  store i32 %conv6, i32* %dim3gep.12
  %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
  store i32 1, i32* %dim3gep.23
  %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !801
  %3 = bitcast %struct.dim3* %grid to i8*, !dbg !801
  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
  %5 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !802
  %6 = bitcast %struct.dim3* %block to i8*, !dbg !802
  %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
  %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !803
  %9 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !803
  %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
  %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !803
  %12 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !803
  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
  br label %header.0

SUSAN: nextRegionEntryBB header.0
CBackend: entryBB is a loop: header.0
SUSAN: entry block is a loop region! header.0
creating loop region for entryBB: header.0
SUSAN: loop at 355 Loop at depth 1 containing: %header.0<header><exiting>,%header.1.preheader,%header.1,%latch.0<latch>,%header.2.preheader,%header.2,%latch.1,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
        Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
            Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
term 6818:   br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !804
CBERegion: startBB 393: 
header.1.preheader:                               ; preds = %header.0
  br label %header.1

CBERegion: here? 149
CBackend: entryBB is a loop: header.1.preheader
but not a header!
SUSAN: entry block is a linear region! header.1.preheader
CBERegion: including header.1.preheader in a linear region
CBERegion: nextBB 
header.1.preheader:                               ; preds = %header.0
  br label %header.1

SUSAN: nextRegionEntryBB header.1
for region: Loop at depth 1 containing: %header.0<header><exiting>,%header.1.preheader,%header.1,%latch.0<latch>,%header.2.preheader,%header.2,%latch.1,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
        Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
            Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: header.1
SUSAN: entry block is a loop region! header.1
creating loop region for entryBB: header.1
SUSAN: loop at 355 Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
        Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
term 6818:   br i1 %exitcond32, label %header.2.preheader, label %latch.0
CBERegion: startBB 393: 
header.2.preheader:                               ; preds = %header.1
  br label %header.2

CBERegion: here? 149
CBackend: entryBB is a loop: header.2.preheader
but not a header!
SUSAN: entry block is a linear region! header.2.preheader
CBERegion: including header.2.preheader in a linear region
CBERegion: nextBB 
header.2.preheader:                               ; preds = %header.1
  br label %header.2

SUSAN: nextRegionEntryBB header.2
for region: Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
        Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: header.2
SUSAN: entry block is a loop region! header.2
creating loop region for entryBB: header.2
SUSAN: loop at 355 Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
    Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
term 6818:   br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !804
CBERegion: startBB 393: 
header.3.preheader:                               ; preds = %header.2
  br label %header.3

CBERegion: here? 149
CBackend: entryBB is a loop: header.3.preheader
but not a header!
SUSAN: entry block is a linear region! header.3.preheader
CBERegion: including header.3.preheader in a linear region
CBERegion: nextBB 
header.3.preheader:                               ; preds = %header.2
  br label %header.3

SUSAN: nextRegionEntryBB header.3
for region: Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
    Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: header.3
SUSAN: entry block is a loop region! header.3
creating loop region for entryBB: header.3
SUSAN: loop at 355 Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
term 6818:   br i1 %exitcond30, label %kcall.configok, label %latch.2
CBERegion: startBB 393: 
kcall.configok:                                   ; preds = %header.3
  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
  br label %latch.3

CBERegion: here? 149
CBackend: entryBB is a loop: kcall.configok
but not a header!
SUSAN: entry block is a linear region! kcall.configok
CBERegion: including kcall.configok in a linear region
CBERegion: nextBB 
kcall.configok:                                   ; preds = %header.3
  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
  br label %latch.3

SUSAN: nextRegionEntryBB latch.3
for region: Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: nextRegionEntryBB latch.2
for region: Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
    Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: nextRegionEntryBB latch.1
for region: Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
        Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: nextRegionEntryBB latch.0
for region: Loop at depth 1 containing: %header.0<header><exiting>,%header.1.preheader,%header.1,%latch.0<latch>,%header.2.preheader,%header.2,%latch.1,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
        Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
            Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: nextRegionEntryBB kcall.end
SUSAN: entry block is a linear region! kcall.end
CBERegion: including kcall.end in a linear region
CBERegion: nextBB 
kcall.end:                                        ; preds = %header.0
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid9, metadata !805, metadata !DIExpression()), !dbg !807
  %conv10 = trunc i32 %ni to i16, !dbg !808
  %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !809
  %14 = load i32, i32* %x11, align 4, !dbg !809
  %conv12 = trunc i32 %14 to i16, !dbg !810
  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
  %conv14 = sext i16 %call13 to i32, !dbg !811
  %conv15 = trunc i32 %nl to i16, !dbg !812
  %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !813
  %15 = load i32, i32* %y16, align 4, !dbg !813
  %conv17 = trunc i32 %15 to i16, !dbg !814
  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
  %conv19 = sext i16 %call18 to i32, !dbg !815
  %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
  store i32 %conv14, i32* %dim3gep.04
  %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
  store i32 %conv19, i32* %dim3gep.15
  %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
  store i32 1, i32* %dim3gep.26
  %16 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !816
  %17 = bitcast %struct.dim3* %grid9 to i8*, !dbg !816
  %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
  %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !817
  %20 = bitcast %struct.dim3* %block to i8*, !dbg !817
  %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
  %22 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !818
  %23 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !818
  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
  %25 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !818
  %26 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !818
  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
  br label %header.07

SUSAN: nextRegionEntryBB header.07
CBackend: entryBB is a loop: header.07
SUSAN: entry block is a loop region! header.07
creating loop region for entryBB: header.07
SUSAN: loop at 355 Loop at depth 1 containing: %header.07<header><exiting>,%header.18.preheader,%header.18,%latch.014<latch>,%header.29.preheader,%header.29,%latch.113,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
        Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
            Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
term 6818:   br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !804
CBERegion: startBB 393: 
header.18.preheader:                              ; preds = %header.07
  br label %header.18

CBERegion: here? 149
CBackend: entryBB is a loop: header.18.preheader
but not a header!
SUSAN: entry block is a linear region! header.18.preheader
CBERegion: including header.18.preheader in a linear region
CBERegion: nextBB 
header.18.preheader:                              ; preds = %header.07
  br label %header.18

SUSAN: nextRegionEntryBB header.18
for region: Loop at depth 1 containing: %header.07<header><exiting>,%header.18.preheader,%header.18,%latch.014<latch>,%header.29.preheader,%header.29,%latch.113,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
        Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
            Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: header.18
SUSAN: entry block is a loop region! header.18
creating loop region for entryBB: header.18
SUSAN: loop at 355 Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
        Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
term 6818:   br i1 %exitcond28, label %header.29.preheader, label %latch.014
CBERegion: startBB 393: 
header.29.preheader:                              ; preds = %header.18
  br label %header.29

CBERegion: here? 149
CBackend: entryBB is a loop: header.29.preheader
but not a header!
SUSAN: entry block is a linear region! header.29.preheader
CBERegion: including header.29.preheader in a linear region
CBERegion: nextBB 
header.29.preheader:                              ; preds = %header.18
  br label %header.29

SUSAN: nextRegionEntryBB header.29
for region: Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
        Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: header.29
SUSAN: entry block is a loop region! header.29
creating loop region for entryBB: header.29
SUSAN: loop at 355 Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
    Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
term 6818:   br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !804
CBERegion: startBB 393: 
header.310.preheader:                             ; preds = %header.29
  br label %header.310

CBERegion: here? 149
CBackend: entryBB is a loop: header.310.preheader
but not a header!
SUSAN: entry block is a linear region! header.310.preheader
CBERegion: including header.310.preheader in a linear region
CBERegion: nextBB 
header.310.preheader:                             ; preds = %header.29
  br label %header.310

SUSAN: nextRegionEntryBB header.310
for region: Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
    Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: header.310
SUSAN: entry block is a loop region! header.310
creating loop region for entryBB: header.310
SUSAN: loop at 355 Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
term 6818:   br i1 %exitcond, label %kcall.configok24, label %latch.212
CBERegion: startBB 393: 
kcall.configok24:                                 ; preds = %header.310
  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
  br label %latch.311

CBERegion: here? 149
CBackend: entryBB is a loop: kcall.configok24
but not a header!
SUSAN: entry block is a linear region! kcall.configok24
CBERegion: including kcall.configok24 in a linear region
CBERegion: nextBB 
kcall.configok24:                                 ; preds = %header.310
  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
  br label %latch.311

SUSAN: nextRegionEntryBB latch.311
for region: Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: nextRegionEntryBB latch.212
for region: Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
    Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: nextRegionEntryBB latch.113
for region: Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
        Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: nextRegionEntryBB latch.014
for region: Loop at depth 1 containing: %header.07<header><exiting>,%header.18.preheader,%header.18,%latch.014<latch>,%header.29.preheader,%header.29,%latch.113,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
        Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
            Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: nextRegionEntryBB kcall.end25
SUSAN: entry block is a linear region! kcall.end25
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %ni, metadata !1022, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nj, metadata !1024, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nk, metadata !1025, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nl, metadata !1026, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %alpha, metadata !1027, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %beta, metadata !1028, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %tmp, metadata !1029, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %A, metadata !1030, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %B, metadata !1031, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %C, metadata !1032, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %D, metadata !1033, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 256, metadata !1034, metadata !DIExpression()), !dbg !1023
SUSAN: CI at 1400:   call void @llvm.dbg.declare(metadata %struct.dim3* %block, metadata !1035, metadata !DIExpression()), !dbg !1059
SUSAN: CI at 1400:   call void @llvm.dbg.declare(metadata %struct.dim3* %grid, metadata !1061, metadata !DIExpression()), !dbg !1063
SUSAN: CI at 1400:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: CI at 1400:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: CI at 1400:   %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
SUSAN: CI at 1400:   %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
SUSAN: CI at 1400:   %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
SUSAN: CI at 1400:   %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
SUSAN: CI at 1400:   call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
SUSAN: CI at 1400:   call void @llvm.dbg.declare(metadata %struct.dim3* %grid9, metadata !1075, metadata !DIExpression()), !dbg !1077
SUSAN: CI at 1400:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: CI at 1400:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: CI at 1400:   %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
SUSAN: CI at 1400:   %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
SUSAN: CI at 1400:   %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
SUSAN: CI at 1400:   %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
SUSAN: CI at 1400:   call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
========== IV MAP==========
SUSAN: found LP for L:Loop at depth 1 containing: %header.07<header><exiting>,%header.18.preheader,%header.18,%latch.014<latch>,%header.29.preheader,%header.29,%latch.113,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
        Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
            Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: found LP for L:Loop at depth 1 containing: %header.0<header><exiting>,%header.1.preheader,%header.1,%latch.0<latch>,%header.2.preheader,%header.2,%latch.1,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
        Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
            Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: found LP for L:Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
        Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: found LP for L:Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
        Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: found LP for L:Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
    Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: found LP for L:Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
    Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

SUSAN: found LP for L:Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

SUSAN: found LP for L:Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

currInst :  %agg.tmp.coerce = alloca { i64, i32 }, align 4
currInst :  %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !803
currInst :  %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
currInst :  %agg.tmp7.coerce = alloca { i64, i32 }, align 4
currInst :  %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !803
currInst :  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
currInst :  %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
currInst :  store i32 %div, i32* %dim3gep.0
currInst :  %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
currInst :  store i32 32, i32* %dim3gep.1
currInst :  %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
currInst :  store i32 1, i32* %dim3gep.2
currInst :  %conv = trunc i32 %ni to i16, !dbg !793
currInst :  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
currInst :  %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !794
currInst :  %0 = load i32, i32* %x, align 4, !dbg !794
currInst :  %conv1 = trunc i32 %0 to i16, !dbg !795
currInst :  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
currInst :  %0 = load i32, i32* %x, align 4, !dbg !794
currInst :  %conv1 = trunc i32 %0 to i16, !dbg !795
currInst :  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
currInst :  %conv1 = trunc i32 %0 to i16, !dbg !795
currInst :  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
currInst :  %conv2 = sext i16 %call to i32, !dbg !796
currInst :  %exitcond33 = icmp ne i32 %indvar.0, %conv2
currInst :  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
currInst :  %conv3 = trunc i32 %nj to i16, !dbg !797
currInst :  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
currInst :  %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !798
currInst :  %1 = load i32, i32* %y, align 4, !dbg !798
currInst :  %conv4 = trunc i32 %1 to i16, !dbg !799
currInst :  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
currInst :  %1 = load i32, i32* %y, align 4, !dbg !798
currInst :  %conv4 = trunc i32 %1 to i16, !dbg !799
currInst :  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
currInst :  %conv4 = trunc i32 %1 to i16, !dbg !799
currInst :  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
currInst :  %conv6 = sext i16 %call5 to i32, !dbg !800
currInst :  %exitcond32 = icmp ne i32 %indvar.1, %conv6
currInst :  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
currInst :  %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
currInst :  store i32 %conv2, i32* %dim3gep.01
currInst :  %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
currInst :  store i32 %conv6, i32* %dim3gep.12
currInst :  %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
currInst :  store i32 1, i32* %dim3gep.23
currInst :  %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !801
currInst :  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
currInst :  %3 = bitcast %struct.dim3* %grid to i8*, !dbg !801
currInst :  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
currInst :  %5 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !802
currInst :  %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
currInst :  %6 = bitcast %struct.dim3* %block to i8*, !dbg !802
currInst :  %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
currInst :  %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !803
currInst :  %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
currInst :  %9 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !803
currInst :  %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
currInst :  %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !803
currInst :  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
currInst :  %12 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !803
currInst :  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
currInst :  %exitcond33 = icmp ne i32 %indvar.0, %conv2
currInst :  br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !804
currInst :  %exitcond32 = icmp ne i32 %indvar.1, %conv6
currInst :  br i1 %exitcond32, label %header.2.preheader, label %latch.0
currInst :  %exitcond31 = icmp ne i32 %indvar.2, 8
currInst :  br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !804
currInst :  %exitcond30 = icmp ne i32 %indvar.3, 32
currInst :  br i1 %exitcond30, label %kcall.configok, label %latch.2
currInst :  %conv10 = trunc i32 %ni to i16, !dbg !808
currInst :  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
currInst :  %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !809
currInst :  %14 = load i32, i32* %x11, align 4, !dbg !809
currInst :  %conv12 = trunc i32 %14 to i16, !dbg !810
currInst :  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
currInst :  %14 = load i32, i32* %x11, align 4, !dbg !809
currInst :  %conv12 = trunc i32 %14 to i16, !dbg !810
currInst :  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
currInst :  %conv12 = trunc i32 %14 to i16, !dbg !810
currInst :  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
currInst :  %conv14 = sext i16 %call13 to i32, !dbg !811
currInst :  %exitcond29 = icmp ne i32 %indvar.024, %conv14
currInst :  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
currInst :  %conv15 = trunc i32 %nl to i16, !dbg !812
currInst :  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
currInst :  %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !813
currInst :  %15 = load i32, i32* %y16, align 4, !dbg !813
currInst :  %conv17 = trunc i32 %15 to i16, !dbg !814
currInst :  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
currInst :  %15 = load i32, i32* %y16, align 4, !dbg !813
currInst :  %conv17 = trunc i32 %15 to i16, !dbg !814
currInst :  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
currInst :  %conv17 = trunc i32 %15 to i16, !dbg !814
currInst :  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
currInst :  %conv19 = sext i16 %call18 to i32, !dbg !815
currInst :  %exitcond28 = icmp ne i32 %indvar.121, %conv19
currInst :  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
currInst :  %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
currInst :  store i32 %conv14, i32* %dim3gep.04
currInst :  %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
currInst :  store i32 %conv19, i32* %dim3gep.15
currInst :  %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
currInst :  store i32 1, i32* %dim3gep.26
currInst :  %16 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !816
currInst :  %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
currInst :  %17 = bitcast %struct.dim3* %grid9 to i8*, !dbg !816
currInst :  %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
currInst :  %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !817
currInst :  %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
currInst :  %20 = bitcast %struct.dim3* %block to i8*, !dbg !817
currInst :  %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
currInst :  %22 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !818
currInst :  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
currInst :  %23 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !818
currInst :  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
currInst :  %25 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !818
currInst :  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
currInst :  %26 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !818
currInst :  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
currInst :  %exitcond29 = icmp ne i32 %indvar.024, %conv14
currInst :  br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !804
currInst :  %exitcond28 = icmp ne i32 %indvar.121, %conv19
currInst :  br i1 %exitcond28, label %header.29.preheader, label %latch.014
currInst :  %exitcond27 = icmp ne i32 %indvar.218, 8
currInst :  br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !804
currInst :  %exitcond = icmp ne i32 %indvar.315, 32
currInst :  br i1 %exitcond, label %kcall.configok24, label %latch.212
LP->LV 1694:   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
LP->L 1694: Loop at depth 1 containing: %header.07<header><exiting>,%header.18.preheader,%header.18,%latch.014<latch>,%header.29.preheader,%header.29,%latch.113,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
        Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
            Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

nestlevel: i
LP->LV 1694:   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
LP->L 1694: Loop at depth 1 containing: %header.0<header><exiting>,%header.1.preheader,%header.1,%latch.0<latch>,%header.2.preheader,%header.2,%latch.1,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
        Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
            Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

nestlevel: i
LP->LV 1694:   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
LP->L 1694: Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
    Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

nestlevel: k
LP->LV 1694:   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
LP->L 1694: Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

nestlevel: l
LP->LV 1694:   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
LP->L 1694: Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

nestlevel: l
LP->LV 1694:   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
LP->L 1694: Loop at depth 2 containing: %header.18<header><exiting>,%header.29.preheader,%header.29,%latch.113<latch>,%header.310.preheader,%header.310,%latch.212,%kcall.configok24,%latch.311
    Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
        Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

nestlevel: j
LP->LV 1694:   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
LP->L 1694: Loop at depth 2 containing: %header.1<header><exiting>,%header.2.preheader,%header.2,%latch.1<latch>,%header.3.preheader,%header.3,%latch.2,%kcall.configok,%latch.3
    Loop at depth 3 containing: %header.2<header><exiting>,%header.3.preheader,%header.3,%latch.2<latch>,%kcall.configok,%latch.3
        Loop at depth 4 containing: %header.3<header><exiting>,%kcall.configok,%latch.3<latch>

nestlevel: j
LP->LV 1694:   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
LP->L 1694: Loop at depth 3 containing: %header.29<header><exiting>,%header.310.preheader,%header.310,%latch.212<latch>,%kcall.configok24,%latch.311
    Loop at depth 4 containing: %header.310<header><exiting>,%kcall.configok24,%latch.311<latch>

nestlevel: k
SUSAN: getting value name for: 
; Function Attrs: noinline uwtable
define internal void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D) #7 !dbg !1019 {
entry:
  %block = alloca %struct.dim3, align 4
  %grid = alloca %struct.dim3, align 4
  %agg.tmp = alloca %struct.dim3, align 4
  %agg.tmp7 = alloca %struct.dim3, align 4
  %agg.tmp.coerce = alloca { i64, i32 }, align 4
  %agg.tmp7.coerce = alloca { i64, i32 }, align 4
  %grid9 = alloca %struct.dim3, align 4
  %agg.tmp20 = alloca %struct.dim3, align 4
  %agg.tmp21 = alloca %struct.dim3, align 4
  %agg.tmp20.coerce = alloca { i64, i32 }, align 4
  %agg.tmp21.coerce = alloca { i64, i32 }, align 4
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1022, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1024, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1025, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1026, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double %alpha, metadata !1027, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double %beta, metadata !1028, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1029, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %A, metadata !1030, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %B, metadata !1031, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %C, metadata !1032, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %D, metadata !1033, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 256, metadata !1034, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.declare(metadata %struct.dim3* %block, metadata !1035, metadata !DIExpression()), !dbg !1059
  %div = udiv i32 256, 32, !dbg !1060
  %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
  store i32 %div, i32* %dim3gep.0
  %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
  store i32 32, i32* %dim3gep.1
  %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
  store i32 1, i32* %dim3gep.2
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid, metadata !1061, metadata !DIExpression()), !dbg !1063
  %conv = trunc i32 %ni to i16, !dbg !1064
  %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !1065
  %0 = load i32, i32* %x, align 4, !dbg !1065
  %conv1 = trunc i32 %0 to i16, !dbg !1066
  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !1067
  %conv2 = sext i16 %call to i32, !dbg !1067
  %conv3 = trunc i32 %nj to i16, !dbg !1068
  %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !1069
  %1 = load i32, i32* %y, align 4, !dbg !1069
  %conv4 = trunc i32 %1 to i16, !dbg !1070
  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !1071
  %conv6 = sext i16 %call5 to i32, !dbg !1071
  %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
  store i32 %conv2, i32* %dim3gep.01
  %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
  store i32 %conv6, i32* %dim3gep.12
  %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
  store i32 1, i32* %dim3gep.23
  %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !1072
  %3 = bitcast %struct.dim3* %grid to i8*, !dbg !1072
  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !1072
  %5 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !1073
  %6 = bitcast %struct.dim3* %block to i8*, !dbg !1073
  %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !1073
  %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !1074
  %9 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !1074
  %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !1074
  %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !1074
  %12 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !1074
  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !1074
  br label %header.0

header.0:                                         ; preds = %latch.0, %entry
  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
  %exitcond33 = icmp ne i32 %indvar.0, %conv2
  br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !833

header.1.preheader:                               ; preds = %header.0
  br label %header.1

header.1:                                         ; preds = %header.1.preheader, %latch.1
  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
  %exitcond32 = icmp ne i32 %indvar.1, %conv6
  br i1 %exitcond32, label %header.2.preheader, label %latch.0

header.2.preheader:                               ; preds = %header.1
  br label %header.2

header.2:                                         ; preds = %header.2.preheader, %latch.2
  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
  %exitcond31 = icmp ne i32 %indvar.2, 8
  br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !833

header.3.preheader:                               ; preds = %header.2
  br label %header.3

header.3:                                         ; preds = %header.3.preheader, %latch.3
  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
  %exitcond30 = icmp ne i32 %indvar.3, 32
  br i1 %exitcond30, label %kcall.configok, label %latch.2

latch.3:                                          ; preds = %kcall.configok
  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
  br label %header.3

latch.2:                                          ; preds = %header.3
  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
  br label %header.2

latch.1:                                          ; preds = %header.2
  %indvar.next.1 = add i32 %indvar.1, 1
  br label %header.1

latch.0:                                          ; preds = %header.1
  %indvar.next.0 = add i32 %indvar.0, 1
  br label %header.0

kcall.configok:                                   ; preds = %header.3
  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
  br label %latch.3

kcall.end:                                        ; preds = %header.0
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid9, metadata !1075, metadata !DIExpression()), !dbg !1077
  %conv10 = trunc i32 %ni to i16, !dbg !1078
  %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !1079
  %14 = load i32, i32* %x11, align 4, !dbg !1079
  %conv12 = trunc i32 %14 to i16, !dbg !1080
  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !1081
  %conv14 = sext i16 %call13 to i32, !dbg !1081
  %conv15 = trunc i32 %nl to i16, !dbg !1082
  %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !1083
  %15 = load i32, i32* %y16, align 4, !dbg !1083
  %conv17 = trunc i32 %15 to i16, !dbg !1084
  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !1085
  %conv19 = sext i16 %call18 to i32, !dbg !1085
  %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
  store i32 %conv14, i32* %dim3gep.04
  %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
  store i32 %conv19, i32* %dim3gep.15
  %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
  store i32 1, i32* %dim3gep.26
  %16 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !1086
  %17 = bitcast %struct.dim3* %grid9 to i8*, !dbg !1086
  %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !1086
  %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !1087
  %20 = bitcast %struct.dim3* %block to i8*, !dbg !1087
  %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !1087
  %22 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !1088
  %23 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !1088
  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !1088
  %25 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !1088
  %26 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !1088
  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !1088
  br label %header.07

header.07:                                        ; preds = %latch.014, %kcall.end
  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
  %exitcond29 = icmp ne i32 %indvar.024, %conv14
  br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !833

header.18.preheader:                              ; preds = %header.07
  br label %header.18

header.18:                                        ; preds = %header.18.preheader, %latch.113
  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
  %exitcond28 = icmp ne i32 %indvar.121, %conv19
  br i1 %exitcond28, label %header.29.preheader, label %latch.014

header.29.preheader:                              ; preds = %header.18
  br label %header.29

header.29:                                        ; preds = %header.29.preheader, %latch.212
  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
  %exitcond27 = icmp ne i32 %indvar.218, 8
  br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !833

header.310.preheader:                             ; preds = %header.29
  br label %header.310

header.310:                                       ; preds = %header.310.preheader, %latch.311
  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
  %exitcond = icmp ne i32 %indvar.315, 32
  br i1 %exitcond, label %kcall.configok24, label %latch.212

latch.311:                                        ; preds = %kcall.configok24
  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
  br label %header.310

latch.212:                                        ; preds = %header.310
  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
  br label %header.29

latch.113:                                        ; preds = %header.29
  %indvar.next.123 = add i32 %indvar.121, 1
  br label %header.18

latch.014:                                        ; preds = %header.18
  %indvar.next.026 = add i32 %indvar.024, 1
  br label %header.07

kcall.configok24:                                 ; preds = %header.310
  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
  br label %latch.311

kcall.end25:                                      ; preds = %header.07
  ret void, !dbg !1089
}

SUSAN: found argument 6346: i32 %ni
CBackend: varname: ni
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1022, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: i32 %nj
CBackend: varname: nj
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1024, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: i32 %nk
CBackend: varname: nk
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1025, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: i32 %nl
CBackend: varname: nl
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1026, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: double %alpha
CBackend: varname: alpha
  call void @llvm.dbg.value(metadata double %alpha, metadata !1027, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: double %beta
CBackend: varname: beta
  call void @llvm.dbg.value(metadata double %beta, metadata !1028, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: double* %tmp
CBackend: varname: tmp
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1029, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: double* %A
CBackend: varname: A
  call void @llvm.dbg.value(metadata double* %A, metadata !1030, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: double* %B
CBackend: varname: B
  call void @llvm.dbg.value(metadata double* %B, metadata !1031, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: double* %C
CBackend: varname: C
  call void @llvm.dbg.value(metadata double* %C, metadata !1032, metadata !DIExpression()), !dbg !1023
SUSAN: found argument 6346: double* %D
CBackend: varname: D
  call void @llvm.dbg.value(metadata double* %D, metadata !1033, metadata !DIExpression()), !dbg !1023
SUSAN: found in IV2Name map   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
name:  i
SUSAN: phi related name: i
SUSAN: found in IV2Name map   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
name:  j
SUSAN: phi related name: j
SUSAN: found in IV2Name map   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
name:  k
SUSAN: phi related name: k
SUSAN: found in IV2Name map   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
name:  l
SUSAN: phi related name: l
SUSAN: found in IV2Name map   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
name:  i
SUSAN: phi related name: i
SUSAN: found in IV2Name map   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
name:  j
SUSAN: phi related name: j
SUSAN: found in IV2Name map   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
name:  k
SUSAN: phi related name: k
SUSAN: found in IV2Name map   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
name:  l
SUSAN: phi related name: l
=========================SUSAN: IR NAMING BEFORE=====================
  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1 -> l
  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1 -> k
  %indvar.next.123 = add i32 %indvar.121, 1 -> j
  %indvar.next.026 = add i32 %indvar.024, 1 -> i
i32 %ni -> ni
i32 %nj -> nj
i32 %nk -> nk
i32 %nl -> nl
double %alpha -> alpha
double %beta -> beta
double* %tmp -> tmp
double* %A -> A
double* %B -> B
double* %C -> C
double* %D -> D
  %block = alloca %struct.dim3, align 4 -> block
  %grid = alloca %struct.dim3, align 4 -> grid
  %grid9 = alloca %struct.dim3, align 4 -> grid
  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1 -> l
  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1 -> k
  %indvar.next.1 = add i32 %indvar.1, 1 -> j
  %indvar.next.0 = add i32 %indvar.0, 1 -> i
SUSAN: inst:  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %exitcond29 = icmp ne i32 %indvar.024, %conv14
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !804
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  br label %header.18
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %exitcond28 = icmp ne i32 %indvar.121, %conv19
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br i1 %exitcond28, label %header.29.preheader, label %latch.014
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br label %header.29
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %exitcond27 = icmp ne i32 %indvar.218, 8
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !804
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br label %header.310
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %exitcond = icmp ne i32 %indvar.315, 32
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br i1 %exitcond, label %kcall.configok24, label %latch.212
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br label %header.310
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br label %header.29
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %indvar.next.123 = add i32 %indvar.121, 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br label %header.18
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  %indvar.next.026 = add i32 %indvar.024, 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.026 = add i32 %indvar.024, 1
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br label %header.07
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.026 = add i32 %indvar.024, 1
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  br label %latch.311
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
j:  %indvar.next.123 = add i32 %indvar.121, 1
k:  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
l:  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: inst:  ret void, !dbg !819
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %div = udiv i32 256, 32, !dbg !789
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  store i32 %div, i32* %dim3gep.0
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  store i32 32, i32* %dim3gep.1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  store i32 1, i32* %dim3gep.2
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.declare(metadata %struct.dim3* %grid, metadata !1061, metadata !DIExpression()), !dbg !1063
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %conv = trunc i32 %ni to i16, !dbg !793
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !794
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %0 = load i32, i32* %x, align 4, !dbg !794
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %conv1 = trunc i32 %0 to i16, !dbg !795
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.declare(metadata %struct.dim3* %grid9, metadata !1075, metadata !DIExpression()), !dbg !1077
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %conv10 = trunc i32 %ni to i16, !dbg !808
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !809
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %14 = load i32, i32* %x11, align 4, !dbg !809
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %conv12 = trunc i32 %14 to i16, !dbg !810
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %conv14 = sext i16 %call13 to i32, !dbg !811
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %conv15 = trunc i32 %nl to i16, !dbg !812
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !813
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %15 = load i32, i32* %y16, align 4, !dbg !813
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %conv17 = trunc i32 %15 to i16, !dbg !814
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %conv19 = sext i16 %call18 to i32, !dbg !815
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  store i32 %conv14, i32* %dim3gep.04
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %block = alloca %struct.dim3, align 4
block:  %block = alloca %struct.dim3, align 4
SUSAN: inst:  %grid = alloca %struct.dim3, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid = alloca %struct.dim3, align 4
SUSAN: inst:  %agg.tmp = alloca %struct.dim3, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid = alloca %struct.dim3, align 4
SUSAN: inst:  %agg.tmp7 = alloca %struct.dim3, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid = alloca %struct.dim3, align 4
SUSAN: inst:  %agg.tmp.coerce = alloca { i64, i32 }, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid = alloca %struct.dim3, align 4
SUSAN: inst:  %agg.tmp7.coerce = alloca { i64, i32 }, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid = alloca %struct.dim3, align 4
SUSAN: inst:  %grid9 = alloca %struct.dim3, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %agg.tmp20 = alloca %struct.dim3, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %agg.tmp21 = alloca %struct.dim3, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %agg.tmp20.coerce = alloca { i64, i32 }, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %agg.tmp21.coerce = alloca { i64, i32 }, align 4
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %ni, metadata !1022, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nj, metadata !1024, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nk, metadata !1025, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nl, metadata !1026, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double %alpha, metadata !1027, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double %beta, metadata !1028, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %tmp, metadata !1029, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %A, metadata !1030, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %B, metadata !1031, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %C, metadata !1032, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %D, metadata !1033, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 256, metadata !1034, metadata !DIExpression()), !dbg !1023
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  call void @llvm.dbg.declare(metadata %struct.dim3* %block, metadata !1035, metadata !DIExpression()), !dbg !1059
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %conv2 = sext i16 %call to i32, !dbg !796
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %conv3 = trunc i32 %nj to i16, !dbg !797
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !798
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %1 = load i32, i32* %y, align 4, !dbg !798
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %conv4 = trunc i32 %1 to i16, !dbg !799
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %conv6 = sext i16 %call5 to i32, !dbg !800
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  store i32 %conv2, i32* %dim3gep.01
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  store i32 %conv6, i32* %dim3gep.12
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  store i32 1, i32* %dim3gep.23
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !801
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %3 = bitcast %struct.dim3* %grid to i8*, !dbg !801
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %5 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !802
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %6 = bitcast %struct.dim3* %block to i8*, !dbg !802
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !803
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %9 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !803
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !803
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %12 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !803
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  br label %header.0
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %exitcond33 = icmp ne i32 %indvar.0, %conv2
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !804
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %header.1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %exitcond32 = icmp ne i32 %indvar.1, %conv6
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br i1 %exitcond32, label %header.2.preheader, label %latch.0
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %header.2
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %exitcond31 = icmp ne i32 %indvar.2, 8
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !804
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %header.3
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %exitcond30 = icmp ne i32 %indvar.3, 32
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br i1 %exitcond30, label %kcall.configok, label %latch.2
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %header.3
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %header.2
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.next.1 = add i32 %indvar.1, 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %header.1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.next.0 = add i32 %indvar.0, 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %header.0
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %latch.3
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  store i32 %conv19, i32* %dim3gep.15
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  store i32 1, i32* %dim3gep.26
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %16 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !816
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %17 = bitcast %struct.dim3* %grid9 to i8*, !dbg !816
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !817
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %20 = bitcast %struct.dim3* %block to i8*, !dbg !817
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %22 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !818
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %23 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !818
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %25 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !818
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %26 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !818
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  br label %header.07
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
i:  %indvar.next.0 = add i32 %indvar.0, 1
j:  %indvar.next.1 = add i32 %indvar.1, 1
k:  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
l:  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: inst:  %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst:  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
block:  %block = alloca %struct.dim3, align 4
grid:  %grid9 = alloca %struct.dim3, align 4
SUSAN: inst at 6227:   %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
SUSAN: inst at 6227:   %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
SUSAN: inst at 6227:   %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
SUSAN: inst at 6227:   %3 = bitcast %struct.dim3* %grid to i8*, !dbg !801
=========================SUSAN: IR NAMING=====================
  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1 -> l
  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1 -> k
  %indvar.next.123 = add i32 %indvar.121, 1 -> j
  %indvar.next.026 = add i32 %indvar.024, 1 -> i
i32 %ni -> ni
i32 %nj -> nj
i32 %nk -> nk
i32 %nl -> nl
double %alpha -> alpha
double %beta -> beta
double* %tmp -> tmp
double* %A -> A
double* %B -> B
double* %C -> C
double* %D -> D
  %block = alloca %struct.dim3, align 4 -> block
  %grid = alloca %struct.dim3, align 4 -> grid
  %grid9 = alloca %struct.dim3, align 4 -> grid
  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1 -> l
  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1 -> k
  %indvar.next.1 = add i32 %indvar.1, 1 -> j
  %indvar.next.0 = add i32 %indvar.0, 1 -> i
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
SUSAN: getting value name for: double %alpha
inst from IRNaming: double %alpha
original name : alpha
returning name: alpha
SUSAN: getting value name for: double %beta
inst from IRNaming: double %beta
original name : beta
returning name: beta
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
SUSAN: getting value name for: double* %C
inst from IRNaming: double* %C
original name : C
returning name: C
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: declaring 3252:   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: declaring with reconstructed name 3286: block
SUSAN: declaring varName 5264: block
SUSAN: printing type at 5885: %struct.dim3 = type { i32, i32, i32 }
SUSAN: getting value name for:   %grid = alloca %struct.dim3, align 4
inst from IRNaming:   %grid = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: declaring 3252:   %grid = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid = alloca %struct.dim3, align 4
inst from IRNaming:   %grid = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: declaring with reconstructed name 3286: grid
SUSAN: declaring varName 5264: grid
SUSAN: printing type at 5885: %struct.dim3 = type { i32, i32, i32 }
SUSAN: getting value name for:   %agg.tmp = alloca %struct.dim3, align 4
SUSAN: declaring 3252:   %agg.tmp = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp = alloca %struct.dim3, align 4
SUSAN: declaring varName 5264: agg_2e_tmp
SUSAN: printing type at 5885: %struct.dim3 = type { i32, i32, i32 }
SUSAN: getting value name for:   %agg.tmp7 = alloca %struct.dim3, align 4
SUSAN: declaring 3252:   %agg.tmp7 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp7 = alloca %struct.dim3, align 4
SUSAN: declaring varName 5264: agg_2e_tmp7
SUSAN: printing type at 5885: %struct.dim3 = type { i32, i32, i32 }
SUSAN: getting value name for:   %agg.tmp.coerce = alloca { i64, i32 }, align 4
SUSAN: declaring 3252:   %agg.tmp.coerce = alloca { i64, i32 }, align 4
SUSAN: getting value name for:   %agg.tmp.coerce = alloca { i64, i32 }, align 4
SUSAN: declaring varName 5264: agg_2e_tmp_2e_coerce
SUSAN: printing type at 5885: { i64, i32 }
SUSAN: getting value name for:   %agg.tmp7.coerce = alloca { i64, i32 }, align 4
SUSAN: declaring 3252:   %agg.tmp7.coerce = alloca { i64, i32 }, align 4
SUSAN: getting value name for:   %agg.tmp7.coerce = alloca { i64, i32 }, align 4
SUSAN: declaring varName 5264: agg_2e_tmp7_2e_coerce
SUSAN: printing type at 5885: { i64, i32 }
SUSAN: getting value name for:   %grid9 = alloca %struct.dim3, align 4
inst from IRNaming:   %grid9 = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: getting value name for:   %agg.tmp20 = alloca %struct.dim3, align 4
SUSAN: declaring 3252:   %agg.tmp20 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp20 = alloca %struct.dim3, align 4
SUSAN: declaring varName 5264: agg_2e_tmp20
SUSAN: printing type at 5885: %struct.dim3 = type { i32, i32, i32 }
SUSAN: getting value name for:   %agg.tmp21 = alloca %struct.dim3, align 4
SUSAN: declaring 3252:   %agg.tmp21 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp21 = alloca %struct.dim3, align 4
SUSAN: declaring varName 5264: agg_2e_tmp21
SUSAN: printing type at 5885: %struct.dim3 = type { i32, i32, i32 }
SUSAN: getting value name for:   %agg.tmp20.coerce = alloca { i64, i32 }, align 4
SUSAN: declaring 3252:   %agg.tmp20.coerce = alloca { i64, i32 }, align 4
SUSAN: getting value name for:   %agg.tmp20.coerce = alloca { i64, i32 }, align 4
SUSAN: declaring varName 5264: agg_2e_tmp20_2e_coerce
SUSAN: printing type at 5885: { i64, i32 }
SUSAN: getting value name for:   %agg.tmp21.coerce = alloca { i64, i32 }, align 4
SUSAN: declaring 3252:   %agg.tmp21.coerce = alloca { i64, i32 }, align 4
SUSAN: getting value name for:   %agg.tmp21.coerce = alloca { i64, i32 }, align 4
SUSAN: declaring varName 5264: agg_2e_tmp21_2e_coerce
SUSAN: printing type at 5885: { i64, i32 }
SUSAN: getting value name for:   %div = udiv i32 256, 32, !dbg !789
SUSAN: declaring varName 5298: div
SUSAN: declared locals:
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
grid
SUSAN: declaring 3252:   %div = udiv i32 256, 32, !dbg !789
SUSAN: getting value name for:   %div = udiv i32 256, 32, !dbg !789
SUSAN: inst at 5950:   %div = udiv i32 256, 32, !dbg !789
SUSAN: declaring   %div = udiv i32 256, 32, !dbg !789
SUSAN: printing type at 5937: i32
SUSAN: getting value name for:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: declaring varName 5298: call
SUSAN: declared locals:
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
div
grid
SUSAN: declaring 3252:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: getting value name for:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: inst at 5950:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: declaring   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: printing type at 5930: i32
SUSAN: getting value name for:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: declaring varName 5298: call5
SUSAN: declared locals:
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
div
grid
SUSAN: declaring 3252:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: getting value name for:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: inst at 5950:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: declaring   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: printing type at 5930: i32
SUSAN: getting value name for:   %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
SUSAN: declaring varName 5298: _1
SUSAN: declared locals:
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
SUSAN: declaring 3252:   %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
SUSAN: getting value name for:   %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
SUSAN: inst at 5950:   %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
SUSAN: declaring   %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
SUSAN: declaring varName 5298: _2
SUSAN: declared locals:
_1
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
SUSAN: declaring 3252:   %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
SUSAN: getting value name for:   %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
SUSAN: inst at 5950:   %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
SUSAN: declaring   %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
SUSAN: declaring varName 5298: _3
SUSAN: declared locals:
_1
_2
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
SUSAN: declaring 3252:   %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
SUSAN: getting value name for:   %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
SUSAN: inst at 5950:   %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
SUSAN: declaring   %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
SUSAN: declaring varName 5298: _4
SUSAN: declared locals:
_1
_2
_3
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
SUSAN: declaring 3252:   %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
SUSAN: getting value name for:   %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
SUSAN: inst at 5950:   %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
SUSAN: declaring   %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803
SUSAN: printing type at 5937: i8*
SUSAN: found in IV2Name map   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
name:  i
SUSAN: declaring varName 5298: i
SUSAN: declared locals:
_1
_2
_3
_4
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
SUSAN: declaring 3252:   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found in IV2Name map   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
name:  i
SUSAN: reconstructed variable counter increment for iv:i
SUSAN: inst at 5950:   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: declaring   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: printing type at 5937: i32
SUSAN: found in IV2Name map   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
name:  j
SUSAN: declaring varName 5298: j
SUSAN: declared locals:
_1
_2
_3
_4
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
i
SUSAN: declaring 3252:   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found in IV2Name map   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
name:  j
SUSAN: reconstructed variable counter increment for iv:j
SUSAN: inst at 5950:   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: declaring   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: printing type at 5937: i32
SUSAN: found in IV2Name map   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
name:  k
SUSAN: declaring varName 5298: k
SUSAN: declared locals:
_1
_2
_3
_4
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
i
j
SUSAN: declaring 3252:   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found in IV2Name map   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
name:  k
SUSAN: reconstructed variable counter increment for iv:k
SUSAN: inst at 5950:   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: declaring   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: printing type at 5937: i32
SUSAN: found in IV2Name map   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
name:  l
SUSAN: declaring varName 5298: l
SUSAN: declared locals:
_1
_2
_3
_4
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
i
j
k
SUSAN: declaring 3252:   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found in IV2Name map   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
name:  l
SUSAN: reconstructed variable counter increment for iv:l
SUSAN: inst at 5950:   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: declaring   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: printing type at 5937: i32
SUSAN: getting value name for:   %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
inst from IRNaming:   %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
original name : l
returning name: l
SUSAN: declaring varName 5298: l
SUSAN: getting value name for:   %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
inst from IRNaming:   %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
original name : k
returning name: k
SUSAN: declaring varName 5298: k
SUSAN: getting value name for:   %indvar.next.1 = add i32 %indvar.1, 1
inst from IRNaming:   %indvar.next.1 = add i32 %indvar.1, 1
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvar.next.0 = add i32 %indvar.0, 1
inst from IRNaming:   %indvar.next.0 = add i32 %indvar.0, 1
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: declaring varName 5298: call13
SUSAN: declared locals:
_1
_2
_3
_4
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call5
div
grid
i
j
k
l
SUSAN: declaring 3252:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: getting value name for:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: inst at 5950:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: declaring   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: printing type at 5930: i32
SUSAN: getting value name for:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: declaring varName 5298: call18
SUSAN: declared locals:
_1
_2
_3
_4
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call13
call5
div
grid
i
j
k
l
SUSAN: declaring 3252:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: getting value name for:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: inst at 5950:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: declaring   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: printing type at 5930: i32
SUSAN: getting value name for:   %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
SUSAN: declaring varName 5298: _5
SUSAN: declared locals:
_1
_2
_3
_4
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call13
call18
call5
div
grid
i
j
k
l
SUSAN: declaring 3252:   %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
SUSAN: getting value name for:   %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
SUSAN: inst at 5950:   %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
SUSAN: declaring   %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
SUSAN: declaring varName 5298: _6
SUSAN: declared locals:
_1
_2
_3
_4
_5
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call13
call18
call5
div
grid
i
j
k
l
SUSAN: declaring 3252:   %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
SUSAN: getting value name for:   %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
SUSAN: inst at 5950:   %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
SUSAN: declaring   %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
SUSAN: declaring varName 5298: _7
SUSAN: declared locals:
_1
_2
_3
_4
_5
_6
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call13
call18
call5
div
grid
i
j
k
l
SUSAN: declaring 3252:   %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
SUSAN: getting value name for:   %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
SUSAN: inst at 5950:   %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
SUSAN: declaring   %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818
SUSAN: printing type at 5937: i8*
SUSAN: getting value name for:   %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
SUSAN: declaring varName 5298: _8
SUSAN: declared locals:
_1
_2
_3
_4
_5
_6
_7
agg_2e_tmp
agg_2e_tmp20
agg_2e_tmp20_2e_coerce
agg_2e_tmp21
agg_2e_tmp21_2e_coerce
agg_2e_tmp7
agg_2e_tmp7_2e_coerce
agg_2e_tmp_2e_coerce
block
call
call13
call18
call5
div
grid
i
j
k
l
SUSAN: declaring 3252:   %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
SUSAN: getting value name for:   %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
SUSAN: inst at 5950:   %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
SUSAN: declaring   %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818
SUSAN: printing type at 5937: i8*
SUSAN: found in IV2Name map   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
name:  i
SUSAN: declaring varName 5298: i
SUSAN: found in IV2Name map   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
name:  j
SUSAN: declaring varName 5298: j
SUSAN: found in IV2Name map   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
name:  k
SUSAN: declaring varName 5298: k
SUSAN: found in IV2Name map   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
name:  l
SUSAN: declaring varName 5298: l
SUSAN: getting value name for:   %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
inst from IRNaming:   %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
original name : l
returning name: l
SUSAN: declaring varName 5298: l
SUSAN: getting value name for:   %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
inst from IRNaming:   %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
original name : k
returning name: k
SUSAN: declaring varName 5298: k
SUSAN: getting value name for:   %indvar.next.123 = add i32 %indvar.121, 1
inst from IRNaming:   %indvar.next.123 = add i32 %indvar.121, 1
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvar.next.026 = add i32 %indvar.024, 1
inst from IRNaming:   %indvar.next.026 = add i32 %indvar.024, 1
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: am I here 6807??
Linear Region with entry block: entry
SUSAN: printing bb:entry
CBEBackend: printing bb 7082 entry
SUSAN: printing instruction   %div = udiv i32 256, 32, !dbg !789 at 6678
SUSAN: getting value name for:   %div = udiv i32 256, 32, !dbg !789
CBackend: writeOperand 3595: i32 256
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 32
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   store i32 %div, i32* %dim3gep.0 at 6678
CBEBackend: printing store Inst:   store i32 %div, i32* %dim3gep.0
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595:   %div = udiv i32 256, 32, !dbg !789
SUSAN: getting value name for:   %div = udiv i32 256, 32, !dbg !789
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   store i32 32, i32* %dim3gep.1 at 6678
CBEBackend: printing store Inst:   store i32 32, i32* %dim3gep.1
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595: i32 32
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   store i32 1, i32* %dim3gep.2 at 6678
CBEBackend: printing store Inst:   store i32 1, i32* %dim3gep.2
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796 at 6678
SUSAN: getting value name for:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
CBackend: writeOperand 3595: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv = trunc i32 %ni to i16, !dbg !793
SUSAN: visiting cast:   %conv = trunc i32 %ni to i16, !dbg !793
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv1 = trunc i32 %0 to i16, !dbg !795
SUSAN: visiting cast:   %conv1 = trunc i32 %0 to i16, !dbg !795
CBackend: writeOperand 3595:   %0 = load i32, i32* %x, align 4, !dbg !794
SUSAN: loadInst:   %0 = load i32, i32* %x, align 4, !dbg !794
SUSAN: GEPINST:   %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !794
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !794
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: is StructType 10074
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800 at 6678
SUSAN: getting value name for:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
CBackend: writeOperand 3595: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv3 = trunc i32 %nj to i16, !dbg !797
SUSAN: visiting cast:   %conv3 = trunc i32 %nj to i16, !dbg !797
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv4 = trunc i32 %1 to i16, !dbg !799
SUSAN: visiting cast:   %conv4 = trunc i32 %1 to i16, !dbg !799
CBackend: writeOperand 3595:   %1 = load i32, i32* %y, align 4, !dbg !798
SUSAN: loadInst:   %1 = load i32, i32* %y, align 4, !dbg !798
SUSAN: GEPINST:   %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !798
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !798
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: is StructType 10074
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   store i32 %conv2, i32* %dim3gep.01 at 6678
CBEBackend: printing store Inst:   store i32 %conv2, i32* %dim3gep.01
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %grid = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid = alloca %struct.dim3, align 4
inst from IRNaming:   %grid = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595:   %conv2 = sext i16 %call to i32, !dbg !796
SUSAN: visiting cast:   %conv2 = sext i16 %call to i32, !dbg !796
CBackend: writeOperand 3595:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: getting value name for:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   store i32 %conv6, i32* %dim3gep.12 at 6678
CBEBackend: printing store Inst:   store i32 %conv6, i32* %dim3gep.12
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %grid = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid = alloca %struct.dim3, align 4
inst from IRNaming:   %grid = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595:   %conv6 = sext i16 %call5 to i32, !dbg !800
SUSAN: visiting cast:   %conv6 = sext i16 %call5 to i32, !dbg !800
CBackend: writeOperand 3595:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: getting value name for:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   store i32 1, i32* %dim3gep.23 at 6678
CBEBackend: printing store Inst:   store i32 1, i32* %dim3gep.23
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %grid = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid = alloca %struct.dim3, align 4
inst from IRNaming:   %grid = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !801 at 6678
CBackend: writeOperand 3595: 
declare i8* @memcpy(i8*, i8*, i64)

SUSAN: getting value name for: 
declare i8* @memcpy(i8*, i8*, i64)

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !801
SUSAN: visiting cast:   %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !801
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %agg.tmp = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp = alloca %struct.dim3, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %3 = bitcast %struct.dim3* %grid to i8*, !dbg !801
SUSAN: visiting cast:   %3 = bitcast %struct.dim3* %grid to i8*, !dbg !801
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %grid = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid = alloca %struct.dim3, align 4
inst from IRNaming:   %grid = alloca %struct.dim3, align 4
original name : grid
returning name: grid
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 12
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !802 at 6678
CBackend: writeOperand 3595: 
declare i8* @memcpy(i8*, i8*, i64)

SUSAN: getting value name for: 
declare i8* @memcpy(i8*, i8*, i64)

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %5 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !802
SUSAN: visiting cast:   %5 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !802
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %agg.tmp7 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp7 = alloca %struct.dim3, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %6 = bitcast %struct.dim3* %block to i8*, !dbg !802
SUSAN: visiting cast:   %6 = bitcast %struct.dim3* %block to i8*, !dbg !802
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 12
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !803 at 6678
CBackend: writeOperand 3595: 
declare i8* @memcpy(i8*, i8*, i64)

SUSAN: getting value name for: 
declare i8* @memcpy(i8*, i8*, i64)

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !803
SUSAN: visiting cast:   %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !803
SUSAN: printing cast from: { i64, i32 }* to i8*
CBackend: writeOperand 3595:   %agg.tmp.coerce = alloca { i64, i32 }, align 4
SUSAN: getting value name for:   %agg.tmp.coerce = alloca { i64, i32 }, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %9 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !803
SUSAN: visiting cast:   %9 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !803
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %agg.tmp = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp = alloca %struct.dim3, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 12
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !803 at 6678
CBackend: writeOperand 3595: 
declare i8* @memcpy(i8*, i8*, i64)

SUSAN: getting value name for: 
declare i8* @memcpy(i8*, i8*, i64)

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !803
SUSAN: visiting cast:   %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !803
SUSAN: printing cast from: { i64, i32 }* to i8*
CBackend: writeOperand 3595:   %agg.tmp7.coerce = alloca { i64, i32 }, align 4
SUSAN: getting value name for:   %agg.tmp7.coerce = alloca { i64, i32 }, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %12 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !803
SUSAN: visiting cast:   %12 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !803
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %agg.tmp7 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp7 = alloca %struct.dim3, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 12
CBackend: writeoperand here 3674? 
printing unconditional branch   br label %header.0
Loop Region with entry block: header.0
term 6818:   br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !804
SUSAN: condrelatedinst:  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: condrelatedinst:  %exitcond33 = icmp ne i32 %indvar.0, %conv2
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: declaring 3252:   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found in IV2Name map   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
name:  i
SUSAN: reconstructed variable counter increment for iv:i
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found in IV2Name map   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
name:  i
SUSAN: visiting cast:   %conv2 = sext i16 %call to i32, !dbg !796
CBackend: writeOperand 3595:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: getting value name for:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvar.next.0 = add i32 %indvar.0, 1
SUSAN: getting value name for:   %indvar.next.0 = add i32 %indvar.0, 1
inst from IRNaming:   %indvar.next.0 = add i32 %indvar.0, 1
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %indvar.next.0 = add i32 %indvar.0, 1
inst from IRNaming:   %indvar.next.0 = add i32 %indvar.0, 1
original name : i
returning name: i
CBackend: writeOperand 3595:   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found in IV2Name map   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
name:  i
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: header.1.preheader
SUSAN: printing bb:header.1.preheader
CBEBackend: printing bb 7082 header.1.preheader
printing unconditional branch   br label %header.1
Loop Region with entry block: header.1
term 6818:   br i1 %exitcond32, label %header.2.preheader, label %latch.0
SUSAN: condrelatedinst:  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: condrelatedinst:  %exitcond32 = icmp ne i32 %indvar.1, %conv6
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: declaring 3252:   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found in IV2Name map   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
name:  j
SUSAN: reconstructed variable counter increment for iv:j
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found in IV2Name map   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
name:  j
SUSAN: visiting cast:   %conv6 = sext i16 %call5 to i32, !dbg !800
CBackend: writeOperand 3595:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: getting value name for:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvar.next.1 = add i32 %indvar.1, 1
SUSAN: getting value name for:   %indvar.next.1 = add i32 %indvar.1, 1
inst from IRNaming:   %indvar.next.1 = add i32 %indvar.1, 1
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvar.next.1 = add i32 %indvar.1, 1
inst from IRNaming:   %indvar.next.1 = add i32 %indvar.1, 1
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found in IV2Name map   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
name:  j
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: header.2.preheader
SUSAN: printing bb:header.2.preheader
CBEBackend: printing bb 7082 header.2.preheader
printing unconditional branch   br label %header.2
Loop Region with entry block: header.2
term 6818:   br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !804
SUSAN: condrelatedinst:  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: condrelatedinst:  %exitcond31 = icmp ne i32 %indvar.2, 8
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: declaring 3252:   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found in IV2Name map   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
name:  k
SUSAN: reconstructed variable counter increment for iv:k
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found in IV2Name map   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
name:  k
SUSAN: declaring 3252:   %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
SUSAN: getting value name for:   %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
inst from IRNaming:   %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
original name : k
returning name: k
SUSAN: declaring with reconstructed name 3286: k
SUSAN: getting value name for:   %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
inst from IRNaming:   %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
original name : k
returning name: k
CBackend: writeOperand 3595:   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found in IV2Name map   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
name:  k
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: header.3.preheader
SUSAN: printing bb:header.3.preheader
CBEBackend: printing bb 7082 header.3.preheader
printing unconditional branch   br label %header.3
Loop Region with entry block: header.3
term 6818:   br i1 %exitcond30, label %kcall.configok, label %latch.2
SUSAN: condrelatedinst:  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: condrelatedinst:  %exitcond30 = icmp ne i32 %indvar.3, 32
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: declaring 3252:   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found in IV2Name map   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
name:  l
SUSAN: reconstructed variable counter increment for iv:l
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found in IV2Name map   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
name:  l
SUSAN: declaring 3252:   %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: getting value name for:   %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
inst from IRNaming:   %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
original name : l
returning name: l
SUSAN: declaring with reconstructed name 3286: l
SUSAN: getting value name for:   %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
inst from IRNaming:   %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
original name : l
returning name: l
CBackend: writeOperand 3595:   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found in IV2Name map   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
name:  l
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: kcall.configok
SUSAN: printing bb:kcall.configok
CBEBackend: printing bb 7082 kcall.configok
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: printing instruction   call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0) at 6678
CBackend: writeOperand 3595: 
; Function Attrs: convergent noinline nounwind
define dso_local void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %gridDim.x, i32 %gridDim.y, i32 %gridDim.z, i32 %blockDim.x, i32 %blockDim.y, i32 %blockDim.z, i32 %blockIdx.x, i32 %blockIdx.y, i32 %blockIdx.z, i32 %threadIdx.x, i32 %threadIdx.y, i32 %threadIdx.z) #9 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1137, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1140, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1141, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1142, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double %alpha, metadata !1143, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double %beta, metadata !1144, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1145, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %A, metadata !1146, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %B, metadata !1147, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %C, metadata !1148, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %D, metadata !1149, metadata !DIExpression()), !dbg !1139
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !1150
  %add = add i32 %mul, %threadIdx.x, !dbg !1151
  call void @llvm.dbg.value(metadata i32 %add, metadata !1152, metadata !DIExpression()), !dbg !1139
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !1153
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !1154
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1155, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1156, metadata !DIExpression()), !dbg !1139
  %cmp = icmp slt i32 %add, %ni, !dbg !1157
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1159

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nj, !dbg !1160
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1161

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 0, metadata !1162, metadata !DIExpression()), !dbg !1139
  %0 = sext i32 %nk to i64, !dbg !1163
  %1 = sext i32 %nj to i64, !dbg !1163
  %2 = sext i32 %add7 to i64, !dbg !1163
  br label %for.cond, !dbg !1163

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !1166
  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !1139
  call void @llvm.dbg.value(metadata double %dot.0, metadata !1156, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1162, metadata !DIExpression()), !dbg !1139
  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !1167
  br i1 %cmp9, label %for.body, label %for.end, !dbg !1169

for.body:                                         ; preds = %for.cond
  %mul10 = mul nsw i32 %add, %nk, !dbg !1170
  %3 = sext i32 %mul10 to i64, !dbg !1171
  %4 = add nsw i64 %3, %indvars.iv, !dbg !1171
  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !1172
  %5 = load double, double* %arrayidx, align 8, !dbg !1172
  %mul12 = fmul contract double %alpha, %5, !dbg !1173
  %6 = mul nsw i64 %indvars.iv, %1, !dbg !1174
  %7 = add nsw i64 %6, %2, !dbg !1175
  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !1176
  %8 = load double, double* %arrayidx16, align 8, !dbg !1176
  %mul17 = fmul contract double %mul12, %8, !dbg !1177
  %add18 = fadd contract double %dot.0, %mul17, !dbg !1178
  call void @llvm.dbg.value(metadata double %add18, metadata !1156, metadata !DIExpression()), !dbg !1139
  br label %for.inc, !dbg !1179

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1180
  call void @llvm.dbg.value(metadata i32 undef, metadata !1162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1139
  br label %for.cond, !dbg !1181, !llvm.loop !1182

for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !1139
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1156, metadata !DIExpression()), !dbg !1139
  %mul19 = mul nsw i32 %add, %nj, !dbg !1184
  %add20 = add nsw i32 %mul19, %add7, !dbg !1185
  %idxprom21 = sext i32 %add20 to i64, !dbg !1186
  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !1186
  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !1187
  br label %if.end, !dbg !1188

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !1189
}

SUSAN: getting value name for: 
; Function Attrs: convergent noinline nounwind
define dso_local void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %gridDim.x, i32 %gridDim.y, i32 %gridDim.z, i32 %blockDim.x, i32 %blockDim.y, i32 %blockDim.z, i32 %blockIdx.x, i32 %blockIdx.y, i32 %blockIdx.z, i32 %threadIdx.x, i32 %threadIdx.y, i32 %threadIdx.z) #9 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1137, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1140, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1141, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1142, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double %alpha, metadata !1143, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double %beta, metadata !1144, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1145, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %A, metadata !1146, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %B, metadata !1147, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %C, metadata !1148, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %D, metadata !1149, metadata !DIExpression()), !dbg !1139
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !1150
  %add = add i32 %mul, %threadIdx.x, !dbg !1151
  call void @llvm.dbg.value(metadata i32 %add, metadata !1152, metadata !DIExpression()), !dbg !1139
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !1153
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !1154
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1155, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1156, metadata !DIExpression()), !dbg !1139
  %cmp = icmp slt i32 %add, %ni, !dbg !1157
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1159

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nj, !dbg !1160
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1161

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 0, metadata !1162, metadata !DIExpression()), !dbg !1139
  %0 = sext i32 %nk to i64, !dbg !1163
  %1 = sext i32 %nj to i64, !dbg !1163
  %2 = sext i32 %add7 to i64, !dbg !1163
  br label %for.cond, !dbg !1163

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !1166
  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !1139
  call void @llvm.dbg.value(metadata double %dot.0, metadata !1156, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1162, metadata !DIExpression()), !dbg !1139
  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !1167
  br i1 %cmp9, label %for.body, label %for.end, !dbg !1169

for.body:                                         ; preds = %for.cond
  %mul10 = mul nsw i32 %add, %nk, !dbg !1170
  %3 = sext i32 %mul10 to i64, !dbg !1171
  %4 = add nsw i64 %3, %indvars.iv, !dbg !1171
  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !1172
  %5 = load double, double* %arrayidx, align 8, !dbg !1172
  %mul12 = fmul contract double %alpha, %5, !dbg !1173
  %6 = mul nsw i64 %indvars.iv, %1, !dbg !1174
  %7 = add nsw i64 %6, %2, !dbg !1175
  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !1176
  %8 = load double, double* %arrayidx16, align 8, !dbg !1176
  %mul17 = fmul contract double %mul12, %8, !dbg !1177
  %add18 = fadd contract double %dot.0, %mul17, !dbg !1178
  call void @llvm.dbg.value(metadata double %add18, metadata !1156, metadata !DIExpression()), !dbg !1139
  br label %for.inc, !dbg !1179

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1180
  call void @llvm.dbg.value(metadata i32 undef, metadata !1162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1139
  br label %for.cond, !dbg !1181, !llvm.loop !1182

for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !1139
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1156, metadata !DIExpression()), !dbg !1139
  %mul19 = mul nsw i32 %add, %nj, !dbg !1184
  %add20 = add nsw i32 %mul19, %add7, !dbg !1185
  %idxprom21 = sext i32 %add20 to i64, !dbg !1186
  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !1186
  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !1187
  br label %if.end, !dbg !1188

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !1189
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nk
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double %alpha
SUSAN: getting value name for: double %alpha
inst from IRNaming: double %alpha
original name : alpha
returning name: alpha
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double %beta
SUSAN: getting value name for: double %beta
inst from IRNaming: double %beta
original name : beta
returning name: beta
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %tmp
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %A
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %B
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %C
SUSAN: getting value name for: double* %C
inst from IRNaming: double* %C
original name : C
returning name: C
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %D
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv2 = sext i16 %call to i32, !dbg !796
SUSAN: visiting cast:   %conv2 = sext i16 %call to i32, !dbg !796
CBackend: writeOperand 3595:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
SUSAN: getting value name for:   %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !796
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv6 = sext i16 %call5 to i32, !dbg !800
SUSAN: visiting cast:   %conv6 = sext i16 %call5 to i32, !dbg !800
CBackend: writeOperand 3595:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
SUSAN: getting value name for:   %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !800
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %div = udiv i32 256, 32, !dbg !789
SUSAN: getting value name for:   %div = udiv i32 256, 32, !dbg !789
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 32
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found in IV2Name map   %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
name:  i
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found in IV2Name map   %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
name:  j
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found in IV2Name map   %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
name:  k
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found in IV2Name map   %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
name:  l
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
printing unconditional branch   br label %latch.3
CBERegion: printing latchBB latch.3
CBERegion: I 316:   %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
CBERegion: I 316:   br label %header.3
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
SUSAN: found IV 784  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
CBERegion: printing latchBB latch.2
CBERegion: I 316:   %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
CBERegion: I 316:   br label %header.2
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
SUSAN: found IV 784  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
CBERegion: printing latchBB latch.1
CBERegion: I 316:   %indvar.next.1 = add i32 %indvar.1, 1
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
CBERegion: I 316:   br label %header.1
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
SUSAN: found IV 784  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
CBERegion: printing latchBB latch.0
CBERegion: I 316:   %indvar.next.0 = add i32 %indvar.0, 1
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
CBERegion: I 316:   br label %header.0
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
SUSAN: found IV 784  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
Linear Region with entry block: kcall.end
SUSAN: printing bb:kcall.end
CBEBackend: printing bb 7082 kcall.end
SUSAN: printing instruction   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811 at 6678
SUSAN: getting value name for:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
CBackend: writeOperand 3595: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv10 = trunc i32 %ni to i16, !dbg !808
SUSAN: visiting cast:   %conv10 = trunc i32 %ni to i16, !dbg !808
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv12 = trunc i32 %14 to i16, !dbg !810
SUSAN: visiting cast:   %conv12 = trunc i32 %14 to i16, !dbg !810
CBackend: writeOperand 3595:   %14 = load i32, i32* %x11, align 4, !dbg !809
SUSAN: loadInst:   %14 = load i32, i32* %x11, align 4, !dbg !809
SUSAN: GEPINST:   %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !809
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !809
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: is StructType 10074
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815 at 6678
SUSAN: getting value name for:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
CBackend: writeOperand 3595: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv15 = trunc i32 %nl to i16, !dbg !812
SUSAN: visiting cast:   %conv15 = trunc i32 %nl to i16, !dbg !812
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv17 = trunc i32 %15 to i16, !dbg !814
SUSAN: visiting cast:   %conv17 = trunc i32 %15 to i16, !dbg !814
CBackend: writeOperand 3595:   %15 = load i32, i32* %y16, align 4, !dbg !813
SUSAN: loadInst:   %15 = load i32, i32* %y16, align 4, !dbg !813
SUSAN: GEPINST:   %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !813
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !813
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
SUSAN: is StructType 10074
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   store i32 %conv14, i32* %dim3gep.04 at 6678
CBEBackend: printing store Inst:   store i32 %conv14, i32* %dim3gep.04
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %grid9 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid9 = alloca %struct.dim3, align 4
inst from IRNaming:   %grid9 = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595:   %conv14 = sext i16 %call13 to i32, !dbg !811
SUSAN: visiting cast:   %conv14 = sext i16 %call13 to i32, !dbg !811
CBackend: writeOperand 3595:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: getting value name for:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   store i32 %conv19, i32* %dim3gep.15 at 6678
CBEBackend: printing store Inst:   store i32 %conv19, i32* %dim3gep.15
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %grid9 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid9 = alloca %struct.dim3, align 4
inst from IRNaming:   %grid9 = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595:   %conv19 = sext i16 %call18 to i32, !dbg !815
SUSAN: visiting cast:   %conv19 = sext i16 %call18 to i32, !dbg !815
CBackend: writeOperand 3595:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: getting value name for:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   store i32 1, i32* %dim3gep.26 at 6678
CBEBackend: printing store Inst:   store i32 1, i32* %dim3gep.26
CBackend: here? 10442
SUSAN: GEPINST:   %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975   %grid9 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid9 = alloca %struct.dim3, align 4
inst from IRNaming:   %grid9 = alloca %struct.dim3, align 4
original name : grid
returning name: grid
SUSAN: is StructType 10074
CBackend: here? 10445
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: here? 10462
SUSAN: printing instruction   %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !816 at 6678
CBackend: writeOperand 3595: 
declare i8* @memcpy(i8*, i8*, i64)

SUSAN: getting value name for: 
declare i8* @memcpy(i8*, i8*, i64)

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %16 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !816
SUSAN: visiting cast:   %16 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !816
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %agg.tmp20 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp20 = alloca %struct.dim3, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %17 = bitcast %struct.dim3* %grid9 to i8*, !dbg !816
SUSAN: visiting cast:   %17 = bitcast %struct.dim3* %grid9 to i8*, !dbg !816
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %grid9 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %grid9 = alloca %struct.dim3, align 4
inst from IRNaming:   %grid9 = alloca %struct.dim3, align 4
original name : grid
returning name: grid
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 12
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !817 at 6678
CBackend: writeOperand 3595: 
declare i8* @memcpy(i8*, i8*, i64)

SUSAN: getting value name for: 
declare i8* @memcpy(i8*, i8*, i64)

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !817
SUSAN: visiting cast:   %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !817
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %agg.tmp21 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp21 = alloca %struct.dim3, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %20 = bitcast %struct.dim3* %block to i8*, !dbg !817
SUSAN: visiting cast:   %20 = bitcast %struct.dim3* %block to i8*, !dbg !817
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %block = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %block = alloca %struct.dim3, align 4
inst from IRNaming:   %block = alloca %struct.dim3, align 4
original name : block
returning name: block
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 12
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !818 at 6678
CBackend: writeOperand 3595: 
declare i8* @memcpy(i8*, i8*, i64)

SUSAN: getting value name for: 
declare i8* @memcpy(i8*, i8*, i64)

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %22 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !818
SUSAN: visiting cast:   %22 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !818
SUSAN: printing cast from: { i64, i32 }* to i8*
CBackend: writeOperand 3595:   %agg.tmp20.coerce = alloca { i64, i32 }, align 4
SUSAN: getting value name for:   %agg.tmp20.coerce = alloca { i64, i32 }, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %23 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !818
SUSAN: visiting cast:   %23 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !818
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %agg.tmp20 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp20 = alloca %struct.dim3, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 12
CBackend: writeoperand here 3674? 
SUSAN: printing instruction   %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !818 at 6678
CBackend: writeOperand 3595: 
declare i8* @memcpy(i8*, i8*, i64)

SUSAN: getting value name for: 
declare i8* @memcpy(i8*, i8*, i64)

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %25 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !818
SUSAN: visiting cast:   %25 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !818
SUSAN: printing cast from: { i64, i32 }* to i8*
CBackend: writeOperand 3595:   %agg.tmp21.coerce = alloca { i64, i32 }, align 4
SUSAN: getting value name for:   %agg.tmp21.coerce = alloca { i64, i32 }, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %26 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !818
SUSAN: visiting cast:   %26 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !818
SUSAN: printing cast from: %struct.dim3* to i8*
CBackend: writeOperand 3595:   %agg.tmp21 = alloca %struct.dim3, align 4
SUSAN: getting value name for:   %agg.tmp21 = alloca %struct.dim3, align 4
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 12
CBackend: writeoperand here 3674? 
printing unconditional branch   br label %header.07
Loop Region with entry block: header.07
term 6818:   br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !804
SUSAN: condrelatedinst:  %exitcond29 = icmp ne i32 %indvar.024, %conv14
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: condrelatedinst:  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: declaring 3252:   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found in IV2Name map   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
name:  i
SUSAN: reconstructed variable counter increment for iv:i
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found in IV2Name map   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
name:  i
SUSAN: visiting cast:   %conv14 = sext i16 %call13 to i32, !dbg !811
CBackend: writeOperand 3595:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: getting value name for:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvar.next.026 = add i32 %indvar.024, 1
SUSAN: getting value name for:   %indvar.next.026 = add i32 %indvar.024, 1
inst from IRNaming:   %indvar.next.026 = add i32 %indvar.024, 1
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %indvar.next.026 = add i32 %indvar.024, 1
inst from IRNaming:   %indvar.next.026 = add i32 %indvar.024, 1
original name : i
returning name: i
CBackend: writeOperand 3595:   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found in IV2Name map   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
name:  i
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: header.18.preheader
SUSAN: printing bb:header.18.preheader
CBEBackend: printing bb 7082 header.18.preheader
printing unconditional branch   br label %header.18
Loop Region with entry block: header.18
term 6818:   br i1 %exitcond28, label %header.29.preheader, label %latch.014
SUSAN: condrelatedinst:  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: condrelatedinst:  %exitcond28 = icmp ne i32 %indvar.121, %conv19
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: declaring 3252:   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found in IV2Name map   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
name:  j
SUSAN: reconstructed variable counter increment for iv:j
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found in IV2Name map   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
name:  j
SUSAN: visiting cast:   %conv19 = sext i16 %call18 to i32, !dbg !815
CBackend: writeOperand 3595:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: getting value name for:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvar.next.123 = add i32 %indvar.121, 1
SUSAN: getting value name for:   %indvar.next.123 = add i32 %indvar.121, 1
inst from IRNaming:   %indvar.next.123 = add i32 %indvar.121, 1
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvar.next.123 = add i32 %indvar.121, 1
inst from IRNaming:   %indvar.next.123 = add i32 %indvar.121, 1
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found in IV2Name map   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
name:  j
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: header.29.preheader
SUSAN: printing bb:header.29.preheader
CBEBackend: printing bb 7082 header.29.preheader
printing unconditional branch   br label %header.29
Loop Region with entry block: header.29
term 6818:   br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !804
SUSAN: condrelatedinst:  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: condrelatedinst:  %exitcond27 = icmp ne i32 %indvar.218, 8
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: declaring 3252:   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found in IV2Name map   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
name:  k
SUSAN: reconstructed variable counter increment for iv:k
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found in IV2Name map   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
name:  k
SUSAN: declaring 3252:   %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
SUSAN: getting value name for:   %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
inst from IRNaming:   %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
original name : k
returning name: k
SUSAN: declaring with reconstructed name 3286: k
SUSAN: getting value name for:   %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
inst from IRNaming:   %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
original name : k
returning name: k
CBackend: writeOperand 3595:   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found in IV2Name map   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
name:  k
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: header.310.preheader
SUSAN: printing bb:header.310.preheader
CBEBackend: printing bb 7082 header.310.preheader
printing unconditional branch   br label %header.310
Loop Region with entry block: header.310
term 6818:   br i1 %exitcond, label %kcall.configok24, label %latch.212
SUSAN: condrelatedinst:  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: condrelatedinst:  %exitcond = icmp ne i32 %indvar.315, 32
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: declaring 3252:   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found in IV2Name map   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
name:  l
SUSAN: reconstructed variable counter increment for iv:l
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found in IV2Name map   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
name:  l
SUSAN: declaring 3252:   %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: getting value name for:   %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
inst from IRNaming:   %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
original name : l
returning name: l
SUSAN: declaring with reconstructed name 3286: l
SUSAN: getting value name for:   %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
inst from IRNaming:   %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
original name : l
returning name: l
CBackend: writeOperand 3595:   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found in IV2Name map   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
name:  l
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: kcall.configok24
SUSAN: printing bb:kcall.configok24
CBEBackend: printing bb 7082 kcall.configok24
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: printing instruction   call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0) at 6678
CBackend: writeOperand 3595: 
; Function Attrs: convergent noinline nounwind
define dso_local void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %gridDim.x, i32 %gridDim.y, i32 %gridDim.z, i32 %blockDim.x, i32 %blockDim.y, i32 %blockDim.z, i32 %blockIdx.x, i32 %blockIdx.y, i32 %blockIdx.z, i32 %threadIdx.x, i32 %threadIdx.y, i32 %threadIdx.z) #9 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1190, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1193, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1194, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1195, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double %alpha, metadata !1196, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double %beta, metadata !1197, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1198, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %A, metadata !1199, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %B, metadata !1200, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %C, metadata !1201, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %D, metadata !1202, metadata !DIExpression()), !dbg !1192
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !1203
  %add = add i32 %mul, %threadIdx.x, !dbg !1204
  call void @llvm.dbg.value(metadata i32 %add, metadata !1205, metadata !DIExpression()), !dbg !1192
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !1206
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !1207
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1208, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1209, metadata !DIExpression()), !dbg !1192
  %cmp = icmp slt i32 %add, %ni, !dbg !1210
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1212

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nl, !dbg !1213
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1214

if.then:                                          ; preds = %land.lhs.true
  %mul9 = mul nsw i32 %add, %nj, !dbg !1215
  %add10 = add nsw i32 %mul9, %add7, !dbg !1217
  %idxprom = sext i32 %add10 to i64, !dbg !1218
  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !1218
  %0 = load double, double* %arrayidx, align 8, !dbg !1218
  %mul11 = fmul contract double %0, %beta, !dbg !1219
  call void @llvm.dbg.value(metadata double %mul11, metadata !1209, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 0, metadata !1220, metadata !DIExpression()), !dbg !1192
  %1 = sext i32 %nj to i64, !dbg !1221
  %2 = sext i32 %nl to i64, !dbg !1221
  %3 = sext i32 %add7 to i64, !dbg !1221
  br label %for.cond, !dbg !1221

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !1223
  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !1224
  call void @llvm.dbg.value(metadata double %dot.0, metadata !1209, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1220, metadata !DIExpression()), !dbg !1192
  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !1225
  br i1 %cmp12, label %for.body, label %for.end, !dbg !1227

for.body:                                         ; preds = %for.cond
  %mul13 = mul nsw i32 %add, %nj, !dbg !1228
  %4 = sext i32 %mul13 to i64, !dbg !1229
  %5 = add nsw i64 %4, %indvars.iv, !dbg !1229
  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !1230
  %6 = load double, double* %arrayidx16, align 8, !dbg !1230
  %7 = mul nsw i64 %indvars.iv, %2, !dbg !1231
  %8 = add nsw i64 %7, %3, !dbg !1232
  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !1233
  %9 = load double, double* %arrayidx20, align 8, !dbg !1233
  %mul21 = fmul contract double %6, %9, !dbg !1234
  %add22 = fadd contract double %dot.0, %mul21, !dbg !1235
  call void @llvm.dbg.value(metadata double %add22, metadata !1209, metadata !DIExpression()), !dbg !1192
  br label %for.inc, !dbg !1236

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1237
  call void @llvm.dbg.value(metadata i32 undef, metadata !1220, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1192
  br label %for.cond, !dbg !1238, !llvm.loop !1239

for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !1224
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1209, metadata !DIExpression()), !dbg !1192
  %mul23 = mul nsw i32 %add, %nl, !dbg !1241
  %add24 = add nsw i32 %mul23, %add7, !dbg !1242
  %idxprom25 = sext i32 %add24 to i64, !dbg !1243
  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !1243
  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !1244
  br label %if.end, !dbg !1245

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !1246
}

SUSAN: getting value name for: 
; Function Attrs: convergent noinline nounwind
define dso_local void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %gridDim.x, i32 %gridDim.y, i32 %gridDim.z, i32 %blockDim.x, i32 %blockDim.y, i32 %blockDim.z, i32 %blockIdx.x, i32 %blockIdx.y, i32 %blockIdx.z, i32 %threadIdx.x, i32 %threadIdx.y, i32 %threadIdx.z) #9 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1190, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1193, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1194, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1195, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double %alpha, metadata !1196, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double %beta, metadata !1197, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1198, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %A, metadata !1199, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %B, metadata !1200, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %C, metadata !1201, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %D, metadata !1202, metadata !DIExpression()), !dbg !1192
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !1203
  %add = add i32 %mul, %threadIdx.x, !dbg !1204
  call void @llvm.dbg.value(metadata i32 %add, metadata !1205, metadata !DIExpression()), !dbg !1192
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !1206
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !1207
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1208, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1209, metadata !DIExpression()), !dbg !1192
  %cmp = icmp slt i32 %add, %ni, !dbg !1210
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1212

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nl, !dbg !1213
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1214

if.then:                                          ; preds = %land.lhs.true
  %mul9 = mul nsw i32 %add, %nj, !dbg !1215
  %add10 = add nsw i32 %mul9, %add7, !dbg !1217
  %idxprom = sext i32 %add10 to i64, !dbg !1218
  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !1218
  %0 = load double, double* %arrayidx, align 8, !dbg !1218
  %mul11 = fmul contract double %0, %beta, !dbg !1219
  call void @llvm.dbg.value(metadata double %mul11, metadata !1209, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 0, metadata !1220, metadata !DIExpression()), !dbg !1192
  %1 = sext i32 %nj to i64, !dbg !1221
  %2 = sext i32 %nl to i64, !dbg !1221
  %3 = sext i32 %add7 to i64, !dbg !1221
  br label %for.cond, !dbg !1221

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !1223
  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !1224
  call void @llvm.dbg.value(metadata double %dot.0, metadata !1209, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1220, metadata !DIExpression()), !dbg !1192
  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !1225
  br i1 %cmp12, label %for.body, label %for.end, !dbg !1227

for.body:                                         ; preds = %for.cond
  %mul13 = mul nsw i32 %add, %nj, !dbg !1228
  %4 = sext i32 %mul13 to i64, !dbg !1229
  %5 = add nsw i64 %4, %indvars.iv, !dbg !1229
  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !1230
  %6 = load double, double* %arrayidx16, align 8, !dbg !1230
  %7 = mul nsw i64 %indvars.iv, %2, !dbg !1231
  %8 = add nsw i64 %7, %3, !dbg !1232
  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !1233
  %9 = load double, double* %arrayidx20, align 8, !dbg !1233
  %mul21 = fmul contract double %6, %9, !dbg !1234
  %add22 = fadd contract double %dot.0, %mul21, !dbg !1235
  call void @llvm.dbg.value(metadata double %add22, metadata !1209, metadata !DIExpression()), !dbg !1192
  br label %for.inc, !dbg !1236

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1237
  call void @llvm.dbg.value(metadata i32 undef, metadata !1220, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1192
  br label %for.cond, !dbg !1238, !llvm.loop !1239

for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !1224
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1209, metadata !DIExpression()), !dbg !1192
  %mul23 = mul nsw i32 %add, %nl, !dbg !1241
  %add24 = add nsw i32 %mul23, %add7, !dbg !1242
  %idxprom25 = sext i32 %add24 to i64, !dbg !1243
  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !1243
  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !1244
  br label %if.end, !dbg !1245

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !1246
}

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nk
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double %alpha
SUSAN: getting value name for: double %alpha
inst from IRNaming: double %alpha
original name : alpha
returning name: alpha
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double %beta
SUSAN: getting value name for: double %beta
inst from IRNaming: double %beta
original name : beta
returning name: beta
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %tmp
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %A
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %B
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %C
SUSAN: getting value name for: double* %C
inst from IRNaming: double* %C
original name : C
returning name: C
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: double* %D
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv14 = sext i16 %call13 to i32, !dbg !811
SUSAN: visiting cast:   %conv14 = sext i16 %call13 to i32, !dbg !811
CBackend: writeOperand 3595:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
SUSAN: getting value name for:   %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !811
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %conv19 = sext i16 %call18 to i32, !dbg !815
SUSAN: visiting cast:   %conv19 = sext i16 %call18 to i32, !dbg !815
CBackend: writeOperand 3595:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
SUSAN: getting value name for:   %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !815
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %div = udiv i32 256, 32, !dbg !789
SUSAN: getting value name for:   %div = udiv i32 256, 32, !dbg !789
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 32
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 1
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found in IV2Name map   %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
name:  i
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found in IV2Name map   %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
name:  j
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found in IV2Name map   %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
name:  k
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found in IV2Name map   %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
name:  l
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
printing unconditional branch   br label %latch.311
CBERegion: printing latchBB latch.311
CBERegion: I 316:   %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
CBERegion: I 316:   br label %header.310
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
SUSAN: found IV 784  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
CBERegion: printing latchBB latch.212
CBERegion: I 316:   %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
CBERegion: I 316:   br label %header.29
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
SUSAN: found IV 784  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
CBERegion: printing latchBB latch.113
CBERegion: I 316:   %indvar.next.123 = add i32 %indvar.121, 1
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
CBERegion: I 316:   br label %header.18
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
SUSAN: found IV 784  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
CBERegion: printing latchBB latch.014
CBERegion: I 316:   %indvar.next.026 = add i32 %indvar.024, 1
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
CBERegion: I 316:   br label %header.07
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
SUSAN: found IV 784  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
Linear Region with entry block: kcall.end25
SUSAN: printing bb:kcall.end25
CBEBackend: printing bb 7082 kcall.end25
CBackend: iterating function 1759: cudaFree
CBackend: iterating function 1759: _ZL11print_arrayiiPd
CBackend: printing function 1770_ZL11print_arrayiiPd
SUSAN: added stderr to delete insts
SUSAN: added stderr to delete insts
SUSAN: added stderr to delete insts
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
term 6818:   br i1 %cmp, label %for.body, label %for.end10, !dbg !761
none omp loop ub:   %1 = sext i32 %ni to i64, !dbg !756
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
term 6818:   br i1 %cmp2, label %for.body3, label %for.end, !dbg !768
none omp loop ub:   %0 = sext i32 %nl to i64, !dbg !756
=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc8<latch>,%for.body3,%if.then,%if.end,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

isomp: 0
Loop: Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

isomp: 0
SUSAN: opnd0  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: opnd1  %1 = sext i32 %ni to i64, !dbg !756
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: opnd0  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: opnd1  %0 = sext i32 %nl to i64, !dbg !756
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: opnd0  %rem = srem i32 %10, 20, !dbg !778
SUSAN: opnd1i32 0
SUSAN: LP->ub:   %1 = sext i32 %ni to i64, !dbg !756
SUSAN: upperbound:   %1 = sext i32 %ni to i64, !dbg !756
SUSAN: LP->ub:   %0 = sext i32 %nl to i64, !dbg !756
SUSAN: upperbound:   %0 = sext i32 %nl to i64, !dbg !756
SUSAN: BB:
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !751, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nl, metadata !753, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %D, metadata !754, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 0, metadata !755, metadata !DIExpression()), !dbg !752
  %0 = sext i32 %nl to i64, !dbg !756
  %1 = sext i32 %ni to i64, !dbg !756
  %2 = sext i32 %ni to i64, !dbg !756
  %3 = sext i32 %ni to i64, !dbg !756
  br label %for.cond, !dbg !756

SUSAN: BB:
for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !755, metadata !DIExpression()), !dbg !752
  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !759
  br i1 %cmp, label %for.body, label %for.end10, !dbg !761

SUSAN: BB:
for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !762, metadata !DIExpression()), !dbg !752
  br label %for.cond1, !dbg !763

SUSAN: BB:
for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !762, metadata !DIExpression()), !dbg !752
  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !766
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !768

SUSAN: BB:
for.body3:                                        ; preds = %for.cond1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !769
  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !771
  %6 = add nsw i64 %5, %indvars.iv, !dbg !772
  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
  %7 = load double, double* %arrayidx, align 8, !dbg !773
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !775
  %9 = add nsw i64 %8, %indvars.iv, !dbg !777
  %10 = trunc i64 %9 to i32, !dbg !778
  %rem = srem i32 %10, 20, !dbg !778
  %cmp6 = icmp eq i32 %rem, 0, !dbg !779
  br i1 %cmp6, label %if.then, label %if.end, !dbg !780

SUSAN: BB:
if.then:                                          ; preds = %for.body3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !781
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !782
  br label %if.end, !dbg !782

SUSAN: BB:
if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !783

SUSAN: BB:
for.inc:                                          ; preds = %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
  call void @llvm.dbg.value(metadata i32 undef, metadata !762, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond1, !dbg !785, !llvm.loop !786

SUSAN: BB:
for.end:                                          ; preds = %for.cond1
  br label %for.inc8, !dbg !787

SUSAN: BB:
for.inc8:                                         ; preds = %for.end
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
  call void @llvm.dbg.value(metadata i32 undef, metadata !755, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond, !dbg !789, !llvm.loop !790

SUSAN: BB:
for.end10:                                        ; preds = %for.cond
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !792
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
  ret void, !dbg !794

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc8<latch>,%for.body3,%if.then,%if.end,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

SUSAN exitBB: 
for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !755, metadata !DIExpression()), !dbg !752
  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !759
  br i1 %cmp, label %for.body, label %for.end10, !dbg !761

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

SUSAN exitBB: 
for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !762, metadata !DIExpression()), !dbg !752
  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !766
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !768

SUSAN: entry block is a linear region! entry
CBERegion: including entry in a linear region
CBERegion: nextBB 
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !751, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nl, metadata !753, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %D, metadata !754, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 0, metadata !755, metadata !DIExpression()), !dbg !752
  %0 = sext i32 %nl to i64, !dbg !756
  %1 = sext i32 %ni to i64, !dbg !756
  %2 = sext i32 %ni to i64, !dbg !756
  %3 = sext i32 %ni to i64, !dbg !756
  br label %for.cond, !dbg !756

SUSAN: nextRegionEntryBB for.cond
CBackend: entryBB is a loop: for.cond
SUSAN: entry block is a loop region! for.cond
creating loop region for entryBB: for.cond
SUSAN: loop at 355 Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc8<latch>,%for.body3,%if.then,%if.end,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
term 6818:   br i1 %cmp, label %for.body, label %for.end10, !dbg !761
CBERegion: startBB 393: 
for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !762, metadata !DIExpression()), !dbg !752
  br label %for.cond1, !dbg !763

CBERegion: here? 149
CBackend: entryBB is a loop: for.body
but not a header!
SUSAN: entry block is a linear region! for.body
CBERegion: including for.body in a linear region
CBERegion: nextBB 
for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !762, metadata !DIExpression()), !dbg !752
  br label %for.cond1, !dbg !763

SUSAN: nextRegionEntryBB for.cond1
for region: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc8<latch>,%for.body3,%if.then,%if.end,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.cond1
SUSAN: entry block is a loop region! for.cond1
creating loop region for entryBB: for.cond1
SUSAN: loop at 355 Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
term 6818:   br i1 %cmp2, label %for.body3, label %for.end, !dbg !768
CBERegion: startBB 393: 
for.body3:                                        ; preds = %for.cond1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !769
  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !771
  %6 = add nsw i64 %5, %indvars.iv, !dbg !772
  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
  %7 = load double, double* %arrayidx, align 8, !dbg !773
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !775
  %9 = add nsw i64 %8, %indvars.iv, !dbg !777
  %10 = trunc i64 %9 to i32, !dbg !778
  %rem = srem i32 %10, 20, !dbg !778
  %cmp6 = icmp eq i32 %rem, 0, !dbg !779
  br i1 %cmp6, label %if.then, label %if.end, !dbg !780

CBERegion: here? 149
CBackend: entryBB is a loop: for.body3
but not a header!
SUSAN: entry block is an if-else region! for.body3
creating if-else region for entryBB: for.body3
0
0
SUSAN: marking both branches
CBackend: entryBB is a loop: if.then
but not a header!
SUSAN: entry block is a linear region! if.then
CBERegion: including if.then in a linear region
CBERegion: nextBB 
if.then:                                          ; preds = %for.body3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !781
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !782
  br label %if.end, !dbg !782

CBERegion: including if.end in a linear region
CBERegion: nextBB 
if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !783

SUSAN: currbb 562: for.inc
CBERegion: nextEntryBB 121: for.inc
=================SUSAN: END OF marking region : for.body3==================
SUSAN: nextRegionEntryBB for.inc
for region: Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

SUSAN: nextRegionEntryBB for.end
for region: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc8<latch>,%for.body3,%if.then,%if.end,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

CBERegion: here? 149
CBackend: entryBB is a loop: for.end
but not a header!
SUSAN: entry block is a linear region! for.end
CBERegion: including for.end in a linear region
CBERegion: nextBB 
for.end:                                          ; preds = %for.cond1
  br label %for.inc8, !dbg !787

SUSAN: nextRegionEntryBB for.inc8
for region: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc8<latch>,%for.body3,%if.then,%if.end,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

SUSAN: nextRegionEntryBB for.end10
SUSAN: entry block is a linear region! for.end10
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %ni, metadata !1093, metadata !DIExpression()), !dbg !1094
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nl, metadata !1095, metadata !DIExpression()), !dbg !1094
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %D, metadata !1096, metadata !DIExpression()), !dbg !1094
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !1097, metadata !DIExpression()), !dbg !1094
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !1097, metadata !DIExpression()), !dbg !1094
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !1104, metadata !DIExpression()), !dbg !1094
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1104, metadata !DIExpression()), !dbg !1094
SUSAN: CI at 1400:   %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
SUSAN: CI at 1400:   %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !782
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !1104, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !1097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
SUSAN: CI at 1400:   %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
========== IV MAP==========
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc8<latch>,%for.body3,%if.then,%if.end,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

SUSAN: found LP for L:Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

currInst :  %0 = sext i32 %nl to i64, !dbg !756
currInst :  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !766
currInst :  br i1 %cmp2, label %for.body3, label %for.end, !dbg !768
currInst :  %1 = sext i32 %ni to i64, !dbg !756
currInst :  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !759
currInst :  br i1 %cmp, label %for.body, label %for.end10, !dbg !761
currInst :  %2 = sext i32 %ni to i64, !dbg !756
currInst :  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !771
currInst :  %6 = add nsw i64 %5, %indvars.iv, !dbg !772
currInst :  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
currInst :  %7 = load double, double* %arrayidx, align 8, !dbg !773
currInst :  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
currInst :  %3 = sext i32 %ni to i64, !dbg !756
currInst :  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !775
currInst :  %9 = add nsw i64 %8, %indvars.iv, !dbg !777
currInst :  %10 = trunc i64 %9 to i32, !dbg !778
currInst :  %rem = srem i32 %10, 20, !dbg !778
currInst :  %cmp6 = icmp eq i32 %rem, 0, !dbg !779
currInst :  br i1 %cmp6, label %if.then, label %if.end, !dbg !780
currInst :  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !759
currInst :  br i1 %cmp, label %for.body, label %for.end10, !dbg !761
currInst :  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !766
currInst :  br i1 %cmp2, label %for.body3, label %for.end, !dbg !768
currInst :  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !769
currInst :  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
currInst :  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !771
currInst :  %6 = add nsw i64 %5, %indvars.iv, !dbg !772
currInst :  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: add () to inst:   %5 = mul nsw i64 %indvars.iv3, %2, !dbg !771
currInst :  %6 = add nsw i64 %5, %indvars.iv, !dbg !772
currInst :  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: add () to inst:   %6 = add nsw i64 %5, %indvars.iv, !dbg !772
currInst :  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
currInst :  %7 = load double, double* %arrayidx, align 8, !dbg !773
currInst :  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
currInst :  %7 = load double, double* %arrayidx, align 8, !dbg !773
currInst :  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
currInst :  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !775
currInst :  %9 = add nsw i64 %8, %indvars.iv, !dbg !777
currInst :  %10 = trunc i64 %9 to i32, !dbg !778
currInst :  %rem = srem i32 %10, 20, !dbg !778
currInst :  %cmp6 = icmp eq i32 %rem, 0, !dbg !779
currInst :  br i1 %cmp6, label %if.then, label %if.end, !dbg !780
currInst :  %9 = add nsw i64 %8, %indvars.iv, !dbg !777
currInst :  %10 = trunc i64 %9 to i32, !dbg !778
currInst :  %rem = srem i32 %10, 20, !dbg !778
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: add () to inst:   %9 = add nsw i64 %8, %indvars.iv, !dbg !777
currInst :  %10 = trunc i64 %9 to i32, !dbg !778
currInst :  %rem = srem i32 %10, 20, !dbg !778
currInst :  %cmp6 = icmp eq i32 %rem, 0, !dbg !779
currInst :  br i1 %cmp6, label %if.then, label %if.end, !dbg !780
currInst :  %rem = srem i32 %10, 20, !dbg !778
currInst :  %cmp6 = icmp eq i32 %rem, 0, !dbg !779
currInst :  br i1 %cmp6, label %if.then, label %if.end, !dbg !780
currInst :  %cmp6 = icmp eq i32 %rem, 0, !dbg !779
currInst :  br i1 %cmp6, label %if.then, label %if.end, !dbg !780
currInst :  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !781
currInst :  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !782
currInst :  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !792
currInst :  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
LP->LV 1694:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
LP->L 1694: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc8<latch>,%for.body3,%if.then,%if.end,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

nestlevel: i
LP->LV 1694:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
LP->L 1694: Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%if.then,%if.end,%for.inc<latch>

nestlevel: j
SUSAN: getting value name for: 
; Function Attrs: noinline uwtable
define internal void @_ZL11print_arrayiiPd(i32 %ni, i32 %nl, double* %D) #7 !dbg !1090 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1093, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1095, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata double* %D, metadata !1096, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata i32 0, metadata !1097, metadata !DIExpression()), !dbg !1094
  %0 = sext i32 %nl to i64, !dbg !1098
  %1 = sext i32 %ni to i64, !dbg !1098
  %2 = sext i32 %ni to i64, !dbg !1098
  %3 = sext i32 %ni to i64, !dbg !1098
  br label %for.cond, !dbg !1098

for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !1100
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !1097, metadata !DIExpression()), !dbg !1094
  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !1101
  br i1 %cmp, label %for.body, label %for.end10, !dbg !1103

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !1104, metadata !DIExpression()), !dbg !1094
  br label %for.cond1, !dbg !1105

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !1107
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1104, metadata !DIExpression()), !dbg !1094
  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !1108
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1110

for.body3:                                        ; preds = %for.cond1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1111
  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !1113
  %6 = add nsw i64 %5, %indvars.iv, !dbg !1114
  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !1115
  %7 = load double, double* %arrayidx, align 8, !dbg !1115
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !1116
  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !1117
  %9 = add nsw i64 %8, %indvars.iv, !dbg !1119
  %10 = trunc i64 %9 to i32, !dbg !1120
  %rem = srem i32 %10, 20, !dbg !1120
  %cmp6 = icmp eq i32 %rem, 0, !dbg !1121
  br i1 %cmp6, label %if.then, label %if.end, !dbg !1122

if.then:                                          ; preds = %for.body3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1123
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1124
  br label %if.end, !dbg !1124

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !1125

for.inc:                                          ; preds = %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1126
  call void @llvm.dbg.value(metadata i32 undef, metadata !1104, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
  br label %for.cond1, !dbg !1127, !llvm.loop !1128

for.end:                                          ; preds = %for.cond1
  br label %for.inc8, !dbg !1129

for.inc8:                                         ; preds = %for.end
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !1130
  call void @llvm.dbg.value(metadata i32 undef, metadata !1097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
  br label %for.cond, !dbg !1131, !llvm.loop !1132

for.end10:                                        ; preds = %for.cond
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1134
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1135
  ret void, !dbg !1136
}

SUSAN: found argument 6346: i32 %ni
CBackend: varname: ni
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1093, metadata !DIExpression()), !dbg !1094
SUSAN: found argument 6346: i32 %nl
CBackend: varname: nl
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1095, metadata !DIExpression()), !dbg !1094
SUSAN: found argument 6346: double* %D
CBackend: varname: D
  call void @llvm.dbg.value(metadata double* %D, metadata !1096, metadata !DIExpression()), !dbg !1094
SUSAN: getting value name for:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
inst from IRNaming:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
original name : i
returning name: i
SUSAN: phi related name: i
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
original name : j
returning name: j
SUSAN: phi related name: j
=========================SUSAN: IR NAMING BEFORE=====================
i32 %ni -> ni
i32 %nl -> nl
double* %D -> D
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758 -> i
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765 -> j
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784 -> j
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788 -> i
SUSAN: inst:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %ni, metadata !1093, metadata !DIExpression()), !dbg !1094
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nl, metadata !1095, metadata !DIExpression()), !dbg !1094
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %D, metadata !1096, metadata !DIExpression()), !dbg !1094
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !1097, metadata !DIExpression()), !dbg !1094
SUSAN: inst:  %0 = sext i32 %nl to i64, !dbg !756
SUSAN: inst:  %1 = sext i32 %ni to i64, !dbg !756
SUSAN: inst:  %2 = sext i32 %ni to i64, !dbg !756
SUSAN: inst:  %3 = sext i32 %ni to i64, !dbg !756
SUSAN: inst:  br label %for.cond, !dbg !756
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !1097, metadata !DIExpression()), !dbg !1094
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !759
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  br i1 %cmp, label %for.body, label %for.end10, !dbg !761
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !1104, metadata !DIExpression()), !dbg !1094
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  br label %for.cond1, !dbg !763
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1104, metadata !DIExpression()), !dbg !1094
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !766
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  br i1 %cmp2, label %for.body3, label %for.end, !dbg !768
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !769
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !771
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %6 = add nsw i64 %5, %indvars.iv, !dbg !772
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %7 = load double, double* %arrayidx, align 8, !dbg !773
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !775
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %9 = add nsw i64 %8, %indvars.iv, !dbg !777
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %10 = trunc i64 %9 to i32, !dbg !778
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %rem = srem i32 %10, 20, !dbg !778
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %cmp6 = icmp eq i32 %rem, 0, !dbg !779
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  br i1 %cmp6, label %if.then, label %if.end, !dbg !780
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !781
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !782
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  br label %if.end, !dbg !782
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  br label %for.inc, !dbg !783
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !1104, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
SUSAN: inst:  br label %for.cond1, !dbg !785, !llvm.loop !786
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
SUSAN: inst:  br label %for.inc8, !dbg !787
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
i:  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !1097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
i:  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  br label %for.cond, !dbg !789, !llvm.loop !790
i:  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !792
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: inst:  ret void, !dbg !794
i:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
=========================SUSAN: IR NAMING=====================
i32 %ni -> ni
i32 %nl -> nl
double* %D -> D
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758 -> i
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765 -> j
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784 -> j
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788 -> i
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
SUSAN: getting value name for:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
inst from IRNaming:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: declared locals:
SUSAN: declaring 3252:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: getting value name for:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
inst from IRNaming:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: inst at 5950:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: declaring   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: printing type at 5937: i64
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: declared locals:
i
SUSAN: declaring 3252:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: inst at 5950:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: declaring   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: printing type at 5937: i64
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
inst from IRNaming:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: getting value name for:   %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
SUSAN: declaring varName 5298: call11
SUSAN: declared locals:
i
j
SUSAN: declaring 3252:   %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
SUSAN: getting value name for:   %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
SUSAN: inst at 5950:   %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
SUSAN: declaring   %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793
SUSAN: printing type at 5937: i32
SUSAN: am I here 6807??
Linear Region with entry block: entry
SUSAN: printing bb:entry
CBEBackend: printing bb 7082 entry
printing unconditional branch   br label %for.cond, !dbg !756
Loop Region with entry block: for.cond
term 6818:   br i1 %cmp, label %for.body, label %for.end10, !dbg !761
SUSAN: condrelatedinst:  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: condrelatedinst:  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !759
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: declaring 3252:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: getting value name for:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
inst from IRNaming:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
inst from IRNaming:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
original name : i
returning name: i
SUSAN: visiting cast:   %1 = sext i32 %ni to i64, !dbg !756
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
SUSAN: getting value name for:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
inst from IRNaming:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
inst from IRNaming:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
original name : i
returning name: i
CBackend: writeOperand 3595:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: getting value name for:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
inst from IRNaming:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body
SUSAN: printing bb:for.body
CBEBackend: printing bb 7082 for.body
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
printing unconditional branch   br label %for.cond1, !dbg !763
Loop Region with entry block: for.cond1
term 6818:   br i1 %cmp2, label %for.body3, label %for.end, !dbg !768
SUSAN: condrelatedinst:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: condrelatedinst:  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !766
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: declaring 3252:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
original name : j
returning name: j
SUSAN: visiting cast:   %0 = sext i32 %nl to i64, !dbg !756
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
IfElse Region with entry block: for.body3
thenSubRegions : 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: declaring 3252:   %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
SUSAN: getting value name for:   %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: printing type name for call at 6805
SUSAN: getting value name for:   %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !774
CBackend: writeOperand 3595: 
declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #6

SUSAN: getting value name for: 
declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #6

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !769
CBackend: writeOperand 3595: i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975 @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
SUSAN: getting value name for: @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %7 = load double, double* %arrayidx, align 8, !dbg !773
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: loadInst:   %7 = load double, double* %arrayidx, align 8, !dbg !773
SUSAN: GEPINST:   %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !773
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %D
SUSAN: writing ptr 9994: double* %D
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
CBackend: writeOperand 3595:   %6 = add nsw i64 %5, %indvars.iv, !dbg !772
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeOperand 3595:   %5 = mul nsw i64 %indvars.iv3, %2, !dbg !771
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeOperand 3595:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: getting value name for:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
inst from IRNaming:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %2 = sext i32 %ni to i64, !dbg !756
SUSAN: visiting cast:   %2 = sext i32 %ni to i64, !dbg !756
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %cmp6 = icmp eq i32 %rem, 0, !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeOperand 3595:   %rem = srem i32 %10, 20, !dbg !778
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeOperand 3595:   %10 = trunc i64 %9 to i32, !dbg !778
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: visiting cast:   %10 = trunc i64 %9 to i32, !dbg !778
CBackend: writeOperand 3595:   %9 = add nsw i64 %8, %indvars.iv, !dbg !777
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeOperand 3595:   %8 = mul nsw i64 %indvars.iv3, %3, !dbg !775
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeOperand 3595:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: getting value name for:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
inst from IRNaming:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
original name : i
returning name: i
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %3 = sext i32 %ni to i64, !dbg !756
SUSAN: visiting cast:   %3 = sext i32 %ni to i64, !dbg !756
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 20
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 0
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBackend: writeoperand here 3674? 
Linear Region with entry block: if.then
SUSAN: printing bb:if.then
CBEBackend: printing bb 7082 if.then
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: printing instruction   %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !782 at 6678
CBackend: writeOperand 3595: 
declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #6

SUSAN: getting value name for: 
declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #6

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !781
CBackend: writeOperand 3595: i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975 @.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
SUSAN: getting value name for: @.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
CBackend: writeoperand here 3674? 
printing unconditional branch   br label %if.end, !dbg !782
SUSAN: printing bb:if.end
CBEBackend: printing bb 7082 if.end
printing unconditional branch   br label %for.inc, !dbg !783
CBERegion: printing latchBB for.inc
CBERegion: I 316:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !784
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !1104, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
CBERegion: I 316:   br label %for.cond1, !dbg !785, !llvm.loop !786
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !765
Linear Region with entry block: for.end
SUSAN: printing bb:for.end
CBEBackend: printing bb 7082 for.end
printing unconditional branch   br label %for.inc8, !dbg !787
CBERegion: printing latchBB for.inc8
CBERegion: I 316:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !788
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !1097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
CBERegion: I 316:   br label %for.cond, !dbg !789, !llvm.loop !790
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
SUSAN: found IV 784  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !758
Linear Region with entry block: for.end10
SUSAN: printing bb:for.end10
CBEBackend: printing bb 7082 for.end10
SUSAN: printing instruction   %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !793 at 6678
CBackend: writeOperand 3595: 
declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #6

SUSAN: getting value name for: 
declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #6

CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !792
CBackend: writeOperand 3595: i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)
SUSAN: first index is struct or array type
SUSAN: printing Ptr 9975 @.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
SUSAN: getting value name for: @.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
CBackend: writeoperand here 3674? 
CBackend: iterating function 1759: free
CBackend: iterating function 1759: fprintf
CBackend: iterating function 1759: llvm.memcpy.p0i8.p0i8.i64
CBackend: iterating function 1759: cudaConfigureCall
CBackend: iterating function 1759: cudaMalloc
CBackend: iterating function 1759: _Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1
CBackend: printing function 1770_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
term 6818:   br i1 %cmp9, label %for.body, label %for.end, !dbg !782
none omp loop ub:   %0 = sext i32 %nk to i64, !dbg !776
=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

isomp: 0
SUSAN: opnd0  %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: opnd1i32 %ni
SUSAN: LP->ub:   %0 = sext i32 %nk to i64, !dbg !776
SUSAN: upperbound:   %0 = sext i32 %nk to i64, !dbg !776
SUSAN: opnd0  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: opnd1i32 %nj
SUSAN: LP->ub:   %0 = sext i32 %nk to i64, !dbg !776
SUSAN: upperbound:   %0 = sext i32 %nk to i64, !dbg !776
SUSAN: opnd0  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: opnd1  %0 = sext i32 %nk to i64, !dbg !776
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: BB:
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !748, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nj, metadata !753, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nk, metadata !754, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nl, metadata !755, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double %alpha, metadata !756, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double %beta, metadata !757, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %tmp, metadata !758, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %A, metadata !759, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %B, metadata !760, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %C, metadata !761, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %D, metadata !762, metadata !DIExpression()), !dbg !752
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !763
  %add = add i32 %mul, %threadIdx.x, !dbg !764
  call void @llvm.dbg.value(metadata i32 %add, metadata !765, metadata !DIExpression()), !dbg !752
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !766
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
  call void @llvm.dbg.value(metadata i32 %add7, metadata !768, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !769, metadata !DIExpression()), !dbg !752
  %cmp = icmp slt i32 %add, %ni, !dbg !770
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !772

SUSAN: BB:
land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nj, !dbg !773
  br i1 %cmp8, label %if.then, label %if.end, !dbg !774

SUSAN: BB:
if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 0, metadata !775, metadata !DIExpression()), !dbg !752
  %0 = sext i32 %nk to i64, !dbg !776
  %1 = sext i32 %nj to i64, !dbg !776
  %2 = sext i32 %add7 to i64, !dbg !776
  br label %for.cond, !dbg !776

SUSAN: BB:
for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
  call void @llvm.dbg.value(metadata double %dot.0, metadata !769, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !775, metadata !DIExpression()), !dbg !752
  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !780
  br i1 %cmp9, label %for.body, label %for.end, !dbg !782

SUSAN: BB:
for.body:                                         ; preds = %for.cond
  %mul10 = mul nsw i32 %add, %nk, !dbg !783
  %3 = sext i32 %mul10 to i64, !dbg !784
  %4 = add nsw i64 %3, %indvars.iv, !dbg !784
  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
  %5 = load double, double* %arrayidx, align 8, !dbg !785
  %mul12 = fmul contract double %alpha, %5, !dbg !786
  %6 = mul nsw i64 %indvars.iv, %1, !dbg !787
  %7 = add nsw i64 %6, %2, !dbg !788
  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
  %8 = load double, double* %arrayidx16, align 8, !dbg !789
  %mul17 = fmul contract double %mul12, %8, !dbg !790
  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
  call void @llvm.dbg.value(metadata double %add18, metadata !769, metadata !DIExpression()), !dbg !752
  br label %for.inc, !dbg !792

SUSAN: BB:
for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
  call void @llvm.dbg.value(metadata i32 undef, metadata !775, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond, !dbg !794, !llvm.loop !795

SUSAN: BB:
for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !769, metadata !DIExpression()), !dbg !752
  %mul19 = mul nsw i32 %add, %nj, !dbg !797
  %add20 = add nsw i32 %mul19, %add7, !dbg !798
  %idxprom21 = sext i32 %add20 to i64, !dbg !799
  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !800
  br label %if.end, !dbg !801

SUSAN: BB:
if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !802

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

SUSAN exitBB: 
for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
  call void @llvm.dbg.value(metadata double %dot.0, metadata !769, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !775, metadata !DIExpression()), !dbg !752
  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !780
  br i1 %cmp9, label %for.body, label %for.end, !dbg !782

SUSAN: entry block is an if-else region! entry
creating if-else region for entryBB: entry
1
1
SUSAN: marking only true branch
SUSAN: entry block is an if-else region! land.lhs.true
creating if-else region for entryBB: land.lhs.true
1
1
SUSAN: marking only true branch
SUSAN: entry block is a linear region! if.then
CBERegion: including if.then in a linear region
CBERegion: nextBB 
if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 0, metadata !775, metadata !DIExpression()), !dbg !752
  %0 = sext i32 %nk to i64, !dbg !776
  %1 = sext i32 %nj to i64, !dbg !776
  %2 = sext i32 %add7 to i64, !dbg !776
  br label %for.cond, !dbg !776

SUSAN: currbb 562: for.cond
CBackend: entryBB is a loop: for.cond
SUSAN: entry block is a loop region! for.cond
creating loop region for entryBB: for.cond
SUSAN: loop at 355 Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
term 6818:   br i1 %cmp9, label %for.body, label %for.end, !dbg !782
CBERegion: startBB 393: 
for.body:                                         ; preds = %for.cond
  %mul10 = mul nsw i32 %add, %nk, !dbg !783
  %3 = sext i32 %mul10 to i64, !dbg !784
  %4 = add nsw i64 %3, %indvars.iv, !dbg !784
  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
  %5 = load double, double* %arrayidx, align 8, !dbg !785
  %mul12 = fmul contract double %alpha, %5, !dbg !786
  %6 = mul nsw i64 %indvars.iv, %1, !dbg !787
  %7 = add nsw i64 %6, %2, !dbg !788
  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
  %8 = load double, double* %arrayidx16, align 8, !dbg !789
  %mul17 = fmul contract double %mul12, %8, !dbg !790
  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
  call void @llvm.dbg.value(metadata double %add18, metadata !769, metadata !DIExpression()), !dbg !752
  br label %for.inc, !dbg !792

CBERegion: here? 149
CBackend: entryBB is a loop: for.body
but not a header!
SUSAN: entry block is a linear region! for.body
CBERegion: including for.body in a linear region
CBERegion: nextBB 
for.body:                                         ; preds = %for.cond
  %mul10 = mul nsw i32 %add, %nk, !dbg !783
  %3 = sext i32 %mul10 to i64, !dbg !784
  %4 = add nsw i64 %3, %indvars.iv, !dbg !784
  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
  %5 = load double, double* %arrayidx, align 8, !dbg !785
  %mul12 = fmul contract double %alpha, %5, !dbg !786
  %6 = mul nsw i64 %indvars.iv, %1, !dbg !787
  %7 = add nsw i64 %6, %2, !dbg !788
  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
  %8 = load double, double* %arrayidx16, align 8, !dbg !789
  %mul17 = fmul contract double %mul12, %8, !dbg !790
  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
  call void @llvm.dbg.value(metadata double %add18, metadata !769, metadata !DIExpression()), !dbg !752
  br label %for.inc, !dbg !792

SUSAN: nextRegionEntryBB for.inc
for region: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

SUSAN: currbb 562: for.end
SUSAN: entry block is a linear region! for.end
CBERegion: including for.end in a linear region
CBERegion: nextBB 
for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !769, metadata !DIExpression()), !dbg !752
  %mul19 = mul nsw i32 %add, %nj, !dbg !797
  %add20 = add nsw i32 %mul19, %add7, !dbg !798
  %idxprom21 = sext i32 %add20 to i64, !dbg !799
  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !800
  br label %if.end, !dbg !801

SUSAN: currbb 562: if.end
=================SUSAN: END OF marking region : land.lhs.true==================
SUSAN: currbb 562: if.end
=================SUSAN: END OF marking region : entry==================
SUSAN: nextRegionEntryBB if.end
SUSAN: entry block is a linear region! if.end
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %ni, metadata !1137, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nj, metadata !1140, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nk, metadata !1141, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nl, metadata !1142, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %alpha, metadata !1143, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %beta, metadata !1144, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %tmp, metadata !1145, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %A, metadata !1146, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %B, metadata !1147, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %C, metadata !1148, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %D, metadata !1149, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %add, metadata !1152, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %add7, metadata !1155, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1156, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !1162, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %dot.0, metadata !1156, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1162, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %add18, metadata !1156, metadata !DIExpression()), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !1162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1139
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1156, metadata !DIExpression()), !dbg !1139
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
========== IV MAP==========
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

currInst :  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !763
currInst :  %add = add i32 %mul, %threadIdx.x, !dbg !764
currInst :  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !766
currInst :  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
currInst :  %cmp = icmp slt i32 %add, %ni, !dbg !770
currInst :  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !772
currInst :  %cmp8 = icmp slt i32 %add7, %nj, !dbg !773
currInst :  br i1 %cmp8, label %if.then, label %if.end, !dbg !774
currInst :  %0 = sext i32 %nk to i64, !dbg !776
currInst :  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !780
currInst :  br i1 %cmp9, label %for.body, label %for.end, !dbg !782
currInst :  %1 = sext i32 %nj to i64, !dbg !776
currInst :  %6 = mul nsw i64 %indvars.iv, %1, !dbg !787
currInst :  %7 = add nsw i64 %6, %2, !dbg !788
currInst :  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
currInst :  %8 = load double, double* %arrayidx16, align 8, !dbg !789
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %2 = sext i32 %add7 to i64, !dbg !776
currInst :  %7 = add nsw i64 %6, %2, !dbg !788
currInst :  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
currInst :  %8 = load double, double* %arrayidx16, align 8, !dbg !789
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !780
currInst :  br i1 %cmp9, label %for.body, label %for.end, !dbg !782
currInst :  %mul10 = mul nsw i32 %add, %nk, !dbg !783
currInst :  %3 = sext i32 %mul10 to i64, !dbg !784
currInst :  %4 = add nsw i64 %3, %indvars.iv, !dbg !784
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: add () to inst:   %mul10 = mul nsw i32 %add, %nk, !dbg !783
currInst :  %3 = sext i32 %mul10 to i64, !dbg !784
currInst :  %4 = add nsw i64 %3, %indvars.iv, !dbg !784
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
currInst :  %5 = load double, double* %arrayidx, align 8, !dbg !785
currInst :  %mul12 = fmul contract double %alpha, %5, !dbg !786
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %4 = add nsw i64 %3, %indvars.iv, !dbg !784
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: add () to inst:   %4 = add nsw i64 %3, %indvars.iv, !dbg !784
currInst :  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
currInst :  %5 = load double, double* %arrayidx, align 8, !dbg !785
currInst :  %mul12 = fmul contract double %alpha, %5, !dbg !786
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %5 = load double, double* %arrayidx, align 8, !dbg !785
currInst :  %mul12 = fmul contract double %alpha, %5, !dbg !786
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %mul12 = fmul contract double %alpha, %5, !dbg !786
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %6 = mul nsw i64 %indvars.iv, %1, !dbg !787
currInst :  %7 = add nsw i64 %6, %2, !dbg !788
currInst :  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: add () to inst:   %6 = mul nsw i64 %indvars.iv, %1, !dbg !787
currInst :  %7 = add nsw i64 %6, %2, !dbg !788
currInst :  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: add () to inst:   %7 = add nsw i64 %6, %2, !dbg !788
currInst :  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
currInst :  %8 = load double, double* %arrayidx16, align 8, !dbg !789
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %8 = load double, double* %arrayidx16, align 8, !dbg !789
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %mul17 = fmul contract double %mul12, %8, !dbg !790
currInst :  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
currInst :  %mul19 = mul nsw i32 %add, %nj, !dbg !797
currInst :  %add20 = add nsw i32 %mul19, %add7, !dbg !798
currInst :  %idxprom21 = sext i32 %add20 to i64, !dbg !799
currInst :  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
SUSAN: add () to inst:   %mul19 = mul nsw i32 %add, %nj, !dbg !797
currInst :  %add20 = add nsw i32 %mul19, %add7, !dbg !798
currInst :  %idxprom21 = sext i32 %add20 to i64, !dbg !799
currInst :  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
SUSAN: add () to inst:   %add20 = add nsw i32 %mul19, %add7, !dbg !798
currInst :  %idxprom21 = sext i32 %add20 to i64, !dbg !799
currInst :  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
currInst :  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !800
currInst :  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
currInst :  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !800
LP->LV 1694:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
LP->L 1694: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

nestlevel: i
SUSAN: getting value name for: 
; Function Attrs: convergent noinline nounwind
define dso_local void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %gridDim.x, i32 %gridDim.y, i32 %gridDim.z, i32 %blockDim.x, i32 %blockDim.y, i32 %blockDim.z, i32 %blockIdx.x, i32 %blockIdx.y, i32 %blockIdx.z, i32 %threadIdx.x, i32 %threadIdx.y, i32 %threadIdx.z) #9 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1137, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1140, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1141, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1142, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double %alpha, metadata !1143, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double %beta, metadata !1144, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1145, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %A, metadata !1146, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %B, metadata !1147, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %C, metadata !1148, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %D, metadata !1149, metadata !DIExpression()), !dbg !1139
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !1150
  %add = add i32 %mul, %threadIdx.x, !dbg !1151
  call void @llvm.dbg.value(metadata i32 %add, metadata !1152, metadata !DIExpression()), !dbg !1139
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !1153
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !1154
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1155, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1156, metadata !DIExpression()), !dbg !1139
  %cmp = icmp slt i32 %add, %ni, !dbg !1157
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1159

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nj, !dbg !1160
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1161

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 0, metadata !1162, metadata !DIExpression()), !dbg !1139
  %0 = sext i32 %nk to i64, !dbg !1163
  %1 = sext i32 %nj to i64, !dbg !1163
  %2 = sext i32 %add7 to i64, !dbg !1163
  br label %for.cond, !dbg !1163

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !1166
  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !1139
  call void @llvm.dbg.value(metadata double %dot.0, metadata !1156, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1162, metadata !DIExpression()), !dbg !1139
  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !1167
  br i1 %cmp9, label %for.body, label %for.end, !dbg !1169

for.body:                                         ; preds = %for.cond
  %mul10 = mul nsw i32 %add, %nk, !dbg !1170
  %3 = sext i32 %mul10 to i64, !dbg !1171
  %4 = add nsw i64 %3, %indvars.iv, !dbg !1171
  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !1172
  %5 = load double, double* %arrayidx, align 8, !dbg !1172
  %mul12 = fmul contract double %alpha, %5, !dbg !1173
  %6 = mul nsw i64 %indvars.iv, %1, !dbg !1174
  %7 = add nsw i64 %6, %2, !dbg !1175
  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !1176
  %8 = load double, double* %arrayidx16, align 8, !dbg !1176
  %mul17 = fmul contract double %mul12, %8, !dbg !1177
  %add18 = fadd contract double %dot.0, %mul17, !dbg !1178
  call void @llvm.dbg.value(metadata double %add18, metadata !1156, metadata !DIExpression()), !dbg !1139
  br label %for.inc, !dbg !1179

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1180
  call void @llvm.dbg.value(metadata i32 undef, metadata !1162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1139
  br label %for.cond, !dbg !1181, !llvm.loop !1182

for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !1139
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1156, metadata !DIExpression()), !dbg !1139
  %mul19 = mul nsw i32 %add, %nj, !dbg !1184
  %add20 = add nsw i32 %mul19, %add7, !dbg !1185
  %idxprom21 = sext i32 %add20 to i64, !dbg !1186
  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !1186
  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !1187
  br label %if.end, !dbg !1188

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !1189
}

SUSAN: found argument 6346: i32 %ni
CBackend: varname: ni
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1137, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: i32 %nj
CBackend: varname: nj
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1140, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: i32 %nk
CBackend: varname: nk
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1141, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: i32 %nl
CBackend: varname: nl
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1142, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: double %alpha
CBackend: varname: alpha
  call void @llvm.dbg.value(metadata double %alpha, metadata !1143, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: double %beta
CBackend: varname: beta
  call void @llvm.dbg.value(metadata double %beta, metadata !1144, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: double* %tmp
CBackend: varname: tmp
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1145, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: double* %A
CBackend: varname: A
  call void @llvm.dbg.value(metadata double* %A, metadata !1146, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: double* %B
CBackend: varname: B
  call void @llvm.dbg.value(metadata double* %B, metadata !1147, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: double* %C
CBackend: varname: C
  call void @llvm.dbg.value(metadata double* %C, metadata !1148, metadata !DIExpression()), !dbg !1139
SUSAN: found argument 6346: double* %D
CBackend: varname: D
  call void @llvm.dbg.value(metadata double* %D, metadata !1149, metadata !DIExpression()), !dbg !1139
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
original name : k
returning name: k
SUSAN: phi related name: k
SUSAN: getting value name for:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
inst from IRNaming:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
original name : dot
returning name: dot
SUSAN: phi related name: dot
SUSAN: getting value name for:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
inst from IRNaming:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
original name : dot
returning name: dot
SUSAN: phi related name: dot
=========================SUSAN: IR NAMING BEFORE=====================
i32 %ni -> ni
i32 %nj -> nj
i32 %nk -> nk
i32 %nl -> nl
double %alpha -> alpha
double %beta -> beta
double* %tmp -> tmp
double* %A -> A
double* %B -> B
double* %C -> C
double* %D -> D
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779 -> k
  %add = add i32 %mul, %threadIdx.x, !dbg !764 -> i
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767 -> j
  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752 -> dot
  %add18 = fadd contract double %dot.0, %mul17, !dbg !791 -> dot
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793 -> k
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752 -> dot
SUSAN: inst:  %0 = sext i32 %nk to i64, !dbg !776
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
dot:  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %ni, metadata !1137, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nj, metadata !1140, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nk, metadata !1141, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nl, metadata !1142, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata double %alpha, metadata !1143, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata double %beta, metadata !1144, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %tmp, metadata !1145, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %A, metadata !1146, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %B, metadata !1147, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %C, metadata !1148, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %D, metadata !1149, metadata !DIExpression()), !dbg !1139
SUSAN: inst:  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !763
SUSAN: inst:  %add = add i32 %mul, %threadIdx.x, !dbg !764
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %add, metadata !1152, metadata !DIExpression()), !dbg !1139
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: inst:  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !766
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: inst:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %add7, metadata !1155, metadata !DIExpression()), !dbg !1139
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1156, metadata !DIExpression()), !dbg !1139
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %cmp = icmp slt i32 %add, %ni, !dbg !770
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !772
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %cmp8 = icmp slt i32 %add7, %nj, !dbg !773
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br i1 %cmp8, label %if.then, label %if.end, !dbg !774
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !1162, metadata !DIExpression()), !dbg !1139
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %1 = sext i32 %nj to i64, !dbg !776
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %2 = sext i32 %add7 to i64, !dbg !776
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br label %for.cond, !dbg !776
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  call void @llvm.dbg.value(metadata double %dot.0, metadata !1156, metadata !DIExpression()), !dbg !1139
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1162, metadata !DIExpression()), !dbg !1139
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !780
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  br i1 %cmp9, label %for.body, label %for.end, !dbg !782
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %mul10 = mul nsw i32 %add, %nk, !dbg !783
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %3 = sext i32 %mul10 to i64, !dbg !784
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %4 = add nsw i64 %3, %indvars.iv, !dbg !784
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %5 = load double, double* %arrayidx, align 8, !dbg !785
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %mul12 = fmul contract double %alpha, %5, !dbg !786
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %6 = mul nsw i64 %indvars.iv, %1, !dbg !787
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %7 = add nsw i64 %6, %2, !dbg !788
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %8 = load double, double* %arrayidx16, align 8, !dbg !789
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %mul17 = fmul contract double %mul12, %8, !dbg !790
dot:  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
dot:  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  call void @llvm.dbg.value(metadata double %add18, metadata !1156, metadata !DIExpression()), !dbg !1139
dot:  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  br label %for.inc, !dbg !792
dot:  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
dot:  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !1162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1139
dot:  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
SUSAN: inst:  br label %for.cond, !dbg !794, !llvm.loop !795
dot:  %add18 = fadd contract double %dot.0, %mul17, !dbg !791
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
SUSAN: inst:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1156, metadata !DIExpression()), !dbg !1139
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %mul19 = mul nsw i32 %add, %nj, !dbg !797
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %add20 = add nsw i32 %mul19, %add7, !dbg !798
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %idxprom21 = sext i32 %add20 to i64, !dbg !799
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !800
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  br label %if.end, !dbg !801
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: inst:  ret void, !dbg !802
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
k:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
=========================SUSAN: IR NAMING=====================
i32 %ni -> ni
i32 %nj -> nj
i32 %nk -> nk
i32 %nl -> nl
double %alpha -> alpha
double %beta -> beta
double* %tmp -> tmp
double* %A -> A
double* %B -> B
double* %C -> C
double* %D -> D
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779 -> k
  %add = add i32 %mul, %threadIdx.x, !dbg !764 -> i
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767 -> j
  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752 -> dot
  %add18 = fadd contract double %dot.0, %mul17, !dbg !791 -> dot
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793 -> k
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752 -> dot
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
SUSAN: getting value name for: double %alpha
inst from IRNaming: double %alpha
original name : alpha
returning name: alpha
SUSAN: getting value name for: double %beta
inst from IRNaming: double %beta
original name : beta
returning name: beta
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
SUSAN: getting value name for: double* %C
inst from IRNaming: double* %C
original name : C
returning name: C
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
SUSAN: getting value name for: i32 %gridDim.x
SUSAN: getting value name for: i32 %gridDim.y
SUSAN: getting value name for: i32 %gridDim.z
SUSAN: getting value name for: i32 %blockDim.x
SUSAN: getting value name for: i32 %blockDim.y
SUSAN: getting value name for: i32 %blockDim.z
SUSAN: getting value name for: i32 %blockIdx.x
SUSAN: getting value name for: i32 %blockIdx.y
SUSAN: getting value name for: i32 %blockIdx.z
SUSAN: getting value name for: i32 %threadIdx.x
SUSAN: getting value name for: i32 %threadIdx.y
SUSAN: getting value name for: i32 %threadIdx.z
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: declared locals:
SUSAN: declaring 3252:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: inst at 5950:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: declaring   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: printing type at 5937: i32
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: declared locals:
i
SUSAN: declaring 3252:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: inst at 5950:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: declaring   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: printing type at 5937: i32
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
original name : k
returning name: k
SUSAN: declaring varName 5298: k
SUSAN: declared locals:
i
j
SUSAN: declaring 3252:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
original name : k
returning name: k
SUSAN: declaring with reconstructed name 3286: k
SUSAN: inst at 5950:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: declaring   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: printing type at 5937: i64
SUSAN: getting value name for:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
inst from IRNaming:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
original name : dot
returning name: dot
SUSAN: declaring varName 5298: dot
SUSAN: declared locals:
i
j
k
SUSAN: declaring 3252:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
SUSAN: getting value name for:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
inst from IRNaming:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
original name : dot
returning name: dot
SUSAN: declaring with reconstructed name 3286: dot
SUSAN: inst at 5950:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
SUSAN: declaring   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
SUSAN: printing type at 5937: double
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
original name : k
returning name: k
SUSAN: declaring varName 5298: k
SUSAN: getting value name for:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
inst from IRNaming:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
original name : dot
returning name: dot
SUSAN: declaring varName 5298: dot
SUSAN: am I here 6807??
IfElse Region with entry block: entry
thenSubRegions : 
SUSAN: declaring 3252:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeOperand 3595:   %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !763
CBackend: writeOperand 3595: i32 %blockDim.x
SUSAN: getting value name for: i32 %blockDim.x
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %blockIdx.x
SUSAN: getting value name for: i32 %blockIdx.x
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %threadIdx.x
SUSAN: getting value name for: i32 %threadIdx.x
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : j
returning name: j
CBackend: writeOperand 3595:   %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !766
CBackend: writeOperand 3595: i32 %blockDim.y
SUSAN: getting value name for: i32 %blockDim.y
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %blockIdx.y
SUSAN: getting value name for: i32 %blockIdx.y
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %threadIdx.y
SUSAN: getting value name for: i32 %threadIdx.y
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %cmp = icmp slt i32 %add, %ni, !dbg !770
CBackend: writeOperand 3595:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
IfElse Region with entry block: land.lhs.true
thenSubRegions : 
CBackend: writeOperand 3595:   %cmp8 = icmp slt i32 %add7, %nj, !dbg !773
CBackend: writeOperand 3595:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : j
returning name: j
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
Linear Region with entry block: if.then
SUSAN: printing bb:if.then
CBEBackend: printing bb 7082 if.then
SUSAN: getting value name for:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
inst from IRNaming:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
original name : dot
returning name: dot
SUSAN: getting value name for:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
inst from IRNaming:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
original name : dot
returning name: dot
printing unconditional branch   br label %for.cond, !dbg !776
Loop Region with entry block: for.cond
term 6818:   br i1 %cmp9, label %for.body, label %for.end, !dbg !782
SUSAN: condrelatedinst:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: condrelatedinst:  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !780
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: declaring 3252:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
original name : k
returning name: k
SUSAN: declaring with reconstructed name 3286: k
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
original name : k
returning name: k
SUSAN: visiting cast:   %0 = sext i32 %nk to i64, !dbg !776
CBackend: writeOperand 3595: i32 %nk
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
original name : k
returning name: k
SUSAN: declaring with reconstructed name 3286: k
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
original name : k
returning name: k
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
original name : k
returning name: k
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body
SUSAN: printing bb:for.body
CBEBackend: printing bb 7082 for.body
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: printing instruction   %add18 = fadd contract double %dot.0, %mul17, !dbg !791 at 6678
SUSAN: getting value name for:   %add18 = fadd contract double %dot.0, %mul17, !dbg !791
inst from IRNaming:   %add18 = fadd contract double %dot.0, %mul17, !dbg !791
original name : dot
returning name: dot
CBackend: writeOperand 3595:   %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !752
CBackend: writeOperand 3595:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
SUSAN: getting value name for:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
inst from IRNaming:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
original name : dot
returning name: dot
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %mul17 = fmul contract double %mul12, %8, !dbg !790
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeOperand 3595:   %mul12 = fmul contract double %alpha, %5, !dbg !786
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeOperand 3595: double %alpha
SUSAN: getting value name for: double %alpha
inst from IRNaming: double %alpha
original name : alpha
returning name: alpha
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %5 = load double, double* %arrayidx, align 8, !dbg !785
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: loadInst:   %5 = load double, double* %arrayidx, align 8, !dbg !785
SUSAN: GEPINST:   %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !785
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %A
SUSAN: writing ptr 9994: double* %A
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
CBackend: writeOperand 3595:   %4 = add nsw i64 %3, %indvars.iv, !dbg !784
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeOperand 3595:   %3 = sext i32 %mul10 to i64, !dbg !784
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: visiting cast:   %3 = sext i32 %mul10 to i64, !dbg !784
CBackend: writeOperand 3595:   %mul10 = mul nsw i32 %add, %nk, !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeOperand 3595:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nk
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
original name : k
returning name: k
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %8 = load double, double* %arrayidx16, align 8, !dbg !789
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: loadInst:   %8 = load double, double* %arrayidx16, align 8, !dbg !789
SUSAN: GEPINST:   %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !789
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %B
SUSAN: writing ptr 9994: double* %B
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
CBackend: writeOperand 3595:   %7 = add nsw i64 %6, %2, !dbg !788
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeOperand 3595:   %6 = mul nsw i64 %indvars.iv, %1, !dbg !787
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
original name : k
returning name: k
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %1 = sext i32 %nj to i64, !dbg !776
SUSAN: visiting cast:   %1 = sext i32 %nj to i64, !dbg !776
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %2 = sext i32 %add7 to i64, !dbg !776
SUSAN: visiting cast:   %2 = sext i32 %add7 to i64, !dbg !776
CBackend: writeOperand 3595:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : j
returning name: j
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
printing unconditional branch   br label %for.inc, !dbg !792
CBERegion: printing latchBB for.inc
CBERegion: I 316:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !793
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !1162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1139
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
CBERegion: I 316:   br label %for.cond, !dbg !794, !llvm.loop !795
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !779
Linear Region with entry block: for.end
SUSAN: printing bb:for.end
CBEBackend: printing bb 7082 for.end
SUSAN: printing instruction   store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !800 at 6678
CBEBackend: printing store Inst:   store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !800
CBackend: here? 10442
SUSAN: GEPINST:   %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !799
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %tmp
SUSAN: writing ptr 9994: double* %tmp
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
CBackend: writeOperand 3595:   %idxprom21 = sext i32 %add20 to i64, !dbg !799
SUSAN: visiting cast:   %idxprom21 = sext i32 %add20 to i64, !dbg !799
CBackend: writeOperand 3595:   %add20 = add nsw i32 %mul19, %add7, !dbg !798
CBackend: writeOperand 3595:   %mul19 = mul nsw i32 %add, %nj, !dbg !797
CBackend: writeOperand 3595:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : j
returning name: j
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: here? 10445
CBackend: writeOperand 3595:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
SUSAN: getting value name for:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
inst from IRNaming:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !752
original name : dot
returning name: dot
CBackend: writeoperand here 3674? 
CBackend: here? 10462
printing unconditional branch   br label %if.end, !dbg !801
Linear Region with entry block: if.end
SUSAN: printing bb:if.end
CBEBackend: printing bb 7082 if.end
CBackend: iterating function 1759: _Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2
CBackend: printing function 1770_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2
CBackend: here? 1175
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
term 6818:   br i1 %cmp12, label %for.body, label %for.end, !dbg !787
none omp loop ub:   %1 = sext i32 %nj to i64, !dbg !781
=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

isomp: 0
SUSAN: opnd0  %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: opnd1i32 %ni
SUSAN: LP->ub:   %1 = sext i32 %nj to i64, !dbg !781
SUSAN: upperbound:   %1 = sext i32 %nj to i64, !dbg !781
SUSAN: opnd0  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: opnd1i32 %nl
SUSAN: LP->ub:   %1 = sext i32 %nj to i64, !dbg !781
SUSAN: upperbound:   %1 = sext i32 %nj to i64, !dbg !781
SUSAN: opnd0  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: opnd1  %1 = sext i32 %nj to i64, !dbg !781
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: BB:
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !748, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nj, metadata !753, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nk, metadata !754, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 %nl, metadata !755, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double %alpha, metadata !756, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double %beta, metadata !757, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %tmp, metadata !758, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %A, metadata !759, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %B, metadata !760, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %C, metadata !761, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double* %D, metadata !762, metadata !DIExpression()), !dbg !752
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !763
  %add = add i32 %mul, %threadIdx.x, !dbg !764
  call void @llvm.dbg.value(metadata i32 %add, metadata !765, metadata !DIExpression()), !dbg !752
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !766
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
  call void @llvm.dbg.value(metadata i32 %add7, metadata !768, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !769, metadata !DIExpression()), !dbg !752
  %cmp = icmp slt i32 %add, %ni, !dbg !770
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !772

SUSAN: BB:
land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nl, !dbg !773
  br i1 %cmp8, label %if.then, label %if.end, !dbg !774

SUSAN: BB:
if.then:                                          ; preds = %land.lhs.true
  %mul9 = mul nsw i32 %add, %nj, !dbg !775
  %add10 = add nsw i32 %mul9, %add7, !dbg !777
  %idxprom = sext i32 %add10 to i64, !dbg !778
  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
  %0 = load double, double* %arrayidx, align 8, !dbg !778
  %mul11 = fmul contract double %0, %beta, !dbg !779
  call void @llvm.dbg.value(metadata double %mul11, metadata !769, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 0, metadata !780, metadata !DIExpression()), !dbg !752
  %1 = sext i32 %nj to i64, !dbg !781
  %2 = sext i32 %nl to i64, !dbg !781
  %3 = sext i32 %add7 to i64, !dbg !781
  br label %for.cond, !dbg !781

SUSAN: BB:
for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
  call void @llvm.dbg.value(metadata double %dot.0, metadata !769, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !780, metadata !DIExpression()), !dbg !752
  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !785
  br i1 %cmp12, label %for.body, label %for.end, !dbg !787

SUSAN: BB:
for.body:                                         ; preds = %for.cond
  %mul13 = mul nsw i32 %add, %nj, !dbg !788
  %4 = sext i32 %mul13 to i64, !dbg !789
  %5 = add nsw i64 %4, %indvars.iv, !dbg !789
  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
  %6 = load double, double* %arrayidx16, align 8, !dbg !790
  %7 = mul nsw i64 %indvars.iv, %2, !dbg !791
  %8 = add nsw i64 %7, %3, !dbg !792
  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
  %9 = load double, double* %arrayidx20, align 8, !dbg !793
  %mul21 = fmul contract double %6, %9, !dbg !794
  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
  call void @llvm.dbg.value(metadata double %add22, metadata !769, metadata !DIExpression()), !dbg !752
  br label %for.inc, !dbg !796

SUSAN: BB:
for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
  call void @llvm.dbg.value(metadata i32 undef, metadata !780, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !752
  br label %for.cond, !dbg !798, !llvm.loop !799

SUSAN: BB:
for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !769, metadata !DIExpression()), !dbg !752
  %mul23 = mul nsw i32 %add, %nl, !dbg !801
  %add24 = add nsw i32 %mul23, %add7, !dbg !802
  %idxprom25 = sext i32 %add24 to i64, !dbg !803
  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !804
  br label %if.end, !dbg !805

SUSAN: BB:
if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !806

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

SUSAN exitBB: 
for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
  call void @llvm.dbg.value(metadata double %dot.0, metadata !769, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !780, metadata !DIExpression()), !dbg !752
  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !785
  br i1 %cmp12, label %for.body, label %for.end, !dbg !787

SUSAN: entry block is an if-else region! entry
creating if-else region for entryBB: entry
1
1
SUSAN: marking only true branch
SUSAN: entry block is an if-else region! land.lhs.true
creating if-else region for entryBB: land.lhs.true
1
1
SUSAN: marking only true branch
SUSAN: entry block is a linear region! if.then
CBERegion: including if.then in a linear region
CBERegion: nextBB 
if.then:                                          ; preds = %land.lhs.true
  %mul9 = mul nsw i32 %add, %nj, !dbg !775
  %add10 = add nsw i32 %mul9, %add7, !dbg !777
  %idxprom = sext i32 %add10 to i64, !dbg !778
  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
  %0 = load double, double* %arrayidx, align 8, !dbg !778
  %mul11 = fmul contract double %0, %beta, !dbg !779
  call void @llvm.dbg.value(metadata double %mul11, metadata !769, metadata !DIExpression()), !dbg !752
  call void @llvm.dbg.value(metadata i32 0, metadata !780, metadata !DIExpression()), !dbg !752
  %1 = sext i32 %nj to i64, !dbg !781
  %2 = sext i32 %nl to i64, !dbg !781
  %3 = sext i32 %add7 to i64, !dbg !781
  br label %for.cond, !dbg !781

SUSAN: currbb 562: for.cond
CBackend: entryBB is a loop: for.cond
SUSAN: entry block is a loop region! for.cond
creating loop region for entryBB: for.cond
SUSAN: loop at 355 Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
term 6818:   br i1 %cmp12, label %for.body, label %for.end, !dbg !787
CBERegion: startBB 393: 
for.body:                                         ; preds = %for.cond
  %mul13 = mul nsw i32 %add, %nj, !dbg !788
  %4 = sext i32 %mul13 to i64, !dbg !789
  %5 = add nsw i64 %4, %indvars.iv, !dbg !789
  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
  %6 = load double, double* %arrayidx16, align 8, !dbg !790
  %7 = mul nsw i64 %indvars.iv, %2, !dbg !791
  %8 = add nsw i64 %7, %3, !dbg !792
  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
  %9 = load double, double* %arrayidx20, align 8, !dbg !793
  %mul21 = fmul contract double %6, %9, !dbg !794
  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
  call void @llvm.dbg.value(metadata double %add22, metadata !769, metadata !DIExpression()), !dbg !752
  br label %for.inc, !dbg !796

CBERegion: here? 149
CBackend: entryBB is a loop: for.body
but not a header!
SUSAN: entry block is a linear region! for.body
CBERegion: including for.body in a linear region
CBERegion: nextBB 
for.body:                                         ; preds = %for.cond
  %mul13 = mul nsw i32 %add, %nj, !dbg !788
  %4 = sext i32 %mul13 to i64, !dbg !789
  %5 = add nsw i64 %4, %indvars.iv, !dbg !789
  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
  %6 = load double, double* %arrayidx16, align 8, !dbg !790
  %7 = mul nsw i64 %indvars.iv, %2, !dbg !791
  %8 = add nsw i64 %7, %3, !dbg !792
  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
  %9 = load double, double* %arrayidx20, align 8, !dbg !793
  %mul21 = fmul contract double %6, %9, !dbg !794
  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
  call void @llvm.dbg.value(metadata double %add22, metadata !769, metadata !DIExpression()), !dbg !752
  br label %for.inc, !dbg !796

SUSAN: nextRegionEntryBB for.inc
for region: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

SUSAN: currbb 562: for.end
SUSAN: entry block is a linear region! for.end
CBERegion: including for.end in a linear region
CBERegion: nextBB 
for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !769, metadata !DIExpression()), !dbg !752
  %mul23 = mul nsw i32 %add, %nl, !dbg !801
  %add24 = add nsw i32 %mul23, %add7, !dbg !802
  %idxprom25 = sext i32 %add24 to i64, !dbg !803
  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !804
  br label %if.end, !dbg !805

SUSAN: currbb 562: if.end
=================SUSAN: END OF marking region : land.lhs.true==================
SUSAN: currbb 562: if.end
=================SUSAN: END OF marking region : entry==================
SUSAN: nextRegionEntryBB if.end
SUSAN: entry block is a linear region! if.end
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %ni, metadata !1190, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nj, metadata !1193, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nk, metadata !1194, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %nl, metadata !1195, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %alpha, metadata !1196, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %beta, metadata !1197, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %tmp, metadata !1198, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %A, metadata !1199, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %B, metadata !1200, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %C, metadata !1201, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double* %D, metadata !1202, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %add, metadata !1205, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 %add7, metadata !1208, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1209, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %mul11, metadata !1209, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 0, metadata !1220, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %dot.0, metadata !1209, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1220, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %add22, metadata !1209, metadata !DIExpression()), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata i32 undef, metadata !1220, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1192
SUSAN: CI at 1400:   call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1209, metadata !DIExpression()), !dbg !1192
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
========== IV MAP==========
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

currInst :  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !763
currInst :  %add = add i32 %mul, %threadIdx.x, !dbg !764
currInst :  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !766
currInst :  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
currInst :  %cmp = icmp slt i32 %add, %ni, !dbg !770
currInst :  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !772
currInst :  %cmp8 = icmp slt i32 %add7, %nl, !dbg !773
currInst :  br i1 %cmp8, label %if.then, label %if.end, !dbg !774
currInst :  %mul9 = mul nsw i32 %add, %nj, !dbg !775
currInst :  %add10 = add nsw i32 %mul9, %add7, !dbg !777
currInst :  %idxprom = sext i32 %add10 to i64, !dbg !778
currInst :  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
SUSAN: add () to inst:   %mul9 = mul nsw i32 %add, %nj, !dbg !775
currInst :  %add10 = add nsw i32 %mul9, %add7, !dbg !777
currInst :  %idxprom = sext i32 %add10 to i64, !dbg !778
currInst :  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
SUSAN: add () to inst:   %add10 = add nsw i32 %mul9, %add7, !dbg !777
currInst :  %idxprom = sext i32 %add10 to i64, !dbg !778
currInst :  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
currInst :  %0 = load double, double* %arrayidx, align 8, !dbg !778
currInst :  %mul11 = fmul contract double %0, %beta, !dbg !779
currInst :  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
currInst :  %0 = load double, double* %arrayidx, align 8, !dbg !778
currInst :  %mul11 = fmul contract double %0, %beta, !dbg !779
currInst :  %0 = load double, double* %arrayidx, align 8, !dbg !778
currInst :  %mul11 = fmul contract double %0, %beta, !dbg !779
currInst :  %1 = sext i32 %nj to i64, !dbg !781
currInst :  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !785
currInst :  br i1 %cmp12, label %for.body, label %for.end, !dbg !787
currInst :  %2 = sext i32 %nl to i64, !dbg !781
currInst :  %7 = mul nsw i64 %indvars.iv, %2, !dbg !791
currInst :  %8 = add nsw i64 %7, %3, !dbg !792
currInst :  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
currInst :  %9 = load double, double* %arrayidx20, align 8, !dbg !793
currInst :  %mul21 = fmul contract double %6, %9, !dbg !794
currInst :  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
currInst :  %3 = sext i32 %add7 to i64, !dbg !781
currInst :  %8 = add nsw i64 %7, %3, !dbg !792
currInst :  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
currInst :  %9 = load double, double* %arrayidx20, align 8, !dbg !793
currInst :  %mul21 = fmul contract double %6, %9, !dbg !794
currInst :  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
currInst :  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !785
currInst :  br i1 %cmp12, label %for.body, label %for.end, !dbg !787
currInst :  %mul13 = mul nsw i32 %add, %nj, !dbg !788
currInst :  %4 = sext i32 %mul13 to i64, !dbg !789
currInst :  %5 = add nsw i64 %4, %indvars.iv, !dbg !789
currInst :  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: add () to inst:   %mul13 = mul nsw i32 %add, %nj, !dbg !788
currInst :  %4 = sext i32 %mul13 to i64, !dbg !789
currInst :  %5 = add nsw i64 %4, %indvars.iv, !dbg !789
currInst :  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
currInst :  %6 = load double, double* %arrayidx16, align 8, !dbg !790
currInst :  %mul21 = fmul contract double %6, %9, !dbg !794
currInst :  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
currInst :  %5 = add nsw i64 %4, %indvars.iv, !dbg !789
currInst :  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: add () to inst:   %5 = add nsw i64 %4, %indvars.iv, !dbg !789
currInst :  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
currInst :  %6 = load double, double* %arrayidx16, align 8, !dbg !790
currInst :  %mul21 = fmul contract double %6, %9, !dbg !794
currInst :  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
currInst :  %6 = load double, double* %arrayidx16, align 8, !dbg !790
currInst :  %mul21 = fmul contract double %6, %9, !dbg !794
currInst :  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
currInst :  %7 = mul nsw i64 %indvars.iv, %2, !dbg !791
currInst :  %8 = add nsw i64 %7, %3, !dbg !792
currInst :  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: add () to inst:   %7 = mul nsw i64 %indvars.iv, %2, !dbg !791
currInst :  %8 = add nsw i64 %7, %3, !dbg !792
currInst :  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: add () to inst:   %8 = add nsw i64 %7, %3, !dbg !792
currInst :  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
currInst :  %9 = load double, double* %arrayidx20, align 8, !dbg !793
currInst :  %mul21 = fmul contract double %6, %9, !dbg !794
currInst :  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
currInst :  %9 = load double, double* %arrayidx20, align 8, !dbg !793
currInst :  %mul21 = fmul contract double %6, %9, !dbg !794
currInst :  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
currInst :  %mul21 = fmul contract double %6, %9, !dbg !794
currInst :  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
currInst :  %mul23 = mul nsw i32 %add, %nl, !dbg !801
currInst :  %add24 = add nsw i32 %mul23, %add7, !dbg !802
currInst :  %idxprom25 = sext i32 %add24 to i64, !dbg !803
currInst :  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
SUSAN: add () to inst:   %mul23 = mul nsw i32 %add, %nl, !dbg !801
currInst :  %add24 = add nsw i32 %mul23, %add7, !dbg !802
currInst :  %idxprom25 = sext i32 %add24 to i64, !dbg !803
currInst :  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
SUSAN: add () to inst:   %add24 = add nsw i32 %mul23, %add7, !dbg !802
currInst :  %idxprom25 = sext i32 %add24 to i64, !dbg !803
currInst :  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
currInst :  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !804
currInst :  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
currInst :  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !804
LP->LV 1694:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
LP->L 1694: Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>

nestlevel: i
SUSAN: getting value name for: 
; Function Attrs: convergent noinline nounwind
define dso_local void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %gridDim.x, i32 %gridDim.y, i32 %gridDim.z, i32 %blockDim.x, i32 %blockDim.y, i32 %blockDim.z, i32 %blockIdx.x, i32 %blockIdx.y, i32 %blockIdx.z, i32 %threadIdx.x, i32 %threadIdx.y, i32 %threadIdx.z) #9 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1190, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1193, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1194, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1195, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double %alpha, metadata !1196, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double %beta, metadata !1197, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1198, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %A, metadata !1199, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %B, metadata !1200, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %C, metadata !1201, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %D, metadata !1202, metadata !DIExpression()), !dbg !1192
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !1203
  %add = add i32 %mul, %threadIdx.x, !dbg !1204
  call void @llvm.dbg.value(metadata i32 %add, metadata !1205, metadata !DIExpression()), !dbg !1192
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !1206
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !1207
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1208, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1209, metadata !DIExpression()), !dbg !1192
  %cmp = icmp slt i32 %add, %ni, !dbg !1210
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1212

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nl, !dbg !1213
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1214

if.then:                                          ; preds = %land.lhs.true
  %mul9 = mul nsw i32 %add, %nj, !dbg !1215
  %add10 = add nsw i32 %mul9, %add7, !dbg !1217
  %idxprom = sext i32 %add10 to i64, !dbg !1218
  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !1218
  %0 = load double, double* %arrayidx, align 8, !dbg !1218
  %mul11 = fmul contract double %0, %beta, !dbg !1219
  call void @llvm.dbg.value(metadata double %mul11, metadata !1209, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 0, metadata !1220, metadata !DIExpression()), !dbg !1192
  %1 = sext i32 %nj to i64, !dbg !1221
  %2 = sext i32 %nl to i64, !dbg !1221
  %3 = sext i32 %add7 to i64, !dbg !1221
  br label %for.cond, !dbg !1221

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !1223
  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !1224
  call void @llvm.dbg.value(metadata double %dot.0, metadata !1209, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1220, metadata !DIExpression()), !dbg !1192
  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !1225
  br i1 %cmp12, label %for.body, label %for.end, !dbg !1227

for.body:                                         ; preds = %for.cond
  %mul13 = mul nsw i32 %add, %nj, !dbg !1228
  %4 = sext i32 %mul13 to i64, !dbg !1229
  %5 = add nsw i64 %4, %indvars.iv, !dbg !1229
  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !1230
  %6 = load double, double* %arrayidx16, align 8, !dbg !1230
  %7 = mul nsw i64 %indvars.iv, %2, !dbg !1231
  %8 = add nsw i64 %7, %3, !dbg !1232
  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !1233
  %9 = load double, double* %arrayidx20, align 8, !dbg !1233
  %mul21 = fmul contract double %6, %9, !dbg !1234
  %add22 = fadd contract double %dot.0, %mul21, !dbg !1235
  call void @llvm.dbg.value(metadata double %add22, metadata !1209, metadata !DIExpression()), !dbg !1192
  br label %for.inc, !dbg !1236

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1237
  call void @llvm.dbg.value(metadata i32 undef, metadata !1220, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1192
  br label %for.cond, !dbg !1238, !llvm.loop !1239

for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !1224
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1209, metadata !DIExpression()), !dbg !1192
  %mul23 = mul nsw i32 %add, %nl, !dbg !1241
  %add24 = add nsw i32 %mul23, %add7, !dbg !1242
  %idxprom25 = sext i32 %add24 to i64, !dbg !1243
  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !1243
  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !1244
  br label %if.end, !dbg !1245

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !1246
}

SUSAN: found argument 6346: i32 %ni
CBackend: varname: ni
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1190, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: i32 %nj
CBackend: varname: nj
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1193, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: i32 %nk
CBackend: varname: nk
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1194, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: i32 %nl
CBackend: varname: nl
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1195, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: double %alpha
CBackend: varname: alpha
  call void @llvm.dbg.value(metadata double %alpha, metadata !1196, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: double %beta
CBackend: varname: beta
  call void @llvm.dbg.value(metadata double %beta, metadata !1197, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: double* %tmp
CBackend: varname: tmp
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1198, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: double* %A
CBackend: varname: A
  call void @llvm.dbg.value(metadata double* %A, metadata !1199, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: double* %B
CBackend: varname: B
  call void @llvm.dbg.value(metadata double* %B, metadata !1200, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: double* %C
CBackend: varname: C
  call void @llvm.dbg.value(metadata double* %C, metadata !1201, metadata !DIExpression()), !dbg !1192
SUSAN: found argument 6346: double* %D
CBackend: varname: D
  call void @llvm.dbg.value(metadata double* %D, metadata !1202, metadata !DIExpression()), !dbg !1192
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
original name : j
returning name: j
SUSAN: phi related name: j
SUSAN: getting value name for:   %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
inst from IRNaming:   %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
original name : dot
returning name: dot
SUSAN: phi related name: dot
SUSAN: getting value name for:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
inst from IRNaming:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
original name : dot
returning name: dot
SUSAN: phi related name: dot
=========================SUSAN: IR NAMING BEFORE=====================
i32 %ni -> ni
i32 %nj -> nj
i32 %nk -> nk
i32 %nl -> nl
double %alpha -> alpha
double %beta -> beta
double* %tmp -> tmp
double* %A -> A
double* %B -> B
double* %C -> C
double* %D -> D
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783 -> j
  %add = add i32 %mul, %threadIdx.x, !dbg !764 -> i
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767 -> l
  %mul11 = fmul contract double %0, %beta, !dbg !779 -> dot
  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784 -> dot
  %add22 = fadd contract double %dot.0, %mul21, !dbg !795 -> dot
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797 -> j
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784 -> dot
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %ni, metadata !1190, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nj, metadata !1193, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nk, metadata !1194, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %nl, metadata !1195, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata double %alpha, metadata !1196, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata double %beta, metadata !1197, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %tmp, metadata !1198, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %A, metadata !1199, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %B, metadata !1200, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %C, metadata !1201, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %D, metadata !1202, metadata !DIExpression()), !dbg !1192
SUSAN: inst:  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !763
SUSAN: inst:  %add = add i32 %mul, %threadIdx.x, !dbg !764
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %add, metadata !1205, metadata !DIExpression()), !dbg !1192
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: inst:  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !766
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: inst:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %add7, metadata !1208, metadata !DIExpression()), !dbg !1192
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1209, metadata !DIExpression()), !dbg !1192
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %cmp = icmp slt i32 %add, %ni, !dbg !770
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !772
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %cmp8 = icmp slt i32 %add7, %nl, !dbg !773
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br i1 %cmp8, label %if.then, label %if.end, !dbg !774
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %mul9 = mul nsw i32 %add, %nj, !dbg !775
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %add10 = add nsw i32 %mul9, %add7, !dbg !777
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %idxprom = sext i32 %add10 to i64, !dbg !778
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %0 = load double, double* %arrayidx, align 8, !dbg !778
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %mul11 = fmul contract double %0, %beta, !dbg !779
dot:  %mul11 = fmul contract double %0, %beta, !dbg !779
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double %mul11, metadata !1209, metadata !DIExpression()), !dbg !1192
dot:  %mul11 = fmul contract double %0, %beta, !dbg !779
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !1220, metadata !DIExpression()), !dbg !1192
dot:  %mul11 = fmul contract double %0, %beta, !dbg !779
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %1 = sext i32 %nj to i64, !dbg !781
dot:  %mul11 = fmul contract double %0, %beta, !dbg !779
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %2 = sext i32 %nl to i64, !dbg !781
dot:  %mul11 = fmul contract double %0, %beta, !dbg !779
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %3 = sext i32 %add7 to i64, !dbg !781
dot:  %mul11 = fmul contract double %0, %beta, !dbg !779
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br label %for.cond, !dbg !781
dot:  %mul11 = fmul contract double %0, %beta, !dbg !779
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double %dot.0, metadata !1209, metadata !DIExpression()), !dbg !1192
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1220, metadata !DIExpression()), !dbg !1192
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !785
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br i1 %cmp12, label %for.body, label %for.end, !dbg !787
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %mul13 = mul nsw i32 %add, %nj, !dbg !788
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %4 = sext i32 %mul13 to i64, !dbg !789
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %5 = add nsw i64 %4, %indvars.iv, !dbg !789
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %6 = load double, double* %arrayidx16, align 8, !dbg !790
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %7 = mul nsw i64 %indvars.iv, %2, !dbg !791
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %8 = add nsw i64 %7, %3, !dbg !792
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %9 = load double, double* %arrayidx20, align 8, !dbg !793
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %mul21 = fmul contract double %6, %9, !dbg !794
dot:  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
dot:  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double %add22, metadata !1209, metadata !DIExpression()), !dbg !1192
dot:  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br label %for.inc, !dbg !796
dot:  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
dot:  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 undef, metadata !1220, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1192
dot:  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br label %for.cond, !dbg !798, !llvm.loop !799
dot:  %add22 = fadd contract double %dot.0, %mul21, !dbg !795
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1209, metadata !DIExpression()), !dbg !1192
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %mul23 = mul nsw i32 %add, %nl, !dbg !801
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %add24 = add nsw i32 %mul23, %add7, !dbg !802
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %idxprom25 = sext i32 %add24 to i64, !dbg !803
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !804
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  br label %if.end, !dbg !805
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: inst:  ret void, !dbg !806
dot:  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
i:  %add = add i32 %mul, %threadIdx.x, !dbg !764
j:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
l:  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
=========================SUSAN: IR NAMING=====================
i32 %ni -> ni
i32 %nj -> nj
i32 %nk -> nk
i32 %nl -> nl
double %alpha -> alpha
double %beta -> beta
double* %tmp -> tmp
double* %A -> A
double* %B -> B
double* %C -> C
double* %D -> D
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783 -> j
  %add = add i32 %mul, %threadIdx.x, !dbg !764 -> i
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !767 -> l
  %mul11 = fmul contract double %0, %beta, !dbg !779 -> dot
  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784 -> dot
  %add22 = fadd contract double %dot.0, %mul21, !dbg !795 -> dot
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797 -> j
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784 -> dot
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
SUSAN: getting value name for: i32 %nk
inst from IRNaming: i32 %nk
original name : nk
returning name: nk
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
SUSAN: getting value name for: double %alpha
inst from IRNaming: double %alpha
original name : alpha
returning name: alpha
SUSAN: getting value name for: double %beta
inst from IRNaming: double %beta
original name : beta
returning name: beta
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
SUSAN: getting value name for: double* %A
inst from IRNaming: double* %A
original name : A
returning name: A
SUSAN: getting value name for: double* %B
inst from IRNaming: double* %B
original name : B
returning name: B
SUSAN: getting value name for: double* %C
inst from IRNaming: double* %C
original name : C
returning name: C
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
SUSAN: getting value name for: i32 %gridDim.x
SUSAN: getting value name for: i32 %gridDim.y
SUSAN: getting value name for: i32 %gridDim.z
SUSAN: getting value name for: i32 %blockDim.x
SUSAN: getting value name for: i32 %blockDim.y
SUSAN: getting value name for: i32 %blockDim.z
SUSAN: getting value name for: i32 %blockIdx.x
SUSAN: getting value name for: i32 %blockIdx.y
SUSAN: getting value name for: i32 %blockIdx.z
SUSAN: getting value name for: i32 %threadIdx.x
SUSAN: getting value name for: i32 %threadIdx.y
SUSAN: getting value name for: i32 %threadIdx.z
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
SUSAN: declaring varName 5298: i
SUSAN: declared locals:
SUSAN: declaring 3252:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: inst at 5950:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: declaring   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: printing type at 5937: i32
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : l
returning name: l
SUSAN: declaring varName 5298: l
SUSAN: declared locals:
i
SUSAN: declaring 3252:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : l
returning name: l
SUSAN: declaring with reconstructed name 3286: l
SUSAN: inst at 5950:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: declaring   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: printing type at 5937: i32
SUSAN: getting value name for:   %mul11 = fmul contract double %0, %beta, !dbg !779
inst from IRNaming:   %mul11 = fmul contract double %0, %beta, !dbg !779
original name : dot
returning name: dot
SUSAN: declaring varName 5298: dot
SUSAN: declared locals:
i
l
SUSAN: declaring 3252:   %mul11 = fmul contract double %0, %beta, !dbg !779
SUSAN: getting value name for:   %mul11 = fmul contract double %0, %beta, !dbg !779
inst from IRNaming:   %mul11 = fmul contract double %0, %beta, !dbg !779
original name : dot
returning name: dot
SUSAN: declaring with reconstructed name 3286: dot
SUSAN: inst at 5950:   %mul11 = fmul contract double %0, %beta, !dbg !779
SUSAN: declaring   %mul11 = fmul contract double %0, %beta, !dbg !779
SUSAN: printing type at 5937: double
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: declared locals:
dot
i
l
SUSAN: declaring 3252:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: inst at 5950:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: declaring   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: printing type at 5937: i64
SUSAN: getting value name for:   %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
inst from IRNaming:   %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
original name : dot
returning name: dot
SUSAN: declaring varName 5298: dot
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
original name : j
returning name: j
SUSAN: declaring varName 5298: j
SUSAN: getting value name for:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
inst from IRNaming:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
original name : dot
returning name: dot
SUSAN: declaring varName 5298: dot
SUSAN: am I here 6807??
IfElse Region with entry block: entry
thenSubRegions : 
SUSAN: declaring 3252:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
SUSAN: declaring with reconstructed name 3286: i
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeOperand 3595:   %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !763
CBackend: writeOperand 3595: i32 %blockDim.x
SUSAN: getting value name for: i32 %blockDim.x
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %blockIdx.x
SUSAN: getting value name for: i32 %blockIdx.x
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %threadIdx.x
SUSAN: getting value name for: i32 %threadIdx.x
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : l
returning name: l
SUSAN: declaring with reconstructed name 3286: l
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : l
returning name: l
CBackend: writeOperand 3595:   %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !766
CBackend: writeOperand 3595: i32 %blockDim.y
SUSAN: getting value name for: i32 %blockDim.y
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %blockIdx.y
SUSAN: getting value name for: i32 %blockIdx.y
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %threadIdx.y
SUSAN: getting value name for: i32 %threadIdx.y
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %cmp = icmp slt i32 %add, %ni, !dbg !770
CBackend: writeOperand 3595:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %ni
SUSAN: getting value name for: i32 %ni
inst from IRNaming: i32 %ni
original name : ni
returning name: ni
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
IfElse Region with entry block: land.lhs.true
thenSubRegions : 
CBackend: writeOperand 3595:   %cmp8 = icmp slt i32 %add7, %nl, !dbg !773
CBackend: writeOperand 3595:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : l
returning name: l
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
Linear Region with entry block: if.then
SUSAN: printing bb:if.then
CBEBackend: printing bb 7082 if.then
SUSAN: printing instruction   %mul11 = fmul contract double %0, %beta, !dbg !779 at 6678
SUSAN: getting value name for:   %mul11 = fmul contract double %0, %beta, !dbg !779
inst from IRNaming:   %mul11 = fmul contract double %0, %beta, !dbg !779
original name : dot
returning name: dot
CBackend: writeOperand 3595:   %0 = load double, double* %arrayidx, align 8, !dbg !778
SUSAN: loadInst:   %0 = load double, double* %arrayidx, align 8, !dbg !778
SUSAN: GEPINST:   %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !778
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %D
SUSAN: writing ptr 9994: double* %D
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
CBackend: writeOperand 3595:   %idxprom = sext i32 %add10 to i64, !dbg !778
SUSAN: visiting cast:   %idxprom = sext i32 %add10 to i64, !dbg !778
CBackend: writeOperand 3595:   %add10 = add nsw i32 %mul9, %add7, !dbg !777
CBackend: writeOperand 3595:   %mul9 = mul nsw i32 %add, %nj, !dbg !775
CBackend: writeOperand 3595:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : l
returning name: l
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595: double %beta
SUSAN: getting value name for: double %beta
inst from IRNaming: double %beta
original name : beta
returning name: beta
CBackend: writeoperand here 3674? 
printing unconditional branch   br label %for.cond, !dbg !781
Loop Region with entry block: for.cond
term 6818:   br i1 %cmp12, label %for.body, label %for.end, !dbg !787
SUSAN: condrelatedinst:  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: condrelatedinst:  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !785
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: declaring 3252:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
CBackend: writeOperand 3595: i64 0
CBackend: writeoperand here 3674? 
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
original name : j
returning name: j
SUSAN: visiting cast:   %1 = sext i32 %nj to i64, !dbg !781
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
SUSAN: declaring 3252:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
original name : j
returning name: j
SUSAN: declaring with reconstructed name 3286: j
SUSAN: getting value name for:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
inst from IRNaming:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
original name : j
returning name: j
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i64 1
CBackend: writeoperand here 3674? 
Linear Region with entry block: for.body
SUSAN: printing bb:for.body
CBEBackend: printing bb 7082 for.body
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: printing instruction   %add22 = fadd contract double %dot.0, %mul21, !dbg !795 at 6678
SUSAN: getting value name for:   %add22 = fadd contract double %dot.0, %mul21, !dbg !795
inst from IRNaming:   %add22 = fadd contract double %dot.0, %mul21, !dbg !795
original name : dot
returning name: dot
CBackend: writeOperand 3595:   %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !784
CBackend: writeOperand 3595:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
SUSAN: getting value name for:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
inst from IRNaming:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
original name : dot
returning name: dot
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %mul21 = fmul contract double %6, %9, !dbg !794
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeOperand 3595:   %6 = load double, double* %arrayidx16, align 8, !dbg !790
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: loadInst:   %6 = load double, double* %arrayidx16, align 8, !dbg !790
SUSAN: GEPINST:   %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !790
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %tmp
SUSAN: writing ptr 9994: double* %tmp
SUSAN: getting value name for: double* %tmp
inst from IRNaming: double* %tmp
original name : tmp
returning name: tmp
CBackend: writeOperand 3595:   %5 = add nsw i64 %4, %indvars.iv, !dbg !789
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeOperand 3595:   %4 = sext i32 %mul13 to i64, !dbg !789
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: visiting cast:   %4 = sext i32 %mul13 to i64, !dbg !789
CBackend: writeOperand 3595:   %mul13 = mul nsw i32 %add, %nj, !dbg !788
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeOperand 3595:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nj
SUSAN: getting value name for: i32 %nj
inst from IRNaming: i32 %nj
original name : nj
returning name: nj
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
SUSAN: am I here 8049?
CBackend: writeOperand 3595:   %9 = load double, double* %arrayidx20, align 8, !dbg !793
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: loadInst:   %9 = load double, double* %arrayidx20, align 8, !dbg !793
SUSAN: GEPINST:   %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !793
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %C
SUSAN: writing ptr 9994: double* %C
SUSAN: getting value name for: double* %C
inst from IRNaming: double* %C
original name : C
returning name: C
CBackend: writeOperand 3595:   %8 = add nsw i64 %7, %3, !dbg !792
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeOperand 3595:   %7 = mul nsw i64 %indvars.iv, %2, !dbg !791
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeOperand 3595:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: getting value name for:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
inst from IRNaming:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
original name : j
returning name: j
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %2 = sext i32 %nl to i64, !dbg !781
SUSAN: visiting cast:   %2 = sext i32 %nl to i64, !dbg !781
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %3 = sext i32 %add7 to i64, !dbg !781
SUSAN: visiting cast:   %3 = sext i32 %add7 to i64, !dbg !781
CBackend: writeOperand 3595:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : l
returning name: l
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBackend: writeoperand here 3674? 
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
printing unconditional branch   br label %for.inc, !dbg !796
CBERegion: printing latchBB for.inc
CBERegion: I 316:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !797
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBERegion: I 316:   call void @llvm.dbg.value(metadata i32 undef, metadata !1220, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1192
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
CBERegion: I 316:   br label %for.cond, !dbg !798, !llvm.loop !799
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
SUSAN: found IV 784  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !783
Linear Region with entry block: for.end
SUSAN: printing bb:for.end
CBEBackend: printing bb 7082 for.end
SUSAN: printing instruction   store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !804 at 6678
CBEBackend: printing store Inst:   store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !804
CBackend: here? 10442
SUSAN: GEPINST:   %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !803
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: writing ptr 10000:double* %D
SUSAN: writing ptr 9994: double* %D
SUSAN: getting value name for: double* %D
inst from IRNaming: double* %D
original name : D
returning name: D
CBackend: writeOperand 3595:   %idxprom25 = sext i32 %add24 to i64, !dbg !803
SUSAN: visiting cast:   %idxprom25 = sext i32 %add24 to i64, !dbg !803
CBackend: writeOperand 3595:   %add24 = add nsw i32 %mul23, %add7, !dbg !802
CBackend: writeOperand 3595:   %mul23 = mul nsw i32 %add, %nl, !dbg !801
CBackend: writeOperand 3595:   %add = add i32 %mul, %threadIdx.x, !dbg !764
SUSAN: getting value name for:   %add = add i32 %mul, %threadIdx.x, !dbg !764
inst from IRNaming:   %add = add i32 %mul, %threadIdx.x, !dbg !764
original name : i
returning name: i
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595: i32 %nl
SUSAN: getting value name for: i32 %nl
inst from IRNaming: i32 %nl
original name : nl
returning name: nl
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeOperand 3595:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
SUSAN: getting value name for:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
inst from IRNaming:   %add7 = add i32 %mul5, %threadIdx.y, !dbg !767
original name : l
returning name: l
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: writeoperand here 3674? 
CBackend: here? 10445
CBackend: writeOperand 3595:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
SUSAN: getting value name for:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
inst from IRNaming:   %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !784
original name : dot
returning name: dot
CBackend: writeoperand here 3674? 
CBackend: here? 10462
printing unconditional branch   br label %if.end, !dbg !805
Linear Region with entry block: if.end
SUSAN: printing bb:if.end
CBEBackend: printing bb 7082 if.end
CBackend: iterating function 1759: llvm.dbg.value
CBackend: iterating function 1759: memcpy
TOTAL VARIABLES: 111
RECONSTRUCTED VARIABLES: 78
SUSAN: getting value name for: 
declare dso_local i32 @cudaSetupArgument(i8*, i64, i64)

SUSAN: getting value name for: 
declare dso_local i32 @cudaLaunch(i8*)

SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @_Z10num_blocksss(i16 signext %num, i16 signext %factor) #2 !dbg !748 {
entry:
  call void @llvm.dbg.value(metadata i16 %num, metadata !752, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.value(metadata i16 %factor, metadata !754, metadata !DIExpression()), !dbg !753
  %conv = sext i16 %num to i32, !dbg !755
  %conv1 = sext i16 %factor to i32, !dbg !756
  %add = add nsw i32 %conv, %conv1, !dbg !757
  %sub = sub nsw i32 %add, 1, !dbg !758
  %conv2 = sext i16 %factor to i32, !dbg !759
  %div = sdiv i32 %sub, %conv2, !dbg !760
  %conv3 = trunc i32 %div to i16, !dbg !761
  ret i16 %conv3, !dbg !762
}

SUSAN: getting value name for: 
; Function Attrs: noinline norecurse uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #3 !dbg !763 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !766, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i8** %argv, metadata !768, metadata !DIExpression()), !dbg !767
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !769
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !769
  %call = call i32 @atoi(i8* %0) #10, !dbg !770
  call void @llvm.dbg.value(metadata i32 %call, metadata !771, metadata !DIExpression()), !dbg !767
  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !772
  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !772
  %call2 = call i32 @atoi(i8* %1) #10, !dbg !773
  %conv = sext i32 %call2 to i64, !dbg !773
  call void @llvm.dbg.value(metadata i64 %conv, metadata !774, metadata !DIExpression()), !dbg !767
  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !775
  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !775
  %call4 = call i32 @atoi(i8* %2) #10, !dbg !776
  %conv5 = sext i32 %call4 to i64, !dbg !776
  call void @llvm.dbg.value(metadata i64 %conv5, metadata !777, metadata !DIExpression()), !dbg !767
  %arrayidx6 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !778
  %3 = load i8*, i8** %arrayidx6, align 8, !dbg !778
  %call7 = call i32 @atoi(i8* %3) #10, !dbg !779
  %conv8 = sext i32 %call7 to i64, !dbg !779
  call void @llvm.dbg.value(metadata i64 %conv8, metadata !780, metadata !DIExpression()), !dbg !767
  %arrayidx9 = getelementptr inbounds i8*, i8** %argv, i64 5, !dbg !781
  %4 = load i8*, i8** %arrayidx9, align 8, !dbg !781
  %call10 = call i32 @atoi(i8* %4) #10, !dbg !782
  %conv11 = sext i32 %call10 to i64, !dbg !782
  call void @llvm.dbg.value(metadata i64 %conv11, metadata !783, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !784, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !785, metadata !DIExpression()), !dbg !767
  %mul = mul nsw i64 %conv, %conv8, !dbg !786
  %mul12 = mul i64 %mul, 8, !dbg !787, !tulip.target.datasize !788
  %call13 = call noalias i8* @malloc(i64 %mul12) #11, !dbg !789, !tulip.target.mapdata.to !790
  %5 = bitcast i8* %call13 to double*, !dbg !791
  call void @llvm.dbg.value(metadata double* %5, metadata !792, metadata !DIExpression()), !dbg !767
  %mul14 = mul nsw i64 %conv8, %conv5, !dbg !793
  %mul15 = mul i64 %mul14, 8, !dbg !794, !tulip.target.datasize !795
  %call16 = call noalias i8* @malloc(i64 %mul15) #11, !dbg !796, !tulip.target.mapdata.to !797
  %6 = bitcast i8* %call16 to double*, !dbg !798
  call void @llvm.dbg.value(metadata double* %6, metadata !799, metadata !DIExpression()), !dbg !767
  %mul17 = mul nsw i64 %conv11, %conv5, !dbg !800
  %mul18 = mul i64 %mul17, 8, !dbg !801, !tulip.target.datasize !802
  %call19 = call noalias i8* @malloc(i64 %mul18) #11, !dbg !803, !tulip.target.mapdata.to !804
  %7 = bitcast i8* %call19 to double*, !dbg !805
  call void @llvm.dbg.value(metadata double* %7, metadata !806, metadata !DIExpression()), !dbg !767
  %mul20 = mul nsw i64 %conv, %conv11, !dbg !807
  %mul21 = mul i64 %mul20, 8, !dbg !808, !tulip.target.datasize !809
  %call22 = call noalias i8* @malloc(i64 %mul21) #11, !dbg !810, !tulip.target.mapdata.to !811, !tulip.target.mapdata.from !813
  %8 = bitcast i8* %call22 to double*, !dbg !814
  call void @llvm.dbg.value(metadata double* %8, metadata !815, metadata !DIExpression()), !dbg !767
  %mul23 = mul nsw i64 %conv, %conv5, !dbg !816
  %mul24 = mul i64 %mul23, 8, !dbg !817, !tulip.target.datasize !818
  %call25 = call noalias i8* @malloc(i64 %mul24) #11, !dbg !819, !tulip.target.mapdata.to !820
  %9 = bitcast i8* %call25 to double*, !dbg !821
  call void @llvm.dbg.value(metadata double* %9, metadata !822, metadata !DIExpression()), !dbg !767
  %conv26 = trunc i64 %conv to i32, !dbg !823
  %conv27 = trunc i64 %conv5 to i32, !dbg !824
  %conv28 = trunc i64 %conv8 to i32, !dbg !825
  %conv29 = trunc i64 %conv11 to i32, !dbg !826
  call void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %conv26, i32 %conv27, i32 %conv28, i32 %conv29, double* %5, double* %6, double* %7, double* %8, double* %9), !dbg !827
  %10 = bitcast double* %5 to i8*, !dbg !828
  %11 = bitcast double* %5 to i8*, !dbg !829
  %mul45 = mul nsw i64 %conv, %conv8, !dbg !830
  %mul46 = mul i64 %mul45, 8, !dbg !831
  %call47 = call i32 @cudaMemcpy(i8* %10, i8* %11, i64 %mul46, i32 1), !dbg !832, !tulip.target.start.of.map !833
  %conv60 = trunc i64 %conv to i32, !dbg !834
  %conv61 = trunc i64 %conv5 to i32, !dbg !835
  %conv62 = trunc i64 %conv8 to i32, !dbg !836
  %conv63 = trunc i64 %conv11 to i32, !dbg !837
  call void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %conv60, i32 %conv61, i32 %conv62, i32 %conv63, double 3.241200e+04, double 2.123000e+03, double* %9, double* %5, double* %6, double* %7, double* %8), !dbg !838
  %12 = bitcast double* %8 to i8*, !dbg !839
  %13 = bitcast double* %8 to i8*, !dbg !840
  %mul64 = mul nsw i64 %conv, %conv11, !dbg !841
  %mul65 = mul i64 %mul64, 8, !dbg !842
  %call66 = call i32 @cudaMemcpy(i8* %12, i8* %13, i64 %mul65, i32 2), !dbg !843, !tulip.target.end.of.map !833
  %cmp = icmp eq i32 %call, 1, !dbg !844
  br i1 %cmp, label %if.then, label %if.end, !dbg !846

if.then:                                          ; preds = %entry
  %conv74 = trunc i64 %conv to i32, !dbg !847
  %conv75 = trunc i64 %conv8 to i32, !dbg !848
  call void @_ZL11print_arrayiiPd(i32 %conv74, i32 %conv75, double* %8), !dbg !849
  br label %if.end, !dbg !849

if.end:                                           ; preds = %if.then, %entry
  %14 = bitcast double* %9 to i8*, !dbg !850
  call void @free(i8* %14) #11, !dbg !851
  %15 = bitcast double* %5 to i8*, !dbg !852
  call void @free(i8* %15) #11, !dbg !853
  %16 = bitcast double* %6 to i8*, !dbg !854
  call void @free(i8* %16) #11, !dbg !855
  %17 = bitcast double* %7 to i8*, !dbg !856
  call void @free(i8* %17) #11, !dbg !857
  %18 = bitcast double* %8 to i8*, !dbg !858
  call void @free(i8* %18) #11, !dbg !859
  ret i32 0, !dbg !860
}

SUSAN: getting value name for: 
; Function Attrs: noinline nounwind uwtable
define internal void @_ZL10init_arrayiiiiPdS_S_S_S_(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double* %A, double* %B, double* %C, double* %D, double* %tmp) #2 !dbg !861 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !864, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nj, metadata !866, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nk, metadata !867, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 %nl, metadata !868, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %A, metadata !869, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %B, metadata !870, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %C, metadata !871, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %D, metadata !872, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata double* %tmp, metadata !873, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %0 = sext i32 %nk to i64, !dbg !875
  %1 = sext i32 %ni to i64, !dbg !875
  %2 = sext i32 %ni to i64, !dbg !875
  br label %for.cond, !dbg !875

for.cond:                                         ; preds = %for.inc7, %entry
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc7 ], [ 0, %entry ], !dbg !877
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp = icmp slt i64 %indvars.iv28, %1, !dbg !878
  br i1 %cmp, label %for.body, label %for.end9, !dbg !880

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond1, !dbg !882

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc ], [ 0, %for.body ], !dbg !884
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp2 = icmp slt i64 %indvars.iv25, %0, !dbg !885
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !887

for.body3:                                        ; preds = %for.cond1
  %3 = trunc i64 %indvars.iv28 to i32, !dbg !888
  %conv = sitofp i32 %3 to double, !dbg !888
  %4 = trunc i64 %indvars.iv25 to i32, !dbg !889
  %conv4 = sitofp i32 %4 to double, !dbg !889
  %mul = fmul contract double %conv, %conv4, !dbg !890
  %conv5 = sitofp i32 %ni to double, !dbg !891
  %div = fdiv double %mul, %conv5, !dbg !892
  %5 = mul nsw i64 %indvars.iv28, %2, !dbg !893
  %6 = add nsw i64 %5, %indvars.iv25, !dbg !894
  %arrayidx = getelementptr inbounds double, double* %A, i64 %6, !dbg !895
  store double %div, double* %arrayidx, align 8, !dbg !896
  br label %for.inc, !dbg !895

for.inc:                                          ; preds = %for.body3
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !897
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond1, !dbg !898, !llvm.loop !899

for.end:                                          ; preds = %for.cond1
  br label %for.inc7, !dbg !900

for.inc7:                                         ; preds = %for.end
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !901
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond, !dbg !902, !llvm.loop !903

for.end9:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %7 = sext i32 %nj to i64, !dbg !905
  %8 = sext i32 %nk to i64, !dbg !905
  %9 = sext i32 %nk to i64, !dbg !905
  br label %for.cond10, !dbg !905

for.cond10:                                       ; preds = %for.inc29, %for.end9
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc29 ], [ 0, %for.end9 ], !dbg !907
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp11 = icmp slt i64 %indvars.iv22, %8, !dbg !908
  br i1 %cmp11, label %for.body12, label %for.end31, !dbg !910

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond13, !dbg !911

for.cond13:                                       ; preds = %for.inc26, %for.body12
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.inc26 ], [ 0, %for.body12 ], !dbg !913
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp14 = icmp slt i64 %indvars.iv19, %7, !dbg !914
  br i1 %cmp14, label %for.body15, label %for.end28, !dbg !916

for.body15:                                       ; preds = %for.cond13
  %10 = trunc i64 %indvars.iv22 to i32, !dbg !917
  %conv16 = sitofp i32 %10 to double, !dbg !917
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !918
  %11 = trunc i64 %indvars.iv.next20 to i32, !dbg !919
  %conv18 = sitofp i32 %11 to double, !dbg !919
  %mul19 = fmul contract double %conv16, %conv18, !dbg !920
  %conv20 = sitofp i32 %nj to double, !dbg !921
  %div21 = fdiv double %mul19, %conv20, !dbg !922
  %12 = mul nsw i64 %indvars.iv22, %9, !dbg !923
  %13 = add nsw i64 %12, %indvars.iv19, !dbg !924
  %arrayidx25 = getelementptr inbounds double, double* %B, i64 %13, !dbg !925
  store double %div21, double* %arrayidx25, align 8, !dbg !926
  br label %for.inc26, !dbg !925

for.inc26:                                        ; preds = %for.body15
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond13, !dbg !927, !llvm.loop !928

for.end28:                                        ; preds = %for.cond13
  br label %for.inc29, !dbg !929

for.inc29:                                        ; preds = %for.end28
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !930
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond10, !dbg !931, !llvm.loop !932

for.end31:                                        ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %14 = sext i32 %nj to i64, !dbg !934
  %15 = sext i32 %nl to i64, !dbg !934
  %16 = sext i32 %nl to i64, !dbg !934
  br label %for.cond32, !dbg !934

for.cond32:                                       ; preds = %for.inc51, %for.end31
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc51 ], [ 0, %for.end31 ], !dbg !936
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp33 = icmp slt i64 %indvars.iv16, %15, !dbg !937
  br i1 %cmp33, label %for.body34, label %for.end53, !dbg !939

for.body34:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond35, !dbg !940

for.cond35:                                       ; preds = %for.inc48, %for.body34
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc48 ], [ 0, %for.body34 ], !dbg !942
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp36 = icmp slt i64 %indvars.iv12, %14, !dbg !943
  br i1 %cmp36, label %for.body37, label %for.end50, !dbg !945

for.body37:                                       ; preds = %for.cond35
  %17 = trunc i64 %indvars.iv16 to i32, !dbg !946
  %conv38 = sitofp i32 %17 to double, !dbg !946
  %18 = add nuw nsw i64 %indvars.iv12, 3, !dbg !947
  %19 = trunc i64 %18 to i32, !dbg !948
  %conv40 = sitofp i32 %19 to double, !dbg !948
  %mul41 = fmul contract double %conv38, %conv40, !dbg !949
  %conv42 = sitofp i32 %nl to double, !dbg !950
  %div43 = fdiv double %mul41, %conv42, !dbg !951
  %20 = mul nsw i64 %indvars.iv16, %16, !dbg !952
  %21 = add nsw i64 %20, %indvars.iv12, !dbg !953
  %arrayidx47 = getelementptr inbounds double, double* %C, i64 %21, !dbg !954
  store double %div43, double* %arrayidx47, align 8, !dbg !955
  br label %for.inc48, !dbg !954

for.inc48:                                        ; preds = %for.body37
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !956
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond35, !dbg !957, !llvm.loop !958

for.end50:                                        ; preds = %for.cond35
  br label %for.inc51, !dbg !959

for.inc51:                                        ; preds = %for.end50
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !960
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond32, !dbg !961, !llvm.loop !962

for.end53:                                        ; preds = %for.cond32
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %22 = sext i32 %nl to i64, !dbg !964
  %23 = sext i32 %ni to i64, !dbg !964
  %24 = sext i32 %ni to i64, !dbg !964
  br label %for.cond54, !dbg !964

for.cond54:                                       ; preds = %for.inc73, %for.end53
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc73 ], [ 0, %for.end53 ], !dbg !966
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp55 = icmp slt i64 %indvars.iv9, %23, !dbg !967
  br i1 %cmp55, label %for.body56, label %for.end75, !dbg !969

for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond57, !dbg !970

for.cond57:                                       ; preds = %for.inc70, %for.body56
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc70 ], [ 0, %for.body56 ], !dbg !972
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp58 = icmp slt i64 %indvars.iv5, %22, !dbg !973
  br i1 %cmp58, label %for.body59, label %for.end72, !dbg !975

for.body59:                                       ; preds = %for.cond57
  %25 = trunc i64 %indvars.iv9 to i32, !dbg !976
  %conv60 = sitofp i32 %25 to double, !dbg !976
  %26 = add nuw nsw i64 %indvars.iv5, 2, !dbg !977
  %27 = trunc i64 %26 to i32, !dbg !978
  %conv62 = sitofp i32 %27 to double, !dbg !978
  %mul63 = fmul contract double %conv60, %conv62, !dbg !979
  %conv64 = sitofp i32 %nk to double, !dbg !980
  %div65 = fdiv double %mul63, %conv64, !dbg !981
  %28 = mul nsw i64 %indvars.iv9, %24, !dbg !982
  %29 = add nsw i64 %28, %indvars.iv5, !dbg !983
  %arrayidx69 = getelementptr inbounds double, double* %D, i64 %29, !dbg !984
  store double %div65, double* %arrayidx69, align 8, !dbg !985
  br label %for.inc70, !dbg !984

for.inc70:                                        ; preds = %for.body59
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !986
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond57, !dbg !987, !llvm.loop !988

for.end72:                                        ; preds = %for.cond57
  br label %for.inc73, !dbg !989

for.inc73:                                        ; preds = %for.end72
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !990
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond54, !dbg !991, !llvm.loop !992

for.end75:                                        ; preds = %for.cond54
  call void @llvm.dbg.value(metadata i32 0, metadata !874, metadata !DIExpression()), !dbg !865
  %30 = sext i32 %nj to i64, !dbg !994
  %31 = sext i32 %ni to i64, !dbg !994
  %32 = sext i32 %ni to i64, !dbg !994
  br label %for.cond76, !dbg !994

for.cond76:                                       ; preds = %for.inc89, %for.end75
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc89 ], [ 0, %for.end75 ], !dbg !996
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !874, metadata !DIExpression()), !dbg !865
  %cmp77 = icmp slt i64 %indvars.iv2, %31, !dbg !997
  br i1 %cmp77, label %for.body78, label %for.end91, !dbg !999

for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.value(metadata i32 0, metadata !881, metadata !DIExpression()), !dbg !865
  br label %for.cond79, !dbg !1000

for.cond79:                                       ; preds = %for.inc86, %for.body78
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %for.body78 ], !dbg !1002
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !881, metadata !DIExpression()), !dbg !865
  %cmp80 = icmp slt i64 %indvars.iv, %30, !dbg !1003
  br i1 %cmp80, label %for.body81, label %for.end88, !dbg !1005

for.body81:                                       ; preds = %for.cond79
  %33 = mul nsw i64 %indvars.iv2, %32, !dbg !1006
  %34 = add nsw i64 %33, %indvars.iv, !dbg !1007
  %arrayidx85 = getelementptr inbounds double, double* %tmp, i64 %34, !dbg !1008
  store double 0.000000e+00, double* %arrayidx85, align 8, !dbg !1009
  br label %for.inc86, !dbg !1008

for.inc86:                                        ; preds = %for.body81
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1010
  call void @llvm.dbg.value(metadata i32 undef, metadata !881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond79, !dbg !1011, !llvm.loop !1012

for.end88:                                        ; preds = %for.cond79
  br label %for.inc89, !dbg !1013

for.inc89:                                        ; preds = %for.end88
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !1014
  call void @llvm.dbg.value(metadata i32 undef, metadata !874, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !865
  br label %for.cond76, !dbg !1015, !llvm.loop !1016

for.end91:                                        ; preds = %for.cond76
  ret void, !dbg !1018
}

SUSAN: getting value name for: 
declare dso_local i32 @cudaMemcpy(i8*, i8*, i64, i32) #6

SUSAN: getting value name for: 
; Function Attrs: noinline uwtable
define internal void @_ZL6kerneliiiiddPdS_S_S_S_(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D) #7 !dbg !1019 {
entry:
  %block = alloca %struct.dim3, align 4
  %grid = alloca %struct.dim3, align 4
  %agg.tmp = alloca %struct.dim3, align 4
  %agg.tmp7 = alloca %struct.dim3, align 4
  %agg.tmp.coerce = alloca { i64, i32 }, align 4
  %agg.tmp7.coerce = alloca { i64, i32 }, align 4
  %grid9 = alloca %struct.dim3, align 4
  %agg.tmp20 = alloca %struct.dim3, align 4
  %agg.tmp21 = alloca %struct.dim3, align 4
  %agg.tmp20.coerce = alloca { i64, i32 }, align 4
  %agg.tmp21.coerce = alloca { i64, i32 }, align 4
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1022, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1024, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1025, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1026, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double %alpha, metadata !1027, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double %beta, metadata !1028, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1029, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %A, metadata !1030, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %B, metadata !1031, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %C, metadata !1032, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata double* %D, metadata !1033, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.value(metadata i32 256, metadata !1034, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.declare(metadata %struct.dim3* %block, metadata !1035, metadata !DIExpression()), !dbg !1059
  %div = udiv i32 256, 32, !dbg !1060
  %dim3gep.0 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 0
  store i32 %div, i32* %dim3gep.0
  %dim3gep.1 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 1
  store i32 32, i32* %dim3gep.1
  %dim3gep.2 = getelementptr %struct.dim3, %struct.dim3* %block, i32 0, i32 2
  store i32 1, i32* %dim3gep.2
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid, metadata !1061, metadata !DIExpression()), !dbg !1063
  %conv = trunc i32 %ni to i16, !dbg !1064
  %x = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !1065
  %0 = load i32, i32* %x, align 4, !dbg !1065
  %conv1 = trunc i32 %0 to i16, !dbg !1066
  %call = call signext i16 @_Z10num_blocksss(i16 signext %conv, i16 signext %conv1), !dbg !1067
  %conv2 = sext i16 %call to i32, !dbg !1067
  %conv3 = trunc i32 %nj to i16, !dbg !1068
  %y = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !1069
  %1 = load i32, i32* %y, align 4, !dbg !1069
  %conv4 = trunc i32 %1 to i16, !dbg !1070
  %call5 = call signext i16 @_Z10num_blocksss(i16 signext %conv3, i16 signext %conv4), !dbg !1071
  %conv6 = sext i16 %call5 to i32, !dbg !1071
  %dim3gep.01 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 0
  store i32 %conv2, i32* %dim3gep.01
  %dim3gep.12 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 1
  store i32 %conv6, i32* %dim3gep.12
  %dim3gep.23 = getelementptr %struct.dim3, %struct.dim3* %grid, i32 0, i32 2
  store i32 1, i32* %dim3gep.23
  %2 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !1072
  %3 = bitcast %struct.dim3* %grid to i8*, !dbg !1072
  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 12), !dbg !1072
  %5 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !1073
  %6 = bitcast %struct.dim3* %block to i8*, !dbg !1073
  %7 = call i8* @memcpy(i8* %5, i8* %6, i64 12), !dbg !1073
  %8 = bitcast { i64, i32 }* %agg.tmp.coerce to i8*, !dbg !1074
  %9 = bitcast %struct.dim3* %agg.tmp to i8*, !dbg !1074
  %10 = call i8* @memcpy(i8* %8, i8* %9, i64 12), !dbg !1074
  %11 = bitcast { i64, i32 }* %agg.tmp7.coerce to i8*, !dbg !1074
  %12 = bitcast %struct.dim3* %agg.tmp7 to i8*, !dbg !1074
  %13 = call i8* @memcpy(i8* %11, i8* %12, i64 12), !dbg !1074
  br label %header.0

header.0:                                         ; preds = %latch.0, %entry
  %indvar.0 = phi i32 [ 0, %entry ], [ %indvar.next.0, %latch.0 ]
  %exitcond33 = icmp ne i32 %indvar.0, %conv2
  br i1 %exitcond33, label %header.1.preheader, label %kcall.end, !tulip.doall.loop.grid.collapse !833

header.1.preheader:                               ; preds = %header.0
  br label %header.1

header.1:                                         ; preds = %header.1.preheader, %latch.1
  %indvar.1 = phi i32 [ %indvar.next.1, %latch.1 ], [ 0, %header.1.preheader ]
  %exitcond32 = icmp ne i32 %indvar.1, %conv6
  br i1 %exitcond32, label %header.2.preheader, label %latch.0

header.2.preheader:                               ; preds = %header.1
  br label %header.2

header.2:                                         ; preds = %header.2.preheader, %latch.2
  %indvar.2 = phi i32 [ %indvar.next.2, %latch.2 ], [ 0, %header.2.preheader ]
  %exitcond31 = icmp ne i32 %indvar.2, 8
  br i1 %exitcond31, label %header.3.preheader, label %latch.1, !tulip.doall.loop.block.collapse !833

header.3.preheader:                               ; preds = %header.2
  br label %header.3

header.3:                                         ; preds = %header.3.preheader, %latch.3
  %indvar.3 = phi i32 [ %indvar.next.3, %latch.3 ], [ 0, %header.3.preheader ]
  %exitcond30 = icmp ne i32 %indvar.3, 32
  br i1 %exitcond30, label %kcall.configok, label %latch.2

latch.3:                                          ; preds = %kcall.configok
  %indvar.next.3 = add nuw nsw i32 %indvar.3, 1
  br label %header.3

latch.2:                                          ; preds = %header.3
  %indvar.next.2 = add nuw nsw i32 %indvar.2, 1
  br label %header.2

latch.1:                                          ; preds = %header.2
  %indvar.next.1 = add i32 %indvar.1, 1
  br label %header.1

latch.0:                                          ; preds = %header.1
  %indvar.next.0 = add i32 %indvar.0, 1
  br label %header.0

kcall.configok:                                   ; preds = %header.3
  call void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv2, i32 %conv6, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.0, i32 %indvar.1, i32 0, i32 %indvar.2, i32 %indvar.3, i32 0)
  br label %latch.3

kcall.end:                                        ; preds = %header.0
  call void @llvm.dbg.declare(metadata %struct.dim3* %grid9, metadata !1075, metadata !DIExpression()), !dbg !1077
  %conv10 = trunc i32 %ni to i16, !dbg !1078
  %x11 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 0, !dbg !1079
  %14 = load i32, i32* %x11, align 4, !dbg !1079
  %conv12 = trunc i32 %14 to i16, !dbg !1080
  %call13 = call signext i16 @_Z10num_blocksss(i16 signext %conv10, i16 signext %conv12), !dbg !1081
  %conv14 = sext i16 %call13 to i32, !dbg !1081
  %conv15 = trunc i32 %nl to i16, !dbg !1082
  %y16 = getelementptr inbounds %struct.dim3, %struct.dim3* %block, i32 0, i32 1, !dbg !1083
  %15 = load i32, i32* %y16, align 4, !dbg !1083
  %conv17 = trunc i32 %15 to i16, !dbg !1084
  %call18 = call signext i16 @_Z10num_blocksss(i16 signext %conv15, i16 signext %conv17), !dbg !1085
  %conv19 = sext i16 %call18 to i32, !dbg !1085
  %dim3gep.04 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 0
  store i32 %conv14, i32* %dim3gep.04
  %dim3gep.15 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 1
  store i32 %conv19, i32* %dim3gep.15
  %dim3gep.26 = getelementptr %struct.dim3, %struct.dim3* %grid9, i32 0, i32 2
  store i32 1, i32* %dim3gep.26
  %16 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !1086
  %17 = bitcast %struct.dim3* %grid9 to i8*, !dbg !1086
  %18 = call i8* @memcpy(i8* %16, i8* %17, i64 12), !dbg !1086
  %19 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !1087
  %20 = bitcast %struct.dim3* %block to i8*, !dbg !1087
  %21 = call i8* @memcpy(i8* %19, i8* %20, i64 12), !dbg !1087
  %22 = bitcast { i64, i32 }* %agg.tmp20.coerce to i8*, !dbg !1088
  %23 = bitcast %struct.dim3* %agg.tmp20 to i8*, !dbg !1088
  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 12), !dbg !1088
  %25 = bitcast { i64, i32 }* %agg.tmp21.coerce to i8*, !dbg !1088
  %26 = bitcast %struct.dim3* %agg.tmp21 to i8*, !dbg !1088
  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 12), !dbg !1088
  br label %header.07

header.07:                                        ; preds = %latch.014, %kcall.end
  %indvar.024 = phi i32 [ 0, %kcall.end ], [ %indvar.next.026, %latch.014 ]
  %exitcond29 = icmp ne i32 %indvar.024, %conv14
  br i1 %exitcond29, label %header.18.preheader, label %kcall.end25, !tulip.doall.loop.grid.collapse !833

header.18.preheader:                              ; preds = %header.07
  br label %header.18

header.18:                                        ; preds = %header.18.preheader, %latch.113
  %indvar.121 = phi i32 [ %indvar.next.123, %latch.113 ], [ 0, %header.18.preheader ]
  %exitcond28 = icmp ne i32 %indvar.121, %conv19
  br i1 %exitcond28, label %header.29.preheader, label %latch.014

header.29.preheader:                              ; preds = %header.18
  br label %header.29

header.29:                                        ; preds = %header.29.preheader, %latch.212
  %indvar.218 = phi i32 [ %indvar.next.220, %latch.212 ], [ 0, %header.29.preheader ]
  %exitcond27 = icmp ne i32 %indvar.218, 8
  br i1 %exitcond27, label %header.310.preheader, label %latch.113, !tulip.doall.loop.block.collapse !833

header.310.preheader:                             ; preds = %header.29
  br label %header.310

header.310:                                       ; preds = %header.310.preheader, %latch.311
  %indvar.315 = phi i32 [ %indvar.next.317, %latch.311 ], [ 0, %header.310.preheader ]
  %exitcond = icmp ne i32 %indvar.315, 32
  br i1 %exitcond, label %kcall.configok24, label %latch.212

latch.311:                                        ; preds = %kcall.configok24
  %indvar.next.317 = add nuw nsw i32 %indvar.315, 1
  br label %header.310

latch.212:                                        ; preds = %header.310
  %indvar.next.220 = add nuw nsw i32 %indvar.218, 1
  br label %header.29

latch.113:                                        ; preds = %header.29
  %indvar.next.123 = add i32 %indvar.121, 1
  br label %header.18

latch.014:                                        ; preds = %header.18
  %indvar.next.026 = add i32 %indvar.024, 1
  br label %header.07

kcall.configok24:                                 ; preds = %header.310
  call void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %conv14, i32 %conv19, i32 1, i32 %div, i32 32, i32 1, i32 %indvar.024, i32 %indvar.121, i32 0, i32 %indvar.218, i32 %indvar.315, i32 0)
  br label %latch.311

kcall.end25:                                      ; preds = %header.07
  ret void, !dbg !1089
}

SUSAN: getting value name for: 
declare dso_local i32 @cudaFree(i8*) #6

SUSAN: getting value name for: 
; Function Attrs: noinline uwtable
define internal void @_ZL11print_arrayiiPd(i32 %ni, i32 %nl, double* %D) #7 !dbg !1090 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1093, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1095, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata double* %D, metadata !1096, metadata !DIExpression()), !dbg !1094
  call void @llvm.dbg.value(metadata i32 0, metadata !1097, metadata !DIExpression()), !dbg !1094
  %0 = sext i32 %nl to i64, !dbg !1098
  %1 = sext i32 %ni to i64, !dbg !1098
  %2 = sext i32 %ni to i64, !dbg !1098
  %3 = sext i32 %ni to i64, !dbg !1098
  br label %for.cond, !dbg !1098

for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc8 ], [ 0, %entry ], !dbg !1100
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !1097, metadata !DIExpression()), !dbg !1094
  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !1101
  br i1 %cmp, label %for.body, label %for.end10, !dbg !1103

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !1104, metadata !DIExpression()), !dbg !1094
  br label %for.cond1, !dbg !1105

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !1107
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1104, metadata !DIExpression()), !dbg !1094
  %cmp2 = icmp slt i64 %indvars.iv, %0, !dbg !1108
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !1110

for.body3:                                        ; preds = %for.cond1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1111
  %5 = mul nsw i64 %indvars.iv3, %2, !dbg !1113
  %6 = add nsw i64 %5, %indvars.iv, !dbg !1114
  %arrayidx = getelementptr inbounds double, double* %D, i64 %6, !dbg !1115
  %7 = load double, double* %arrayidx, align 8, !dbg !1115
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), double %7), !dbg !1116
  %8 = mul nsw i64 %indvars.iv3, %3, !dbg !1117
  %9 = add nsw i64 %8, %indvars.iv, !dbg !1119
  %10 = trunc i64 %9 to i32, !dbg !1120
  %rem = srem i32 %10, 20, !dbg !1120
  %cmp6 = icmp eq i32 %rem, 0, !dbg !1121
  br i1 %cmp6, label %if.then, label %if.end, !dbg !1122

if.then:                                          ; preds = %for.body3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1123
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1124
  br label %if.end, !dbg !1124

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc, !dbg !1125

for.inc:                                          ; preds = %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1126
  call void @llvm.dbg.value(metadata i32 undef, metadata !1104, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
  br label %for.cond1, !dbg !1127, !llvm.loop !1128

for.end:                                          ; preds = %for.cond1
  br label %for.inc8, !dbg !1129

for.inc8:                                         ; preds = %for.end
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !1130
  call void @llvm.dbg.value(metadata i32 undef, metadata !1097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1094
  br label %for.cond, !dbg !1131, !llvm.loop !1132

for.end10:                                        ; preds = %for.cond
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1134
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1135
  ret void, !dbg !1136
}

SUSAN: getting value name for: 
declare dso_local i32 @cudaConfigureCall(i64, i32, i64, i32, i64, %struct.CUstream_st*) #6

SUSAN: getting value name for: 
declare dso_local i32 @cudaMalloc(i8**, i64) #6

SUSAN: getting value name for: 
; Function Attrs: convergent noinline nounwind
define dso_local void @_Z14kernel_A_mul_BiiiiddPdS_S_S_S_.1(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %gridDim.x, i32 %gridDim.y, i32 %gridDim.z, i32 %blockDim.x, i32 %blockDim.y, i32 %blockDim.z, i32 %blockIdx.x, i32 %blockIdx.y, i32 %blockIdx.z, i32 %threadIdx.x, i32 %threadIdx.y, i32 %threadIdx.z) #9 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1137, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1140, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1141, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1142, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double %alpha, metadata !1143, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double %beta, metadata !1144, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1145, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %A, metadata !1146, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %B, metadata !1147, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %C, metadata !1148, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double* %D, metadata !1149, metadata !DIExpression()), !dbg !1139
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !1150
  %add = add i32 %mul, %threadIdx.x, !dbg !1151
  call void @llvm.dbg.value(metadata i32 %add, metadata !1152, metadata !DIExpression()), !dbg !1139
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !1153
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !1154
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1155, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1156, metadata !DIExpression()), !dbg !1139
  %cmp = icmp slt i32 %add, %ni, !dbg !1157
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1159

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nj, !dbg !1160
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1161

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 0, metadata !1162, metadata !DIExpression()), !dbg !1139
  %0 = sext i32 %nk to i64, !dbg !1163
  %1 = sext i32 %nj to i64, !dbg !1163
  %2 = sext i32 %add7 to i64, !dbg !1163
  br label %for.cond, !dbg !1163

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !1166
  %dot.0 = phi double [ 0.000000e+00, %if.then ], [ %add18, %for.inc ], !dbg !1139
  call void @llvm.dbg.value(metadata double %dot.0, metadata !1156, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1162, metadata !DIExpression()), !dbg !1139
  %cmp9 = icmp slt i64 %indvars.iv, %0, !dbg !1167
  br i1 %cmp9, label %for.body, label %for.end, !dbg !1169

for.body:                                         ; preds = %for.cond
  %mul10 = mul nsw i32 %add, %nk, !dbg !1170
  %3 = sext i32 %mul10 to i64, !dbg !1171
  %4 = add nsw i64 %3, %indvars.iv, !dbg !1171
  %arrayidx = getelementptr inbounds double, double* %A, i64 %4, !dbg !1172
  %5 = load double, double* %arrayidx, align 8, !dbg !1172
  %mul12 = fmul contract double %alpha, %5, !dbg !1173
  %6 = mul nsw i64 %indvars.iv, %1, !dbg !1174
  %7 = add nsw i64 %6, %2, !dbg !1175
  %arrayidx16 = getelementptr inbounds double, double* %B, i64 %7, !dbg !1176
  %8 = load double, double* %arrayidx16, align 8, !dbg !1176
  %mul17 = fmul contract double %mul12, %8, !dbg !1177
  %add18 = fadd contract double %dot.0, %mul17, !dbg !1178
  call void @llvm.dbg.value(metadata double %add18, metadata !1156, metadata !DIExpression()), !dbg !1139
  br label %for.inc, !dbg !1179

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1180
  call void @llvm.dbg.value(metadata i32 undef, metadata !1162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1139
  br label %for.cond, !dbg !1181, !llvm.loop !1182

for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !1139
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1156, metadata !DIExpression()), !dbg !1139
  %mul19 = mul nsw i32 %add, %nj, !dbg !1184
  %add20 = add nsw i32 %mul19, %add7, !dbg !1185
  %idxprom21 = sext i32 %add20 to i64, !dbg !1186
  %arrayidx22 = getelementptr inbounds double, double* %tmp, i64 %idxprom21, !dbg !1186
  store double %dot.0.lcssa, double* %arrayidx22, align 8, !dbg !1187
  br label %if.end, !dbg !1188

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !1189
}

SUSAN: getting value name for: 
; Function Attrs: convergent noinline nounwind
define dso_local void @_Z23kernel_D_plus_tmp_mul_CiiiiddPdS_S_S_S_.2(i32 %ni, i32 %nj, i32 %nk, i32 %nl, double %alpha, double %beta, double* %tmp, double* %A, double* %B, double* %C, double* %D, i32 %gridDim.x, i32 %gridDim.y, i32 %gridDim.z, i32 %blockDim.x, i32 %blockDim.y, i32 %blockDim.z, i32 %blockIdx.x, i32 %blockIdx.y, i32 %blockIdx.z, i32 %threadIdx.x, i32 %threadIdx.y, i32 %threadIdx.z) #9 {
entry:
  call void @llvm.dbg.value(metadata i32 %ni, metadata !1190, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nj, metadata !1193, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nk, metadata !1194, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 %nl, metadata !1195, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double %alpha, metadata !1196, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double %beta, metadata !1197, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %tmp, metadata !1198, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %A, metadata !1199, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %B, metadata !1200, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %C, metadata !1201, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double* %D, metadata !1202, metadata !DIExpression()), !dbg !1192
  %mul = mul i32 %blockDim.x, %blockIdx.x, !dbg !1203
  %add = add i32 %mul, %threadIdx.x, !dbg !1204
  call void @llvm.dbg.value(metadata i32 %add, metadata !1205, metadata !DIExpression()), !dbg !1192
  %mul5 = mul i32 %blockDim.y, %blockIdx.y, !dbg !1206
  %add7 = add i32 %mul5, %threadIdx.y, !dbg !1207
  call void @llvm.dbg.value(metadata i32 %add7, metadata !1208, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1209, metadata !DIExpression()), !dbg !1192
  %cmp = icmp slt i32 %add, %ni, !dbg !1210
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1212

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp slt i32 %add7, %nl, !dbg !1213
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1214

if.then:                                          ; preds = %land.lhs.true
  %mul9 = mul nsw i32 %add, %nj, !dbg !1215
  %add10 = add nsw i32 %mul9, %add7, !dbg !1217
  %idxprom = sext i32 %add10 to i64, !dbg !1218
  %arrayidx = getelementptr inbounds double, double* %D, i64 %idxprom, !dbg !1218
  %0 = load double, double* %arrayidx, align 8, !dbg !1218
  %mul11 = fmul contract double %0, %beta, !dbg !1219
  call void @llvm.dbg.value(metadata double %mul11, metadata !1209, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i32 0, metadata !1220, metadata !DIExpression()), !dbg !1192
  %1 = sext i32 %nj to i64, !dbg !1221
  %2 = sext i32 %nl to i64, !dbg !1221
  %3 = sext i32 %add7 to i64, !dbg !1221
  br label %for.cond, !dbg !1221

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then ], !dbg !1223
  %dot.0 = phi double [ %mul11, %if.then ], [ %add22, %for.inc ], !dbg !1224
  call void @llvm.dbg.value(metadata double %dot.0, metadata !1209, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1220, metadata !DIExpression()), !dbg !1192
  %cmp12 = icmp slt i64 %indvars.iv, %1, !dbg !1225
  br i1 %cmp12, label %for.body, label %for.end, !dbg !1227

for.body:                                         ; preds = %for.cond
  %mul13 = mul nsw i32 %add, %nj, !dbg !1228
  %4 = sext i32 %mul13 to i64, !dbg !1229
  %5 = add nsw i64 %4, %indvars.iv, !dbg !1229
  %arrayidx16 = getelementptr inbounds double, double* %tmp, i64 %5, !dbg !1230
  %6 = load double, double* %arrayidx16, align 8, !dbg !1230
  %7 = mul nsw i64 %indvars.iv, %2, !dbg !1231
  %8 = add nsw i64 %7, %3, !dbg !1232
  %arrayidx20 = getelementptr inbounds double, double* %C, i64 %8, !dbg !1233
  %9 = load double, double* %arrayidx20, align 8, !dbg !1233
  %mul21 = fmul contract double %6, %9, !dbg !1234
  %add22 = fadd contract double %dot.0, %mul21, !dbg !1235
  call void @llvm.dbg.value(metadata double %add22, metadata !1209, metadata !DIExpression()), !dbg !1192
  br label %for.inc, !dbg !1236

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1237
  call void @llvm.dbg.value(metadata i32 undef, metadata !1220, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1192
  br label %for.cond, !dbg !1238, !llvm.loop !1239

for.end:                                          ; preds = %for.cond
  %dot.0.lcssa = phi double [ %dot.0, %for.cond ], !dbg !1224
  call void @llvm.dbg.value(metadata double %dot.0.lcssa, metadata !1209, metadata !DIExpression()), !dbg !1192
  %mul23 = mul nsw i32 %add, %nl, !dbg !1241
  %add24 = add nsw i32 %mul23, %add7, !dbg !1242
  %idxprom25 = sext i32 %add24 to i64, !dbg !1243
  %arrayidx26 = getelementptr inbounds double, double* %D, i64 %idxprom25, !dbg !1243
  store double %dot.0.lcssa, double* %arrayidx26, align 8, !dbg !1244
  br label %if.end, !dbg !1245

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !1246
}

SUSAN: currGlob: @stderr = external dso_local global %struct._IO_FILE*, align 8
SUSAN: currGlob: @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
SUSAN: getting value name for: @.str = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
CBackend: writeOperand 3595: [8 x i8] c"%0.2lf \00"
CBackend: writeoperand here 3674? 
SUSAN: currGlob: @.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
SUSAN: getting value name for: @.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
CBackend: writeOperand 3595: [2 x i8] c"\0A\00"
CBackend: writeoperand here 3674? 
